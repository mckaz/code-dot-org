webpackJsonp([11],{1738:function(e,t,n){"use strict";function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(t,n){l(this,e),this.maze_=t,this.skin_=n.skin,this.level_=n.level,this.executionInfo=void 0}return e.prototype.succeeded=function(){if(this.maze_.subtype.finish)return this.maze_.pegmanX===this.maze_.subtype.finish.x&&this.maze_.pegmanY===this.maze_.subtype.finish.y},e.prototype.shouldCheckSuccessOnMove=function(){return!0},e.prototype.hasMessage=function(e){return!1},e.prototype.getMessage=function(e){return null},e.prototype.getTestResults=function(e){return this.maze_.getTestResults(!1)},e.prototype.terminateWithAppSpecificValue=function(){},e.prototype.onExecutionFinish=function(){this.executionInfo.isTerminated()||this.succeeded()||this.terminateWithAppSpecificValue()},e.prototype.shouldPreventFeedbackDialog=function(e){return!1},e}();t.default=a,e.exports=t.default},2134:function(e,t,n){"use strict";function l(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:50;return Math.floor(n*(t+.5)-e.pegmanHeight/2+e.pegmanYOffset)}function a(e,t,n,a,o,i){var r=arguments.length>6&&void 0!==arguments[6]?arguments[6]:50,s=e.pegmanXOffset||0;t.setAttribute("x",a*r-i*e.pegmanWidth+1+s),t.setAttribute("y",l(e,o)),n.setAttribute("x",a*r+1+s),n.setAttribute("y",t.getAttribute("y"))}function o(e,t,n,l){var o,r,p,d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:50,b=l.COLS*d,f=l.ROWS*d,k=document.createElementNS(i.SVG_NS,"rect");k.setAttribute("width",b),k.setAttribute("height",f),k.setAttribute("fill","#F1EEE7"),k.setAttribute("stroke-width",1),k.setAttribute("stroke","#CCB"),e.appendChild(k),t.background&&(p=document.createElementNS(i.SVG_NS,"image"),p.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",t.background),p.setAttribute("height",f),p.setAttribute("width",b),p.setAttribute("x",0),p.setAttribute("y",0),e.appendChild(p)),n.drawMapTiles(e);var y=document.createElementNS(i.SVG_NS,"path");if(y.setAttribute("id","hintPath"),y.setAttribute("stroke","#c00"),y.setAttribute("stroke-width","5"),y.setAttribute("fill","none"),y.setAttribute("stroke-linecap","round"),y.setAttribute("stroke-linejoin","round"),e.appendChild(y),n.start){var h=document.createElementNS(i.SVG_NS,"clipPath"),g="pegmanClipPath-"+(0,c.createUuid)();h.setAttribute("id",g);var v=document.createElementNS(i.SVG_NS,"rect");v.setAttribute("id","clipRect"),v.setAttribute("width",t.pegmanWidth),v.setAttribute("height",t.pegmanHeight),h.appendChild(v),e.appendChild(h);var x=document.createElementNS(i.SVG_NS,"image");x.setAttribute("id","pegman"),x.setAttribute("class","pegman-location"),x.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",t.avatar),x.setAttribute("height",t.pegmanHeight),x.setAttribute("width",21*t.pegmanWidth),x.setAttribute("clip-path","url(#"+g+")"),e.appendChild(x),a(t,x,v,n.start.x,n.start.y,s.default.directionToFrame(n.startDirection));var z=document.createElementNS(i.SVG_NS,"animate");z.setAttribute("id","pegmanFadeoutAnimation"),z.setAttribute("attributeType","CSS"),z.setAttribute("attributeName","opacity"),z.setAttribute("from",1),z.setAttribute("to",0),z.setAttribute("dur","1s"),z.setAttribute("begin","indefinite"),x.appendChild(z)}if(n.finish&&t.goalIdle){var E=document.createElementNS(i.SVG_NS,"image");E.setAttribute("id","finish"),E.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",t.goalIdle),E.setAttribute("height",u),E.setAttribute("width",_),e.appendChild(E),E.setAttribute("x",d*(n.finish.x+.5)-E.getAttribute("width")/2),E.setAttribute("y",d*(n.finish.y+.9)-E.getAttribute("height")),E.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",t.goalIdle),E.setAttribute("visibility","visible")}if(t.obstacleIdle){var T=0;for(r=0;r<l.ROWS;r++)for(o=0;o<l.COLS;o++){if(l.getTile(r,o)===m.OBSTACLE){var S=document.createElementNS(i.SVG_NS,"image");S.setAttribute("id","obstacle"+T),S.setAttribute("height",u*t.obstacleScale),S.setAttribute("width",_*t.obstacleScale),S.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",t.obstacleIdle),S.setAttribute("x",d*(o+.5)-S.getAttribute("width")/2),S.setAttribute("y",d*(r+.9)-S.getAttribute("height")),e.appendChild(S)}++T}}}Object.defineProperty(t,"__esModule",{value:!0}),t.getPegmanYForRow=l,t.displayPegman=a,t.default=o;var i=n(216),r=n(773),s=function(e){return e&&e.__esModule?e:{default:e}}(r),c=n(71),m=s.default.SquareType,u=43,_=50},2752:function(e,t,n){"use strict";function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}e.exports=function(){function e(t){l(this,e),this.grid_=t,this.ROWS=this.grid_.length,this.COLS=this.grid_[0].length,this.staticGrids=this.constructor.getAllStaticGrids(this.grid_),this.currentStaticGrid=this.staticGrids[0]}return e.cloneGrid=function(e){return e.map(function(e){return e.map(function(e){return e.clone()})})},e.getAllStaticGrids=function(e){var t=this,n=[e];return e.forEach(function(e,l){e.forEach(function(e,a){e.isVariable()&&function(){var o=e.getPossibleGridAssets(),i=[];o.forEach(function(e){n.forEach(function(n){var o=t.cloneGrid(n);o[l][a]=e,i.push(o)})}),n=i}()})}),n},e.deserialize=function(t,n){return new e(t.map(function(e){return e.map(n.deserialize)}))},e.parseFromOldValues=function(t,n,l){return new e(t.map(function(e,t){return e.map(function(e,a){var o=n&&n[t][a];return l.parseFromOldValues(e,o)})}))},e.prototype.resetDirt=function(){this.forEachCell(function(e){e.resetCurrentValue()})},e.prototype.forEachCell=function(e){this.currentStaticGrid.forEach(function(t,n){t.forEach(function(t,l){e(t,n,l)})})},e.prototype.getAllCells=function(){return this.currentStaticGrid.reduce(function(e,t){return e.concat(t)},[])},e.prototype.getCell=function(e,t){return this.currentStaticGrid[e]&&this.currentStaticGrid[e][t]},e.prototype.isDirt=function(e,t){var n=this.getCell(e,t);return n&&n.isDirt()},e.prototype.getTile=function(e,t){var n=this.getCell(e,t);return n&&n.getTile()},e.prototype.getValue=function(e,t){var n=this.getCell(e,t);return n&&n.getCurrentValue()},e.prototype.setValue=function(e,t,n){this.currentStaticGrid[e]&&this.currentStaticGrid[e][t]&&this.currentStaticGrid[e][t].setCurrentValue(n)},e.prototype.getVariableCell=function(e,t){if(this.grid_[e]&&this.grid_[e][t])return this.grid_[e][t]},e.prototype.useGridWithId=function(e){this.currentStaticGrid=this.staticGrids[e],this.resetDirt()},e.prototype.clone=function(){this.constructor.cloneGrid(this.grid_)},e.prototype.hasMultiplePossibleGrids=function(){return this.staticGrids.length>1},e}()},2905:function(e,t,n){"use strict";function l(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:s,t=arguments[1];return t.type===o?a({},e,{collectorCurrentCollected:0}):t.type===i?a({},e,{collectorCurrentCollected:t.currentCollected,collectorLastCollected:t.currentCollected}):t.type===r?a({},e,{collectorMinRequired:t.minRequired}):e}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e};t.default=l;var o="maze/COLLECTOR_RESET_CURRENT_COLLECTED",i="maze/COLLECTOR_SET_CURRENT_COLLECTED",r="maze/COLLECTOR_SET_MIN_REQUIRED",s={collectorCurrentCollected:0,collectorBestCollected:0,collectorMinRequired:1};t.resetCollectorCurrentCollected=function(){return{type:o}},t.setCollectorCurrentCollected=function(e){return{type:i,currentCollected:e}},t.setCollectorMinRequired=function(e){return{type:r,minRequired:e}}},2906:function(e,t,n){"use strict";function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=n(1738),r=function(e){return e&&e.__esModule?e:{default:e}}(i),s=n(216),c=function(e){function t(){return l(this,t),a(this,e.apply(this,arguments))}return o(t,e),t.prototype.collectedEverything=function(){return!this.maze_.map.currentStaticGrid.some(function(e){return e.some(function(e){return e.isDirt()&&e.getCurrentValue()>0})})},t.prototype.succeeded=function(){return this.collectedEverything()},t.prototype.hasMessage=function(e){return e===s.TestResults.APP_SPECIFIC_FAIL},t}(r.default);t.default=c,e.exports=t.default},2909:function(e,t,n){"use strict";var l=n(1756),a={test:"moveForward",type:"maze_moveForward"},o={test:"turnLeft",type:"maze_turn",titles:{DIR:"turnLeft"}},i={test:"turnRight",type:"maze_turn",titles:{DIR:"turnRight"}},r={test:"while",type:"maze_forever"},s={test:"isPathLeft",type:"maze_if",titles:{DIR:"isPathLeft"}},c={test:"isPathRight",type:"maze_if",titles:{DIR:"isPathRight"}},m={test:"isPathForward",type:"maze_ifElse",titles:{DIR:"isPathForward"}},u={test:"for",type:"controls_repeat",titles:{TIMES:"???"}};e.exports={moveNorth:l.simpleBlock("maze_moveNorth"),moveSouth:l.simpleBlock("maze_moveSouth"),moveEast:l.simpleBlock("maze_moveEast"),moveWest:l.simpleBlock("maze_moveWest"),controls_repeat_simplified:l.repeatSimpleBlock("???"),MOVE_FORWARD:a,TURN_LEFT:o,TURN_RIGHT:i,WHILE_LOOP:r,IS_PATH_LEFT:s,IS_PATH_RIGHT:c,IS_PATH_FORWARD:m,FOR_LOOP:u}},3116:function(e,t,n){n(151),n(152),e.exports=n(3117)},3117:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}var a=n(3118),o=l(a);(0,l(n(820)).default)().then(o.default)},3118:function(e,t,n){"use strict";(function(l){function a(e){return e&&e.__esModule?e:{default:e}}function o(e){e.skinsModule=b.default,e.blocksModule=u.default,(0,r.default)(f,p.default,e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=o;var i=n(853),r=a(i),s=n(3119),c=a(s),m=n(2907),u=a(m),_=n(3141),p=a(_),d=n(2760),b=a(d),f=new c.default;window.Maze=f,void 0!==l&&(l.Maze=window.Maze),e.exports=t.default}).call(t,n(59))},3119:function(e,t,n){"use strict";function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var a=n(1),o=n(32),i=n(53).Provider,r=n(1014),s=n(944),c=n(850),m=n(1004),u=n(594),_=n(71),p=n(216),d=p.TestResults,b=p.ResultType,f=n(808).generateCodeAliases,k=n(237).getStore,y=n(597).singleton,h=n(1005),g=h.getContainedLevelResultInfo,v=h.postContainedLevelAttempt,x=h.runAfterPostContainedLevel,z=n(3120),E=n(3121),T=n(3126),S=n(3127),A=n(2905),R=n(773),I=n(3128),M=n(3130).createResultsHandlerForSubtype;e.exports=function(){function e(){var t=this;l(this,e),this.runButtonClick_=function(){var e=document.getElementById("stepButton");e&&e.setAttribute("disabled",""),t.execute_(!1)},this.stepButtonClick_=function(){document.getElementById("stepButton").setAttribute("disabled",""),t.animating_?t.scheduleAnimations_(!0):t.execute_(!0)},this.resetButtonClick_=function(){document.getElementById("stepButton").removeAttribute("disabled"),t.reenableCachedBlockStates_()},this.finishButtonClick_=function(){r.clearTimeouts(),t.animating_=!1,t.displayFeedback_(!0)},this.reset_=function(){t.animating_=!1,t.controller.reset()},this.onReportComplete_=function(e){t.response=e,t.waitingForReport=!1,y().onReportComplete(e),t.displayFeedback_()},this.scale={snapRadius:1,stepSpeed:5},this.stepSpeed=100,this.animating_=!1,this.cachedBlockStates=[],this.resultsHandler=void 0,this.response=void 0,this.result=void 0,this.testResults=void 0,this.waitingForReport=void 0,y().setCheckForEmptyBlocks(!0)}return e.prototype.getAppReducers=function(){return{maze:A.default}},e.prototype.init=function(e){var t=this;y().runButtonClick=this.runButtonClick_,y().reset=this.reset_;var n=e.skin,l=e.level;for(var r in l.scale)this.scale[r]=l.scale[r];if(l.map&&l.shapeShift)for(var c=1,p=4*Math.random();c<p;c++)l.map=_.rotate(l.map),l.startDirection=(l.startDirection+3)%4;e.grayOutUndeletableBlocks=!0,e.forceInsertTopBlock="when_run",e.dropletConfig=S,this.controller=new I(l,n,e,{methods:{playAudio:y().playAudio.bind(y()),playAudioOnFailure:y().playAudioOnFailure.bind(y()),loadAudio:y().loadAudio.bind(y()),getTestResults:y().getTestResults.bind(y())}}),this.resultsHandler=M(this.controller,e),this.controller.subtype.overrideStepSpeed&&(this.scale.stepSpeed=this.controller.subtype.overrideStepSpeed),e.loadAudio=function(){y().loadAudio(t.controller.skin.winSound,"win"),y().loadAudio(t.controller.skin.startSound,"start"),y().loadAudio(t.controller.skin.failureSound,"failure"),y().loadAudio(t.controller.skin.obstacleSound,"obstacle"),y().loadAudio(t.controller.skin.wallSound,"wall"),t.controller.skin.walkSound&&y().loadAudio(t.controller.skin.walkSound,"walk"),t.controller.skin.additionalSound&&(y().loadAudio(t.controller.skin.wall0Sound,"wall0"),y().loadAudio(t.controller.skin.wall1Sound,"wall1"),y().loadAudio(t.controller.skin.wall2Sound,"wall2"),y().loadAudio(t.controller.skin.wall3Sound,"wall3"),y().loadAudio(t.controller.skin.wall4Sound,"wall4"),y().loadAudio(t.controller.skin.winGoalSound,"winGoal")),t.controller.skin.dirtSound&&(y().loadAudio(t.controller.skin.fillSound,"fill"),y().loadAudio(t.controller.skin.digSound,"dig")),t.controller.subtype.loadAudio(t.controller.skin)},e.afterInject=function(){y().isUsingBlockly()&&(Blockly.HSV_SATURATION=.6,Blockly.SNAP_RADIUS*=t.scale.snapRadius,Blockly.JavaScript.INFINITE_LOOP_TRAP=m.loopHighlight("Maze"));var e=document.getElementById("svgMaze");t.controller.map.resetDirt(),t.controller.subtype.initStartFinish(),t.controller.subtype.createDrawer(e),t.controller.subtype.initWallMap(),document.getElementById("visualizationColumn").style.width=t.controller.MAZE_WIDTH+"px",t.controller.initWithSvg(e);var n=document.getElementById("stepButton");u.addClickTouchEvent(n,t.stepButtonClick_);var l=document.getElementById("resetButton");u.addClickTouchEvent(l,t.resetButtonClick_);var a=document.getElementById("finishButton");a&&(a.setAttribute("disabled","disabled"),u.addClickTouchEvent(a,t.finishButtonClick_)),window.addEventListener("displayHintPath",function(n){t.controller.drawHintPath(e,n.detail)})},e.embed&&e.level.markdownInstructions&&!e.level.instructions&&(e.noInstructionsWhenCollapsed=!0,e.centerEmbedded=!1),y().setPageConstants(e,{hideRunButton:!(!this.controller.level.stepOnly||this.controller.level.edit_blocks)});var d=a.createElement(E,{searchWord:this.controller.level.searchWord,showCollectorGemCounter:this.controller.subtype.isCollector(),showFinishButton:this.controller.subtype.isCollector()&&!y().hasContainedLevels,showStepButton:!(!this.controller.level.step||this.controller.level.edit_blocks)});o.render(a.createElement(i,{store:k()},a.createElement(s,{visualizationColumn:d,onMount:y().init.bind(y(),e)})),document.getElementById(e.containerId))},e.prototype.beginAttempt=function(){var e=document.getElementById("runButton"),t=document.getElementById("resetButton");t.style.minWidth||(t.style.minWidth=e.offsetWidth+"px"),y().toggleRunReset("reset"),y().isUsingBlockly()&&Blockly.mainBlockSpace.traceOn(!0),y().reset(!1),y().attempts++},e.prototype.isPreAnimationFailure=function(e){return e===d.QUESTION_MARKS_IN_NUMBER_FIELD||e===d.EMPTY_FUNCTIONAL_BLOCK||e===d.EXTRA_TOP_BLOCKS_FAIL||e===d.EXAMPLE_FAILED||e===d.EMPTY_BLOCK_FAIL||e===d.EMPTY_FUNCTION_NAME},e.prototype.execute_=function(e){var t=this;this.beginAttempt(),this.prepareForExecution_();var n="";if(y().isUsingBlockly()){var l=Blockly.mainBlockSpace.getTopBlocks(!0);y().initializationBlocks&&(l=y().initializationBlocks.concat(l)),n=Blockly.Generator.blocksToCode("JavaScript",l)}else n=f(S,"Maze"),n+=y().editor.getValue();y().playAudio("start");try{var a=y().getTestResults(!1);if(!this.isPreAnimationFailure(a)&&!this.controller.level.edit_blocks){if(this.controller.map.hasMultiplePossibleGrids()){var o=[],i=[];this.controller.map.staticGrids.forEach(function(e,l){t.controller.map.useGridWithId(l),t.controller.subtype.reset(),c.evalWith(n,{Maze:T,executionInfo:t.executionInfo}),t.onExecutionFinish_(),!0===t.executionInfo.terminationValue()?o.push(l):i.push(l),t.controller.subtype.drawer.reset(),t.prepareForExecution_(),y().reset(!1)});var s=i.length>0?_.randomValue(i):_.randomValue(o);this.controller.map.useGridWithId(s),this.controller.subtype.reset()}c.evalWith(n,{Maze:T,executionInfo:this.executionInfo})}switch(this.onExecutionFinish_(),this.executionInfo.terminationValue()){case null:this.executionInfo.queueAction("finish",null),this.result=b.FAILURE,this.stepSpeed=150;break;case 1/0:this.result=b.TIMEOUT,this.executionInfo.queueAction("finish",null),this.stepSpeed=0;break;case!0:this.result=b.SUCCESS,this.stepSpeed=100;break;case!1:this.result=b.ERROR,this.stepSpeed=150;break;default:this.testResults=this.resultsHandler.getTestResults(this.executionInfo.terminationValue()),this.result=this.testResults>=d.MINIMUM_PASS_RESULT?b.SUCCESS:b.ERROR,this.executionInfo.queueAction("finish",null)}}catch(e){return this.result=b.ERROR,console.error("Unexpected exception: "+e+"\n"+e.stack),void(window.onerror&&window.onerror("UserCode:"+e.message,document.URL,0))}var m=this.result===b.SUCCESS;this.testResults===d.NO_TESTS_RUN&&(this.testResults=y().getTestResults(m));var u;if(this.controller.level.editCode)u=y().editor.getValue();else{var p=Blockly.Xml.blockSpaceToDom(Blockly.mainBlockSpace);u=Blockly.Xml.domToText(p)}if(this.waitingForReport=!0,y().hasContainedLevels&&!this.controller.level.edit_blocks?(v(y()),this.testResults=d.ALL_PASS,x(this.onReportComplete_)):y().report({app:"maze",level:this.controller.level.id,result:this.result===b.SUCCESS,testResult:this.testResults,program:encodeURIComponent(u),onComplete:this.onReportComplete_}),y().reset(!1),this.controller.resetDirtImages(!0),this.testResults===d.EXTRA_TOP_BLOCKS_FAIL)return this.result=b.ERROR,void this.displayFeedback_();if(this.animating_=!0,y().isUsingBlockly()&&(Blockly.mainBlockSpaceEditor.setEnableToolbox(!1),e)){if(0!==this.cachedBlockStates.length)throw new Error("Unexpected cachedBlockStates");Blockly.mainBlockSpace.getAllBlocks().forEach(function(e){t.cachedBlockStates.push({block:e,movable:e.isMovable(),deletable:e.isDeletable(),editable:e.isEditable()}),e.setMovable(!1),e.setDeletable(!1),e.setEditable(!1)})}this.controller.animationsController.stopIdling();var k=this.stepSpeed*this.scale.stepSpeed*this.controller.skin.movePegmanAnimationSpeedScale;r.setTimeout(function(){t.scheduleAnimations_(e)},k)},e.prototype.scheduleAnimations_=function(e){r.clearTimeouts();var t=this.stepSpeed*this.scale.stepSpeed*this.controller.skin.movePegmanAnimationSpeedScale,n=this.executionInfo.getActions(e);this.scheduleSingleAnimation_(0,n,e,t)},e.prototype.reenableCachedBlockStates_=function(){this.cachedBlockStates&&(this.cachedBlockStates.forEach(function(e){e.block.setMovable(e.movable),e.block.setDeletable(e.deletable),e.block.setEditable(e.editable)}),this.cachedBlockStates=[])},e.prototype.onExecutionFinish_=function(){this.executionInfo.isTerminated()||this.checkSuccess(),this.resultsHandler.onExecutionFinish()},e.prototype.displayFeedback_=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this.waitingForReport&&!this.animating_){var t={feedbackType:this.testResults,response:this.response,level:this.controller.level},n=void 0;y().hasContainedLevels?n=g().feedback:this.resultsHandler.hasMessage(this.testResults)&&(n=this.resultsHandler.getMessage(this.executionInfo.terminationValue())),n&&(t.message=n),e||(t.preventDialog=this.resultsHandler.shouldPreventFeedbackDialog(t.feedbackType)),y().displayFeedback(t)}},e.prototype.prepareForExecution_=function(){this.executionInfo=new z({ticks:100}),this.resultsHandler.executionInfo=this.executionInfo,this.result=b.UNSET,this.testResults=d.NO_TESTS_RUN,this.waitingForReport=!1,this.animating_=!1,this.response=null},e.prototype.animateAction_=function(e,t,n){switch(e.blockId&&y().highlight(String(e.blockId),t),e.command){case"north":this.controller.animatedMove(R.Direction.NORTH,n);break;case"east":this.controller.animatedMove(R.Direction.EAST,n);break;case"south":this.controller.animatedMove(R.Direction.SOUTH,n);break;case"west":this.controller.animatedMove(R.Direction.WEST,n);break;case"look_north":this.controller.animatedLook(R.Direction.NORTH);break;case"look_east":this.controller.animatedLook(R.Direction.EAST);break;case"look_south":this.controller.animatedLook(R.Direction.SOUTH);break;case"look_west":this.controller.animatedLook(R.Direction.WEST);break;case"fail_forward":this.controller.animatedFail(!0);break;case"fail_backward":this.controller.animatedFail(!1);break;case"left":this.controller.animatedTurn(R.TurnDirection.LEFT);break;case"right":this.controller.animatedTurn(R.TurnDirection.RIGHT);break;case"finish":this.finish_(n);break;case"putdown":this.controller.scheduleFill();break;case"pickup":this.controller.scheduleDig();break;case"nectar":this.controller.subtype.animateGetNectar();break;case"honey":this.controller.subtype.animateMakeHoney();break;case"get_corn":this.controller.subtype.animateGetCorn();break;case"get_pumpkin":this.controller.subtype.animateGetPumpkin();break;case"get_lettuce":this.controller.subtype.animateGetLettuce();break;case"plant":this.controller.subtype.animatePlant()}},e.prototype.finish_=function(e){if(this.testResults>=d.MINIMUM_PASS_RESULT){var t=document.getElementById("finishButton");t&&t.removeAttribute("disabled");document.getElementById("finish")&&y().playAudio("winGoal"),y().playAudioOnWin(),this.controller.animatedFinish(e)}else r.setTimeout(function(){y().playAudioOnFailure()},this.stepSpeed)},e.prototype.scheduleSingleAnimation_=function(e,t,n,l){var a=this;if(e>=t.length)return void this.finishAnimations_(n);this.animateAction_(t[e],n,l);var o=t[e]&&t[e].command,i=this.controller.skin.actionSpeedScale&&this.controller.skin.actionSpeedScale[o]||1,s=Math.round(l*i);r.setTimeout(function(){a.scheduleSingleAnimation_(e+1,t,n,l)},s)},e.prototype.finishAnimations_=function(e){var t=this,n=this.executionInfo.stepsRemaining(),l=document.getElementById("stepButton"),a=n?0:1e3;r.setTimeout(function(){n?l.removeAttribute("disabled"):(t.animating_=!1,y().isUsingBlockly()&&Blockly.mainBlockSpaceEditor.setEnableToolbox(!0),e&&t.result!==b.SUCCESS||(t.reenableCachedBlockStates_(),y().clearHighlighting()),t.displayFeedback_())},a)},e.prototype.shouldCheckSuccessOnMove=function(){return!this.controller.map.hasMultiplePossibleGrids()&&this.resultsHandler.shouldCheckSuccessOnMove()},e.prototype.checkSuccess=function(){var e=this.resultsHandler.succeeded();return e&&(this.executionInfo.queueAction("finish",null),this.executionInfo.terminateWithValue(!0)),e},e}()},3120:function(e,t,n){"use strict";function l(e){if(0===e.length)return!0;if(1===e.length){var t=e[0];if(1===t.length&&"finish"===t[0].command)return!0}return!1}var a=n(71).flatten,o=function(e){e=e||{},this.terminated_=!1,this.terminationValue_=null,this.steps_=[],this.ticks=e.ticks||1/0,this.collection_=null};e.exports=o,o.prototype.terminateWithValue=function(e){this.terminated_||(this.terminationValue_=e),this.terminated_=!0},o.prototype.isTerminated=function(){return this.terminated_},o.prototype.terminationValue=function(){return this.terminationValue_},o.prototype.queueAction=function(e,t){var n={command:e,blockId:t};this.collection_?this.collection_.push(n):this.steps_.push([n])},o.prototype.getActions=function(e){var t=[];return e&&this.stepsRemaining()?(t.push(this.steps_.shift()),l(this.steps_)&&t.push(this.steps_.splice(0))):t.push(this.steps_.splice(0)),a(t)},o.prototype.stepsRemaining=function(){return this.steps_.length>0},o.prototype.collectActions=function(){if(this.collection_)throw new Error("Already collecting");this.collection_=[]},o.prototype.stopCollecting=function(){if(!this.collection_)throw new Error("Not currently collecting");this.steps_.push(this.collection_),this.collection_=null},o.prototype.checkTimeout=function(){this.ticks--<0&&this.terminateWithValue(1/0)}},3121:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var a=n(1),o=l(a),i=n(3122),r=l(i),s=n(3123),c=l(s),m=n(3124),u=l(m),_=n(3125),p=l(_),d=n(819),b=l(d),f=n(824),k=l(f),y=function(e){return o.default.createElement("span",null,o.default.createElement(r.default,null),o.default.createElement(b.default,{showFinishButton:e.showFinishButton},o.default.createElement(c.default,{showStepButton:e.showStepButton}),e.showCollectorGemCounter&&o.default.createElement(p.default,null)),e.searchWord&&o.default.createElement(u.default,{searchWord:e.searchWord}),o.default.createElement(k.default,null))};y.propTypes={searchWord:a.PropTypes.string,showCollectorGemCounter:a.PropTypes.bool,showFinishButton:a.PropTypes.bool,showStepButton:a.PropTypes.bool.isRequired},t.default=y,e.exports=t.default},3122:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}var a=n(1),o=l(a),i=n(788),r=l(i),s=function(){return o.default.createElement(r.default,null,o.default.createElement("svg",{version:"1.1",id:"svgMaze"},o.default.createElement("g",{id:"look"},o.default.createElement("path",{d:"M 0,-15 a 15 15 0 0 1 15 15"}),o.default.createElement("path",{d:"M 0,-35 a 35 35 0 0 1 35 35"}),o.default.createElement("path",{d:"M 0,-55 a 55 55 0 0 1 55 55"}))))};e.exports=s},3123:function(e,t,n){"use strict";var l=n(1),a=function(e){return e&&e.__esModule?e:{default:e}}(l),o=n(851),i=function(e){var t="launch float-right";return e.showStepButton||(t+=" hide"),a.default.createElement("button",{id:"stepButton",className:t},a.default.createElement("img",{src:"/blockly/media/1x1.gif"}),o.step())};i.propTypes={showStepButton:l.PropTypes.bool.isRequired},e.exports=i},3124:function(e,t,n){"use strict";var l=n(1),a=function(e){return e&&e.__esModule?e:{default:e}}(l),o=n(851),i=n(737),r=function(e){return a.default.createElement(i,{id:"spelling-table-wrapper"},a.default.createElement("table",{id:"spelling-table",className:"float-right"},a.default.createElement("tbody",null,a.default.createElement("tr",null,a.default.createElement("td",{className:"spellingTextCell"},o.word(),":"),a.default.createElement("td",{className:"spellingButtonCell"},a.default.createElement("button",{id:"searchWord",className:"spellingButton",disabled:!0},a.default.createElement("img",{src:"/blockly/media/1x1.gif"}),e.searchWord))),a.default.createElement("tr",null,a.default.createElement("td",{className:"spellingTextCell"},o.youSpelled(),":"),a.default.createElement("td",{className:"spellingButtonCell"},a.default.createElement("button",{id:"currentWord",className:"spellingButton",disabled:!0},a.default.createElement("img",{src:"/blockly/media/1x1.gif"}),a.default.createElement("span",{id:"currentWordContents"})))))))};r.propTypes={searchWord:l.PropTypes.string.isRequired},e.exports=r},3125:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0}),t.CollectorGemCounter=void 0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},s=n(1),c=l(s),m=n(53),u=n(44),_=l(u),p=n(851),d=l(p),b=n(1153),f=l(b),k={container:{display:"inline-block",fontFamily:'"Gotham 5r"',paddingRight:10,pointerEvents:"none",textAlign:"right",verticalAlign:"top",marginTop:5},label:{color:_.default.white,textTransform:"capitalize",backgroundColor:_.default.charcoal,textAlign:"center",fontSize:14,borderRadius:2,width:"100%"},hr:{borderColor:_.default.lighter_gray,borderWidth:2,margin:"0 auto"},gemImage:{backgroundImage:'url("'+(0,f.default)("media/skins/collector/gem.png")+'")',backgroundSize:"120%",backgroundPosition:"center",display:"inline",padding:5},checkmark:{color:"lightgreen",fontSize:18,left:5,lineHeight:"25px",position:"relative",top:7},gemCount:{paddingRight:5,fontSize:17,color:_.default.charcoal}},y=t.CollectorGemCounter=function(e){function t(){return a(this,t),o(this,e.apply(this,arguments))}return i(t,e),t.prototype.render=function(){var e=this.props.currentCollected>=this.props.minRequired;return c.default.createElement("div",{style:k.container},c.default.createElement("div",{style:k.label},d.default.goal()),c.default.createElement("div",{style:k.gemImage},c.default.createElement("i",{style:r({},k.checkmark,{visibility:e?"visible":"hidden"}),className:"fa fa-check","aria-hidden":"true"})),c.default.createElement("span",{style:k.gemCount},this.props.currentCollected,"/",this.props.minRequired))},t}(c.default.Component);y.propTypes={currentCollected:s.PropTypes.number.isRequired,minRequired:s.PropTypes.number},y.defaultProps={minRequired:1},t.default=(0,m.connect)(function(e){return{currentCollected:e.maze.collectorCurrentCollected,minRequired:e.maze.collectorMinRequired}})(y)},3126:function(e,t,n){"use strict";function l(e,t){return t===r.constrainDirection4(e+m.LEFT)}function a(e,t){return t===r.constrainDirection4(e+m.RIGHT)}function o(e,t){return Math.abs(e-t)===c.BACKWARD}function i(e,t){Maze.executionInfo.collectActions(),k(e,t),b(c.FORWARD,t),Maze.executionInfo.stopCollecting()}var r=n(773),s=r.Direction,c=r.MoveDirection,m=r.TurnDirection,u=r.SquareType,_=n(71),p=function(e){return _.executeIfConditional(function(){return!Maze.executionInfo.isTerminated()},e)},d=function(e,t){var n,l,a=Maze.controller.pegmanD+e;switch(r.constrainDirection4(a)){case s.NORTH:n=Maze.controller.map.getTile(Maze.controller.pegmanY-1,Maze.controller.pegmanX),l="look_north";break;case s.EAST:n=Maze.controller.map.getTile(Maze.controller.pegmanY,Maze.controller.pegmanX+1),l="look_east";break;case s.SOUTH:n=Maze.controller.map.getTile(Maze.controller.pegmanY+1,Maze.controller.pegmanX),l="look_south";break;case s.WEST:n=Maze.controller.map.getTile(Maze.controller.pegmanY,Maze.controller.pegmanX-1),l="look_west"}return t&&Maze.executionInfo.queueAction(l,t),n!==u.WALL&&n!==u.OBSTACLE&&void 0!==n},b=function(e,t){if(!d(e,null))return Maze.executionInfo.queueAction("fail_"+(e?"backward":"forward"),t),void Maze.executionInfo.terminateWithValue(!1);var n,l=Maze.controller.pegmanD+e;switch(r.constrainDirection4(l)){case s.NORTH:Maze.controller.pegmanY--,n="north";break;case s.EAST:Maze.controller.pegmanX++,n="east";break;case s.SOUTH:Maze.controller.pegmanY++,n="south";break;case s.WEST:Maze.controller.pegmanX--,n="west"}Maze.executionInfo.queueAction(n,t),Maze.controller.subtype.isWordSearch()&&Maze.controller.subtype.markTileVisited(Maze.controller.pegmanY,Maze.controller.pegmanX,!1),Maze.shouldCheckSuccessOnMove()&&Maze.checkSuccess()},f=function(e,t){e===m.RIGHT?(Maze.controller.pegmanD+=m.RIGHT,Maze.executionInfo.queueAction("right",t)):(Maze.controller.pegmanD+=m.LEFT,Maze.executionInfo.queueAction("left",t)),Maze.controller.pegmanD=r.constrainDirection4(Maze.controller.pegmanD)},k=function(e,t){var n=Maze.controller.pegmanD;if(o(n,e)){var i=n-e<0,r=i?m.RIGHT:m.LEFT;f(r,t),f(r,t)}else a(n,e)?f(m.RIGHT,t):l(n,e)&&f(m.LEFT,t)};t.moveForward=p(function(e){b(c.FORWARD,e)}),t.moveBackward=p(function(e){b(c.BACKWARD,e)}),t.moveNorth=p(function(e){i(s.NORTH,e)}),t.moveSouth=p(function(e){i(s.SOUTH,e)}),t.moveEast=p(function(e){i(s.EAST,e)}),t.moveWest=p(function(e){i(s.WEST,e)}),t.turnLeft=p(function(e){f(m.LEFT,e)}),t.turnRight=p(function(e){f(m.RIGHT,e)}),t.isPathForward=p(function(e){return d(c.FORWARD,e)}),t.noPathForward=p(function(e){return!d(c.FORWARD,e)}),t.isPathRight=p(function(e){return d(c.RIGHT,e)}),t.isPathBackward=p(function(e){return d(c.BACKWARD,e)}),t.isPathLeft=p(function(e){return d(c.LEFT,e)}),t.pilePresent=p(function(e){var t=Maze.controller.pegmanX,n=Maze.controller.pegmanY;return Maze.controller.map.isDirt(n,t)&&Maze.controller.map.getValue(n,t)>0}),t.holePresent=p(function(e){var t=Maze.controller.pegmanX,n=Maze.controller.pegmanY;return Maze.controller.map.isDirt(n,t)&&Maze.controller.map.getValue(n,t)<0}),t.currentPositionNotClear=p(function(e){var t=Maze.controller.pegmanX,n=Maze.controller.pegmanY;return Maze.controller.map.isDirt(n,t)&&0!==Maze.controller.map.getValue(n,t)}),t.fill=p(function(e){Maze.executionInfo.queueAction("putdown",e);var t=Maze.controller.pegmanX,n=Maze.controller.pegmanY;Maze.controller.map.setValue(n,t,Maze.controller.map.getValue(n,t)+1)}),t.dig=p(function(e){Maze.executionInfo.queueAction("pickup",e);var t=Maze.controller.pegmanX,n=Maze.controller.pegmanY;Maze.controller.map.setValue(n,t,Maze.controller.map.getValue(n,t)-1)}),t.notFinished=p(function(){return!Maze.checkSuccess()}),t.loopHighlight=p(function(e){Maze.executionInfo.queueAction("null",e)}),t.getNectar=p(function(e){Maze.controller.subtype.tryGetNectar()&&Maze.executionInfo.queueAction("nectar",e)}),t.makeHoney=p(function(e){Maze.controller.subtype.tryMakeHoney()&&Maze.executionInfo.queueAction("honey",e)}),t.atFlower=p(function(e){var t=Maze.controller.pegmanX,n=Maze.controller.pegmanY;return Maze.executionInfo.queueAction("at_flower",e),Maze.controller.subtype.isFlower(n,t,!0)}),t.atHoneycomb=p(function(e){var t=Maze.controller.pegmanX,n=Maze.controller.pegmanY;return Maze.executionInfo.queueAction("at_honeycomb",e),Maze.controller.subtype.isHive(n,t,!0)}),t.nectarRemaining=p(function(e){return Maze.executionInfo.queueAction("nectar_remaining",e),Maze.controller.subtype.nectarRemaining(!0)}),t.honeyAvailable=p(function(e){return Maze.executionInfo.queueAction("honey_available",e),Maze.controller.subtype.honeyAvailable()}),t.nectarCollected=p(function(e){return Maze.executionInfo.queueAction("nectar_collected",e),Maze.controller.subtype.nectars_.length}),t.honeyCreated=p(function(e){return Maze.executionInfo.queueAction("honey_created",e),Maze.controller.subtype.honey_}),t.getCorn=p(function(e){Maze.controller.subtype.tryGetCorn()&&Maze.executionInfo.queueAction("get_corn",e)}),t.getPumpkin=p(function(e){Maze.controller.subtype.tryGetPumpkin()&&Maze.executionInfo.queueAction("get_pumpkin",e)}),t.getLettuce=p(function(e){Maze.controller.subtype.tryGetLettuce()&&Maze.executionInfo.queueAction("get_lettuce",e)}),t.atCorn=p(function(e){return Maze.executionInfo.queueAction("at_corn",e),Maze.controller.subtype.atCorn(e)}),t.atPumpkin=p(function(e){return Maze.executionInfo.queueAction("at_pumpkin",e),Maze.controller.subtype.atPumpkin(e)}),t.atLettuce=p(function(e){return Maze.executionInfo.queueAction("at_lettuce",e),Maze.controller.subtype.atLettuce(e)}),t.hasCorn=p(function(e){return Maze.executionInfo.queueAction("has_corn",e),Maze.controller.subtype.hasCorn(e)}),t.hasPumpkin=p(function(e){return Maze.executionInfo.queueAction("has_pumpkin",e),Maze.controller.subtype.hasPumpkin(e)}),t.hasLettuce=p(function(e){return Maze.executionInfo.queueAction("has_lettuce",e),Maze.controller.subtype.hasLettuce(e)}),t.plant=p(function(e){Maze.controller.subtype.tryPlant()&&Maze.executionInfo.queueAction("plant",e)}),t.atSoil=p(function(e){return Maze.executionInfo.queueAction("at_soil",e),Maze.controller.subtype.atSoil(e)}),t.atSprout=p(function(e){return Maze.executionInfo.queueAction("at_sprout",e),Maze.controller.subtype.atSprout(e)}),t.collect=p(function(e){var t=Maze.controller.pegmanX,n=Maze.controller.pegmanY;Maze.controller.subtype.tryCollect(n,t)&&Maze.executionInfo.queueAction("pickup",e)})},3127:function(e,t,n){"use strict";e.exports.blocks=[{func:"moveForward",category:"Movement"},{func:"turnLeft",category:"Movement"},{func:"turnRight",category:"Movement"}],e.exports.categories={Movement:{color:"red",blocks:[]}}},3128:function(e,t,n){"use strict";function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var a=function(){function e(e,t){var n=[],l=!0,a=!1,o=void 0;try{for(var i,r=e[Symbol.iterator]();!(l=(i=r.next()).done)&&(n.push(i.value),!t||n.length!==t);l=!0);}catch(e){a=!0,o=e}finally{try{!l&&r.return&&r.return()}finally{if(a)throw o}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o=n(1014),i=n(3129),r=n(2752),s=n(2134),c=n(1299).getSubtypeForSkin,m=n(773);e.exports=function(){function e(t,n,a){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};l(this,e),this.stepSpeed=100,this.level=t,this.skin=n,this.startDirection=null,this.subtype=null,this.map=null,this.animationsController=null,this.store=null,this.pegmanD=null,this.pegmanX=null,this.pegmanY=null,this.MAZE_HEIGHT=null,this.MAZE_WIDTH=null,this.PATH_WIDTH=null,this.PEGMAN_HEIGHT=null,this.PEGMAN_WIDTH=null,this.PEGMAN_X_OFFSET=null,this.PEGMAN_Y_OFFSET=null,this.SQUARE_SIZE=null,o.reduxStore&&this.addReduxStore(o.reduxStore),o.methods&&this.rebindMethods(o.methods);var i=c(a.skinId);this.subtype=new i(this,a),this.loadLevel_()}return e.prototype.playAudio=function(){},e.prototype.playAudioOnFailure=function(){},e.prototype.loadAudio=function(){},e.prototype.getTestResults=function(){},e.prototype.rebindMethods=function(e){this.playAudio=e.playAudio||this.playAudio,this.playAudioOnFailure=e.playAudioOnFailure||this.playAudioOnFailure,this.loadAudio=e.loadAudio||this.loadAudio,this.getTestResults=e.getTestResults||this.getTestResults},e.prototype.addReduxStore=function(e){this.store=e},e.prototype.initWithSvg=function(e){e.setAttribute("width",this.MAZE_WIDTH),e.setAttribute("height",this.MAZE_HEIGHT),s.default(e,this.skin,this.subtype,this.map,this.SQUARE_SIZE),this.animationsController=new i(this,e)},e.prototype.loadLevel_=function(){this.level.serializedMaze?this.map=r.deserialize(this.level.serializedMaze,this.subtype.getCellClass()):this.map=r.parseFromOldValues(this.level.map,this.level.initialDirt,this.subtype.getCellClass()),this.startDirection=this.level.startDirection,this.level.fastGetNectarAnimation&&(this.skin.actionSpeedScale.nectar=.5),this.SQUARE_SIZE=50,this.PEGMAN_HEIGHT=this.skin.pegmanHeight,this.PEGMAN_WIDTH=this.skin.pegmanWidth,this.PEGMAN_X_OFFSET=this.skin.pegmanXOffset||0,this.PEGMAN_Y_OFFSET=this.skin.pegmanYOffset,this.MAZE_WIDTH=this.SQUARE_SIZE*this.map.COLS,this.MAZE_HEIGHT=this.SQUARE_SIZE*this.map.ROWS,this.PATH_WIDTH=this.SQUARE_SIZE/3},e.prototype.resetDirtImages=function(e){var t=this;this.map.forEachCell(function(n,l,a){t.subtype.drawer.updateItemImage(l,a,e)})},e.prototype.gridNumberToPosition_=function(e){return(e+.5)*this.SQUARE_SIZE},e.prototype.drawHintPath=function(e,t){var n=this;e.getElementById("hintPath").setAttribute("d","M"+t.map(function(e){var t=a(e,2),l=t[0],o=t[1];return n.gridNumberToPosition_(l)+","+n.gridNumberToPosition_(o)}).join(" "))},e.prototype.reset=function(e){this.subtype.reset(),o.clearTimeouts(),this.pegmanX=this.subtype.start.x,this.pegmanY=this.subtype.start.y,this.pegmanD=this.startDirection,this.animationsController.reset(e),this.map.resetDirt(),this.resetDirtImages(!1);var t,n,l=0;for(n=0;n<this.map.ROWS;n++)for(t=0;t<this.map.COLS;t++){var a=document.getElementById("obstacle"+l);a&&a.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",this.skin.obstacleIdle),++l}this.subtype.resetTiles?this.subtype.resetTiles():this.resetTiles_()},e.prototype.resetTiles_=function(){for(var e=0,t=0;t<this.map.ROWS;t++)for(var n=0;n<this.map.COLS;n++){var l=document.getElementById("tileClipPath"+e);l.setAttribute("visibility","visible");var a=document.getElementById("tileElement"+e);a.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",this.skin.tiles),a.setAttribute("opacity",1),e++}},e.prototype.animatedFinish=function(e){this.animationsController.scheduleDance(!0,e)},e.prototype.animatedMove=function(e,t){var n=m.directionToDxDy(e),l=this.pegmanX+n.dx,a=this.pegmanY+n.dy;this.animationsController.scheduleMove(l,a,t),this.playAudio("walk"),this.pegmanX=l,this.pegmanY=a},e.prototype.animatedTurn=function(e){var t=this.pegmanD+e;this.animationsController.scheduleTurn(t),this.pegmanD=m.constrainDirection4(t)},e.prototype.animatedFail=function(e){var t=this,n=m.directionToDxDy(this.pegmanD),l=n.dx,a=n.dy;e||(l=-l,a=-a);var i=this.pegmanX+l,r=this.pegmanY+a,s=m.directionToFrame(this.pegmanD);this.animationsController.displayPegman(this.pegmanX+l/4,this.pegmanY+a/4,s);var c=this.map.getTile(r,i);c===m.SquareType.WALL||void 0===c||this.subtype.isScrat()&&c===m.SquareType.OBSTACLE?(this.playAudio("wall"),void 0!==c&&this.playAudio("wall"+this.subtype.wallMap[r][i]),this.subtype.isScrat()&&c===m.SquareType.OBSTACLE&&this.animationsController.crackSurroundingIce(i,r),this.animationsController.scheduleWallHit(i,r,l,a,s),o.setTimeout(function(){t.playAudioOnFailure()},2*this.stepSpeed)):c===m.SquareType.OBSTACLE&&(this.playAudio("obstacle"),this.animationsController.scheduleObstacleHit(i,r,l,a,s),o.setTimeout(function(){t.playAudioOnFailure()},this.stepSpeed))},e.prototype.animatedLook=function(e){var t=this.pegmanX,n=this.pegmanY;switch(e){case m.Direction.NORTH:t+=.5;break;case m.Direction.EAST:t+=1,n+=.5;break;case m.Direction.SOUTH:t+=.5,n+=1;break;case m.Direction.WEST:n+=.5}t*=this.SQUARE_SIZE,n*=this.SQUARE_SIZE;var l=90*e-45;this.animationsController.scheduleLook(t,n,l)},e.prototype.scheduleDirtChange_=function(e){var t=this.pegmanX,n=this.pegmanY,l=this.map.getValue(n,t)||0;this.map.setValue(n,t,l+e.amount),this.subtype.scheduleDirtChange(n,t),this.playAudio(e.sound)},e.prototype.scheduleFill=function(){this.scheduleDirtChange_({amount:1,sound:"fill"})},e.prototype.scheduleDig=function(){this.scheduleDirtChange_({amount:-1,sound:"dig"})},e}()},3129:function(e,t,n){"use strict";function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var a=n(216).SVG_NS,o=n(2134),i=o.displayPegman,r=o.getPegmanYForRow,s=n(1014),c=n(71),m=n(773);e.exports=function(){function e(t,n){l(this,e),this.maze=t,this.svg=n,this.createAnimations_()}return e.prototype.createAnimations_=function(){var e=this;if(this.maze.skin.idlePegmanAnimation&&(this.createPegmanAnimation_({idStr:"idle",pegmanImage:this.maze.skin.idlePegmanAnimation,row:this.maze.subtype.start.y,col:this.maze.subtype.start.x,direction:this.maze.startDirection,numColPegman:this.maze.skin.idlePegmanCol,numRowPegman:this.maze.skin.idlePegmanRow}),this.maze.skin.idlePegmanCol>1||this.maze.skin.idlePegmanRow>1)){var t=this.maze.skin.idlePegmanRow,n=document.getElementById("idlePegman"),l=0;setInterval(function(){"visible"===n.getAttribute("visibility")&&(e.updatePegmanAnimation_({idStr:"idle",row:e.maze.subtype.start.y,col:e.maze.subtype.start.x,direction:e.maze.startDirection,animationRow:l}),l=(l+1)%t)},600)}if(this.maze.skin.celebrateAnimation&&this.createPegmanAnimation_({idStr:"celebrate",pegmanImage:this.maze.skin.celebrateAnimation,row:this.maze.subtype.start.y,col:this.maze.subtype.start.x,direction:m.Direction.NORTH,numColPegman:this.maze.skin.celebratePegmanCol,numRowPegman:this.maze.skin.celebratePegmanRow}),this.maze.skin.wallPegmanAnimation&&this.createPegmanAnimation_({idStr:"wall",pegmanImage:this.maze.skin.wallPegmanAnimation}),this.maze.skin.hittingWallAnimation&&this.maze.skin.hittingWallAnimationFrameNumber&&(this.createPegmanAnimation_({idStr:"wall",pegmanImage:this.maze.skin.hittingWallAnimation,numColPegman:this.maze.skin.hittingWallPegmanCol,numRowPegman:this.maze.skin.hittingWallPegmanRow}),document.getElementById("wallPegman").setAttribute("visibility","hidden")),this.maze.skin.movePegmanAnimation&&this.createPegmanAnimation_({idStr:"move",pegmanImage:this.maze.skin.movePegmanAnimation,numColPegman:4,numRowPegman:this.maze.skin.movePegmanAnimationFrameNumber||9}),this.maze.skin.hittingWallAnimation){var o=document.createElementNS(a,"image");o.setAttribute("id","wallAnimation"),o.setAttribute("height",this.maze.SQUARE_SIZE),o.setAttribute("width",this.maze.SQUARE_SIZE),o.setAttribute("visibility","hidden"),this.svg.appendChild(o)}},e.prototype.reset=function(e){var t=this;if(e){this.maze.skin.danceOnLoad&&this.scheduleDance(!1,750),s.setTimeout(function(){t.maze.stepSpeed=100,t.scheduleTurn(t.maze.startDirection)},900)}else{this.displayPegman(this.maze.pegmanX,this.maze.pegmanY,m.directionToFrame(this.maze.pegmanD));var n=document.getElementById("finish");n&&n.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",this.maze.skin.goalIdle)}var l=document.getElementById("look");l.style.display="none",l.parentNode.appendChild(l);for(var a=l.getElementsByTagName("path"),o=0;o<a.length;o++){a[o].setAttribute("stroke",this.maze.skin.look)}var i=document.getElementById("pegman");if(i.setAttribute("opacity",1),this.maze.skin.idlePegmanAnimation){i.setAttribute("visibility","hidden");document.getElementById("idlePegman").setAttribute("visibility","visible")}else i.setAttribute("visibility","visible");if(this.maze.skin.wallPegmanAnimation){document.getElementById("wallPegman").setAttribute("visibility","hidden")}if(this.maze.skin.movePegmanAnimation){document.getElementById("movePegman").setAttribute("visibility","hidden")}if(this.maze.skin.celebrateAnimation){document.getElementById("celebratePegman").setAttribute("visibility","hidden")}},e.prototype.createPegmanAnimation_=function(e){var t=document.createElementNS(a,"clipPath");t.setAttribute("id",e.idStr+"PegmanClip");var n=document.createElementNS(a,"rect");n.setAttribute("id",e.idStr+"PegmanClipRect"),void 0!==e.col&&n.setAttribute("x",e.col*this.maze.SQUARE_SIZE+1+this.maze.PEGMAN_X_OFFSET),void 0!==e.row&&n.setAttribute("y",r(this.maze.skin,e.row)),n.setAttribute("width",this.maze.PEGMAN_WIDTH),n.setAttribute("height",this.maze.PEGMAN_HEIGHT),t.appendChild(n),this.svg.appendChild(t);var l=e.pegmanImage,o=document.createElementNS(a,"image");if(o.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",l),o.setAttribute("height",this.maze.PEGMAN_HEIGHT*(e.numRowPegman||1)),o.setAttribute("width",this.maze.PEGMAN_WIDTH*(e.numColPegman||4)),o.setAttribute("clip-path","url(#"+e.idStr+"PegmanClip)"),o.setAttribute("id",e.idStr+"Pegman"),this.svg.appendChild(o),void 0!==e.col&&void 0!==e.direction){var i=this.maze.SQUARE_SIZE*e.col-e.direction*this.maze.PEGMAN_WIDTH+1+this.maze.PEGMAN_X_OFFSET;o.setAttribute("x",i)}void 0!==e.row&&o.setAttribute("y",r(this.maze.skin,e.row))},e.prototype.getPegmanFrameOffsetY_=function(e){return(e=e||0)*this.maze.PEGMAN_HEIGHT},e.prototype.updatePegmanAnimation_=function(e){var t=document.getElementById(e.idStr+"PegmanClipRect");t.setAttribute("x",e.col*this.maze.SQUARE_SIZE+1+this.maze.PEGMAN_X_OFFSET),t.setAttribute("y",r(this.maze.skin,e.row));var n=document.getElementById(e.idStr+"Pegman"),l=this.maze.SQUARE_SIZE*e.col-e.direction*this.maze.PEGMAN_WIDTH+1+this.maze.PEGMAN_X_OFFSET;n.setAttribute("x",l);var a=r(this.maze.skin,e.row)-this.getPegmanFrameOffsetY_(e.animationRow);n.setAttribute("y",a),n.setAttribute("visibility","visible")},e.prototype.scheduleSheetedMovement_=function(e,t,n,l,a,o,i){var r=this,m=document.getElementById("pegman");c.range(0,n-1).forEach(function(c){s.setTimeout(function(){i&&m.setAttribute("visibility","hidden"),r.updatePegmanAnimation_({idStr:a,col:e.x+t.x*c/n,row:e.y+t.y*c/n,direction:o,animationRow:c})},l*c)})},e.prototype.scheduleMove=function(e,t,n){var l,a,o=this,i=this.maze.pegmanX,r=this.maze.pegmanY,u=this.maze.pegmanD,_=e-i,p=t-r;if(this.maze.skin.movePegmanAnimation){l=this.maze.skin.movePegmanAnimationFrameNumber;var d=document.getElementById("pegman"),b=document.getElementById("movePegman");a=n/l,this.scheduleSheetedMovement_({x:i,y:r},{x:_,y:p},l,a,"move",u,!0),s.setTimeout(function(){b.setAttribute("visibility","hidden"),d.setAttribute("visibility","visible"),o.displayPegman(e,t,m.directionToFrame(u)),o.maze.subtype.isWordSearch()&&o.maze.subtype.markTileVisited(t,e,!0)},a*l)}else l=4,a=n/l,c.range(1,l).forEach(function(e){s.setTimeout(function(){o.displayPegman(i+_*e/l,r+p*e/l,m.directionToFrame(u))},a*e)});if(this.maze.skin.approachingGoalAnimation){var f=document.getElementById("finish");this.maze.subtype.finish&&Math.abs(e-this.maze.subtype.finish.x)<=1&&Math.abs(t-this.maze.subtype.finish.y)<=1?f.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",this.maze.skin.approachingGoalAnimation):f.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",this.maze.skin.goalIdle)}},e.prototype.scheduleTurn=function(e){var t=this,n=this.maze.pegmanD,l=e-n;c.range(1,4).forEach(function(e){s.setTimeout(function(){t.displayPegman(t.maze.pegmanX,t.maze.pegmanY,m.directionToFrame(n+l*e/4))},t.maze.stepSpeed*(e-1))})},e.prototype.crackSurroundingIce=function(e,t){var n=this;this.updateSurroundingTiles_(t,e,function(e,t){t.getTile()===m.SquareType.OPEN?e.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",n.maze.skin.largerObstacleAnimationTiles):t.getTile()===m.SquareType.OBSTACLE&&e.setAttribute("opacity",0)})},e.prototype.updateSurroundingTiles_=function(e,t,n){for(var l=[[e-1,t-1],[e-1,t],[e-1,t+1],[e,t-1],[e,t],[e,t+1],[e+1,t-1],[e+1,t],[e+1,t+1]],a=0;a<l.length;++a){var o=l[a][1],i=l[a][0],r=o+this.maze.map.COLS*i,s=document.getElementById("tileElement"+r);s&&n(s,this.maze.map.getCell(i,o))}},e.prototype.scheduleWallHit=function(e,t,n,l,a){var o=this;if(this.maze.skin.hittingWallAnimation){var i=document.getElementById("wallAnimation"),r=this.maze.skin.hittingWallAnimationFrameNumber||0;if(r>1){l>=0&&(l+=1);this.scheduleSheetedMovement_({x:this.maze.pegmanX,y:this.maze.pegmanY},{x:n,y:l},r,100,"wall",m.Direction.NORTH,!0),setTimeout(function(){document.getElementById("wallPegman").setAttribute("visibility","hidden")},100*r)}else s.setTimeout(function(){i.setAttribute("x",o.maze.SQUARE_SIZE*(o.maze.pegmanX+.5+.5*n)-i.getAttribute("width")/2),i.setAttribute("y",o.maze.SQUARE_SIZE*(o.maze.pegmanY+1+.5*l)-i.getAttribute("height")),i.setAttribute("visibility","visible"),i.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",o.maze.skin.hittingWallAnimation)},this.maze.stepSpeed/2)}s.setTimeout(function(){o.displayPegman(o.maze.pegmanX,o.maze.pegmanY,a)},this.maze.stepSpeed),s.setTimeout(function(){o.displayPegman(o.maze.pegmanX+n/4,o.maze.pegmanY+l/4,a)},2*this.maze.stepSpeed),s.setTimeout(function(){o.displayPegman(o.maze.pegmanX,o.maze.pegmanY,a)},3*this.maze.stepSpeed),this.maze.skin.wallPegmanAnimation&&s.setTimeout(function(){document.getElementById("pegman").setAttribute("visibility","hidden"),o.updatePegmanAnimation_({idStr:"wall",row:o.maze.pegmanY,col:o.maze.pegmanX,direction:o.maze.pegmanD})},4*this.maze.stepSpeed)},e.prototype.scheduleObstacleHit=function(e,t,n,l,a){var o=this,i=e+this.maze.map.COLS*t;if(document.getElementById("obstacle"+i).setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",this.maze.skin.obstacleAnimation),s.setTimeout(function(){o.displayPegman(o.maze.pegmanX+n/2,o.maze.pegmanY+l/2,a)},this.maze.stepSpeed),this.maze.skin.largerObstacleAnimationTiles&&s.setTimeout(function(){o.updateSurroundingTiles_(t,e,function(e){return e.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",o.maze.skin.largerObstacleAnimationTiles)})},this.maze.stepSpeed),!this.maze.skin.nonDisappearingPegmanHittingObstacle){var r=document.getElementById("pegman");s.setTimeout(function(){r.setAttribute("visibility","hidden")},2*this.maze.stepSpeed)}},e.prototype.scheduleLook=function(e,t,n){var l=document.getElementById("look");l.setAttribute("transform","translate("+e+", "+t+") rotate("+n+" 0 0) scale(.4)");var a=l.getElementsByTagName("path");l.style.display="inline";for(var o=0;o<a.length;o++){var i=a[o];this.scheduleLookStep_(i,this.maze.stepSpeed*o)}},e.prototype.scheduleLookStep_=function(e,t){var n=this;s.setTimeout(function(){e.style.display="inline",window.setTimeout(function(){e.style.display="none"},2*n.maze.stepSpeed)},t)},e.prototype.stopIdling=function(){if(this.maze.skin.idlePegmanAnimation){var e=document.getElementById("pegman");document.getElementById("idlePegman").setAttribute("visibility","hidden"),e.setAttribute("visibility","visible")}},e.prototype.scheduleDance=function(e,t){var n=this,l=document.getElementById("finish");if(e&&this.maze.skin.celebrateAnimation){l&&l.setAttribute("visibility","hidden");var a=this.maze.skin.celebratePegmanRow,o=t/a,i={x:this.maze.pegmanX,y:this.maze.pegmanY};return void this.scheduleSheetedMovement_({x:i.x,y:i.y},{x:0,y:0},a,o,"celebrate",m.Direction.NORTH,!0)}var r=m.directionToFrame(this.maze.pegmanD);this.displayPegman(this.maze.pegmanX,this.maze.pegmanY,16),e&&l&&l.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",this.maze.skin.goalAnimation);var c=t/5;s.setTimeout(function(){n.displayPegman(n.maze.pegmanX,n.maze.pegmanY,18)},c),s.setTimeout(function(){n.displayPegman(n.maze.pegmanX,n.maze.pegmanY,20)},2*c),s.setTimeout(function(){n.displayPegman(n.maze.pegmanX,n.maze.pegmanY,18)},3*c),s.setTimeout(function(){n.displayPegman(n.maze.pegmanX,n.maze.pegmanY,20)},4*c),s.setTimeout(function(){e&&!n.maze.skin.turnAfterVictory||n.displayPegman(n.maze.pegmanX,n.maze.pegmanY,r),e&&n.maze.skin.transparentTileEnding&&n.setTileTransparent_(),n.maze.subtype.isWordSearch()&&n.setPegmanTransparent_()},5*c)},e.prototype.setTileTransparent_=function(){for(var e=0,t=0;t<this.maze.map.ROWS;t++)for(var n=0;n<this.maze.map.COLS;n++){var l=document.getElementById("tileElement"+e),a=document.getElementById("tileAnimation"+e);l&&l.setAttribute("opacity",0),a&&a.beginElement&&a.beginElement(),e++}},e.prototype.setPegmanTransparent_=function(){var e=document.getElementById("pegmanFadeoutAnimation"),t=document.getElementById("pegman");t&&t.setAttribute("opacity",0),e&&e.beginElement&&e.beginElement()},e.prototype.displayPegman=function(e,t,n){var l=document.getElementById("pegman"),a=document.getElementById("clipRect");i(this.maze.skin,l,a,e,t,n)},e}()},3130:function(e,t,n){"use strict";function l(e,t){var n=f;return e.subtype instanceof a?n=m:e.subtype instanceof o?n=u:e.subtype instanceof i?n=_:e.subtype instanceof r?n=p:e.subtype instanceof s?n=d:e.subtype instanceof c&&(n=b),new n(e,t)}Object.defineProperty(t,"__esModule",{value:!0}),t.createResultsHandlerForSubtype=l;var a=n(2135),o=n(2136),i=n(2137),r=n(2138),s=n(2139),c=n(2140),m=n(3131),u=n(3132),_=n(3133),p=n(3134),d=n(3135),b=n(3136),f=n(1738)},3131:function(e,t,n){"use strict";function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=n(1738),r=function(e){return e&&e.__esModule?e:{default:e}}(i),s=function(e){function t(){return l(this,t),a(this,e.apply(this,arguments))}return o(t,e),t.prototype.succeeded=function(){return this.maze_.subtype.finish?e.prototype.succeeded.call(this):this.isDirtCorrect_()},t.prototype.isDirtCorrect_=function(){for(var e=0;e<this.maze_.map.ROWS;e++)for(var t=0;t<this.maze_.map.COLS;t++)if(this.maze_.map.isDirt(e,t)&&0!==this.maze_.map.getValue(e,t))return!1;return!0},t}(r.default);t.default=s,e.exports=t.default},3132:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var r=n(2906),s=l(r),c=n(851),m=l(c),u=n(216),_=function(e){function t(n,l){a(this,t);var i=o(this,e.call(this,n,l));return i.nectarGoal_=l.level.nectarGoal||0,i.honeyGoal_=l.level.honeyGoal||0,i.maze_.subtype.on("notAtFlower",function(){i.executionInfo.terminateWithValue(u.BeeTerminationValue.NOT_AT_FLOWER)}),i.maze_.subtype.on("flowerEmpty",function(){i.executionInfo.terminateWithValue(u.BeeTerminationValue.FLOWER_EMPTY)}),i.maze_.subtype.on("notAtHive",function(){i.executionInfo.terminateWithValue(u.BeeTerminationValue.NOT_AT_HONEYCOMB)}),i.maze_.subtype.on("hiveFull",function(){i.executionInfo.terminateWithValue(u.BeeTerminationValue.HONEYCOMB_FULL)}),i}return i(t,e),t.prototype.succeeded=function(){return!(this.maze_.subtype.getHoneyCount()<this.honeyGoal_||this.maze_.subtype.getNectarCount()<this.nectarGoal_)&&(!(!this.maze_.subtype.checkedAllClouded()||!this.maze_.subtype.checkedAllPurple())&&e.prototype.succeeded.call(this))},t.prototype.collectedEverything=function(){return!this.maze_.map.hasMultiplePossibleGrids()||e.prototype.collectedEverything.call(this)},t.prototype.terminateWithAppSpecificValue=function(){var e=this.executionInfo;this.maze_.subtype.getNectarCount()<this.nectarGoal_?e.terminateWithValue(u.BeeTerminationValue.INSUFFICIENT_NECTAR):this.maze_.subtype.getHoneyCount()<this.honeyGoal_?e.terminateWithValue(u.BeeTerminationValue.INSUFFICIENT_HONEY):this.maze_.subtype.checkedAllClouded()?this.maze_.subtype.checkedAllPurple()?this.collectedEverything()||e.terminateWithValue(u.BeeTerminationValue.DID_NOT_COLLECT_EVERYTHING):e.terminateWithValue(u.BeeTerminationValue.UNCHECKED_PURPLE):e.terminateWithValue(u.BeeTerminationValue.UNCHECKED_CLOUD)},t.prototype.getTestResults=function(t){switch(t){case u.BeeTerminationValue.NOT_AT_FLOWER:case u.BeeTerminationValue.FLOWER_EMPTY:case u.BeeTerminationValue.NOT_AT_HONEYCOMB:case u.BeeTerminationValue.HONEYCOMB_FULL:return u.TestResults.APP_SPECIFIC_FAIL;case u.BeeTerminationValue.UNCHECKED_CLOUD:case u.BeeTerminationValue.UNCHECKED_PURPLE:case u.BeeTerminationValue.INSUFFICIENT_NECTAR:case u.BeeTerminationValue.INSUFFICIENT_HONEY:case u.BeeTerminationValue.DID_NOT_COLLECT_EVERYTHING:var n=this.maze_.getTestResults(!0);return(n>=u.TestResults.TOO_MANY_BLOCKS_FAIL||n===u.TestResults.BLOCK_LIMIT_FAIL)&&(n=u.TestResults.APP_SPECIFIC_FAIL),n}return e.prototype.getTestResults.call(this,t)},t.prototype.getMessage=function(t){switch(t){case u.BeeTerminationValue.NOT_AT_FLOWER:return m.default.notAtFlowerError();case u.BeeTerminationValue.FLOWER_EMPTY:return m.default.flowerEmptyError();case u.BeeTerminationValue.NOT_AT_HONEYCOMB:return m.default.notAtHoneycombError();case u.BeeTerminationValue.HONEYCOMB_FULL:return m.default.honeycombFullError();case u.BeeTerminationValue.UNCHECKED_CLOUD:return m.default.uncheckedCloudError();case u.BeeTerminationValue.UNCHECKED_PURPLE:return m.default.uncheckedPurpleError();case u.BeeTerminationValue.INSUFFICIENT_NECTAR:return m.default.insufficientNectar();case u.BeeTerminationValue.INSUFFICIENT_HONEY:return m.default.insufficientHoney();case u.BeeTerminationValue.DID_NOT_COLLECT_EVERYTHING:return m.default.didNotCollectEverything();default:return e.prototype.getMessage.call(this,t)}},t}(s.default);t.default=_,e.exports=t.default},3133:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1738),s=l(r),c=n(216),m=n(748),u=l(m),_=n(851),p=l(_),d=n(2905),b=n(597).singleton,f=n(237).getStore,k=4,y=function(e){function t(n,l){a(this,t);var i=o(this,e.call(this,n,l));return i.maxBlocks_=l.level.ideal,i.minCollected_=l.level.minCollected,i.store_=f(),i.store_.dispatch((0,d.setCollectorMinRequired)(i.minCollected_)),i.maze_.subtype.on("reset",function(){i.store_.dispatch((0,d.resetCollectorCurrentCollected)())}),i.maze_.subtype.on("collected",function(e){i.store_.dispatch((0,d.setCollectorCurrentCollected)(e))}),i.maze_.subtype.on("collectedTooMany",function(){i.executionInfo.terminateWithValue(k)}),i}return i(t,e),t.prototype.collectedTooMany=function(){var e=!1;return this.maze_.map.forEachCell(function(t,n,l){t.isDirt()&&(t.getCurrentValue()<0||isNaN(t.getCurrentValue()))&&(e=!0)}),e},t.prototype.collectedAll=function(){return this.maze_.subtype.getTotalCollected()===this.getPotentialMaxCollected()},t.prototype.getPotentialMaxCollected=function(){var e=0;return this.maze_.map.forEachCell(function(t,n,l){t.isDirt()&&(e+=t.getOriginalValue())}),e},t.prototype.getLastTotalCollected=function(){return this.store_.getState().maze.collectorLastCollected},t.prototype.succeeded=function(){var e=b().feedback_.getNumCountableBlocks()<=this.maxBlocks_;return this.collectedAll()&&e},t.prototype.shouldCheckSuccessOnMove=function(){return!1},t.prototype.terminateWithAppSpecificValue=function(){var e=this.executionInfo;0===this.maze_.subtype.getTotalCollected()?e.terminateWithValue(1):this.collectedTooMany()?e.terminateWithValue(k):b().feedback_.getNumCountableBlocks()>this.maxBlocks_?e.terminateWithValue(0):this.minCollected_&&this.maze_.subtype.getTotalCollected()<this.minCollected_?e.terminateWithValue(5):this.collectedAll()?e.terminateWithValue(!0):e.terminateWithValue(6)},t.prototype.hasMessage=function(e){return!0},t.prototype.getMessage=function(t){switch(t){case 0:return p.default.collectorTooManyBlocks({blockLimit:this.maxBlocks_});case 1:return p.default.collectorCollectedNothing();case k:return p.default.collectorCollectedTooMany();case 5:return p.default.collectorCollectedNotEnough({goal:this.minCollected_});case 6:return p.default.collectorCollectedSome({count:this.getLastTotalCollected()});case!0:return u.default.isEnabled("bubbleDialog")?e.prototype.getMessage.call(this,t):p.default.collectorCollectedEverything({count:this.getPotentialMaxCollected()});default:return e.prototype.getMessage.call(this,t)}},t.prototype.getTestResults=function(t){switch(t){case 0:case 1:case k:case 5:return c.TestResults.APP_SPECIFIC_FAIL;case 6:return c.TestResults.APP_SPECIFIC_ACCEPTABLE_FAIL;case!0:return c.TestResults.ALL_PASS}return e.prototype.getTestResults.call(this,t)},t.prototype.shouldPreventFeedbackDialog=function(e){return e!==c.TestResults.ALL_PASS},t}(s.default);t.default=y,e.exports=t.default},3134:function(e,t,n){"use strict";function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var i=n(1738),r=function(e){return e&&e.__esModule?e:{default:e}}(i),s=function(e){function t(n,o){l(this,t);var i=a(this,e.call(this,n,o));return i.goal_=o.level.searchWord,i}return o(t,e),t.prototype.succeeded=function(){return this.maze_.subtype.getVisited()===this.goal_},t.prototype.shouldCheckSuccessOnMove=function(){return!1},t}(r.default);t.default=s,e.exports=t.default},3135:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var r=n(2906),s=l(r),c=n(851),m=l(c),u=n(216),_=function(e){function t(n,l){a(this,t);var i=o(this,e.call(this,n,l));return i.maze_.subtype.on("wrongCrop",function(){i.executionInfo.terminateWithValue(u.HarvesterTerminationValue.WRONG_CROP)}),i.maze_.subtype.on("emptyCrop",function(){i.executionInfo.terminateWithValue(u.HarvesterTerminationValue.EMPTY_CROP)}),i}return i(t,e),t.prototype.succeeeded=function(){return this.collectedEverything()},t.prototype.terminateWithAppSpecificValue=function(){var e=this.executionInfo;this.collectedEverything()||e.terminateWithValue(u.HarvesterTerminationValue.DID_NOT_COLLECT_EVERYTHING)},t.prototype.getTestResults=function(t){switch(t){case u.HarvesterTerminationValue.WRONG_CROP:case u.HarvesterTerminationValue.EMPTY_CROP:return u.TestResults.APP_SPECIFIC_FAIL;case u.HarvesterTerminationValue.DID_NOT_COLLECT_EVERYTHING:var n=this.maze_.getTestResults(!0);return(n>=u.TestResults.TOO_MANY_BLOCKS_FAIL||n===u.TestResults.BLOCK_LIMIT_FAIL)&&(n=u.TestResults.APP_SPECIFIC_FAIL),n}return e.prototype.getTestResults.call(this,t)},t.prototype.getMessage=function(t){switch(t){case u.HarvesterTerminationValue.WRONG_CROP:return m.default.wrongCropError();case u.HarvesterTerminationValue.EMPTY_CROP:return m.default.emptyCropError();case u.HarvesterTerminationValue.DID_NOT_COLLECT_EVERYTHING:return m.default.didNotCollectAllCrops();default:return e.prototype.getMessage.call(this,t)}},t}(s.default);t.default=_,e.exports=t.default},3136:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var r=n(1738),s=l(r),c=n(851),m=l(c),u=n(216),_=function(e){function t(n,l){a(this,t);var i=o(this,e.call(this,n,l));return i.maze_.subtype.on("plantInNonSoil",function(){i.executionInfo.terminateWithValue(t.TerminationValue.PLANT_IN_NON_SOIL)}),i}return i(t,e),t.prototype.succeeded=function(){return this.plantedEverything()},t.prototype.plantedEverything=function(){return!this.maze_.map.getAllCells().some(function(e){return e.isSoil()})},t.prototype.shouldCheckSuccessOnMove=function(){return!1},t.prototype.terminateWithAppSpecificValue=function(){var e=this.executionInfo;this.plantedEverything()||e.terminateWithValue(t.TerminationValue.DID_NOT_PLANT_EVERYWHERE)},t.prototype.getTestResults=function(n){switch(n){case t.TerminationValue.PLANT_IN_NON_SOIL:return u.TestResults.APP_SPECIFIC_FAIL;case t.TerminationValue.DID_NOT_PLANT_EVERYWHERE:var l=this.maze_.getTestResults(!0);return(l>=u.TestResults.TOO_MANY_BLOCKS_FAIL||l===u.TestResults.BLOCK_LIMIT_FAIL)&&(l=u.TestResults.APP_SPECIFIC_FAIL),l;default:return e.prototype.getTestResults.call(this,n)}},t.prototype.hasMessage=function(e){return e===u.TestResults.APP_SPECIFIC_FAIL},t.prototype.getMessage=function(n){switch(n){case t.TerminationValue.PLANT_IN_NON_SOIL:return m.default.plantInNonSoilError();case t.TerminationValue.DID_NOT_PLANT_EVERYWHERE:return m.default.didNotPlantEverywhere();default:return e.prototype.getMessage.call(this,n)}},t}(s.default);_.TerminationValue={PLANT_IN_NON_SOIL:0,DID_NOT_PLANT_EVERYWHERE:1},t.default=_,e.exports=t.default},3141:function(e,t,n){"use strict";function l(t,n,l){var a=c.extend({},e.exports[t]);a.step=n,a.stepOnly=l,e.exports[t+"_step"]=a}var a=n(773).Direction,o=n(3142),i=n(3147),r=n(2909),s=n(743),c=n(71),m=n(851),u=function(e,t){return n(3148)({page:e,level:t})},_=function(e,t){return n(3149)({page:e,level:t})};e.exports={"2_1":{toolbox:u(2,1),ideal:4,requiredBlocks:[[r.MOVE_FORWARD]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,2,1,1,3,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]],startBlocks:_(2,1)},k1_demo:{toolbox:s.createToolbox(s.blockOfType("maze_moveNorth")+s.blockOfType("maze_moveSouth")+s.blockOfType("maze_moveEast")+s.blockOfType("maze_moveWest")+s.blockOfType("controls_repeat_simplified")),ideal:4,requiredBlocks:[[r.MOVE_FORWARD]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,2,1,1,3,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]],startBlocks:_(2,1)},"2_2":{instructionsImportant:!0,toolbox:u(2,2),ideal:3,requiredBlocks:[[r.MOVE_FORWARD]],startDirection:a.SOUTH,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,2,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,3,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]],startBlocks:_(2,2)},"2_2_5":{toolbox:u(2,3),ideal:5,requiredBlocks:[[r.MOVE_FORWARD],[r.TURN_RIGHT]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,4,0,0,0],[0,0,2,1,1,0,0,0],[0,0,4,0,3,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]],startBlocks:_(2,3)},"2_3":{toolbox:u(2,3),ideal:6,requiredBlocks:[[r.MOVE_FORWARD],[r.TURN_LEFT],[r.TURN_RIGHT]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,4,1,3,0,0,0],[0,0,2,1,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]],startBlocks:_(2,3)},"2_4":{toolbox:u(2,4),ideal:9,requiredBlocks:[[r.MOVE_FORWARD],[r.TURN_LEFT],[r.TURN_RIGHT]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,2,4,0,3,0,0],[0,0,1,1,1,1,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"2_5":{toolbox:u(2,5),ideal:3,requiredBlocks:[[r.MOVE_FORWARD],[r.FOR_LOOP]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,2,1,1,1,1,3,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"2_6":{toolbox:u(2,6),ideal:4,requiredBlocks:[[r.TURN_RIGHT],[r.MOVE_FORWARD],[r.FOR_LOOP]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,2,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,3,0,0,0]]},"2_7":{toolbox:u(2,7),ideal:6,requiredBlocks:[[r.MOVE_FORWARD],[r.FOR_LOOP],[r.TURN_LEFT]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,3,0],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,1,0],[0,0,2,1,1,1,1,0],[0,0,0,0,0,0,0,0]]},"2_8":{toolbox:u(2,8),ideal:5,requiredBlocks:[[r.MOVE_FORWARD],[r.FOR_LOOP],[r.TURN_RIGHT]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,2,1,1,0,0,0],[0,0,0,0,1,0,0,0],[0,0,3,1,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]],startBlocks:_(2,8),levelIncompleteError:m.repeatCarefullyError(),tooFewBlocksMsg:m.repeatCarefullyError()},"2_9":{toolbox:u(2,9),ideal:3,requiredBlocks:[[r.MOVE_FORWARD],[r.WHILE_LOOP]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,2,1,1,1,1,3,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"2_10":{toolbox:u(2,10),ideal:5,requiredBlocks:[[r.MOVE_FORWARD],[r.TURN_LEFT],[r.WHILE_LOOP]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,3,1,1,0,0,0],[0,0,0,0,1,0,0,0],[0,0,2,1,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"2_11":{toolbox:u(2,11),ideal:6,scale:{stepSpeed:3},requiredBlocks:[[r.MOVE_FORWARD],[r.WHILE_LOOP],[r.TURN_LEFT],[r.TURN_RIGHT]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,3,1],[0,0,0,0,0,1,1,0],[0,0,0,0,1,1,0,0],[0,0,0,1,1,0,0,0],[0,0,1,1,0,0,0,0],[0,1,1,0,0,0,0,0],[2,1,0,0,0,0,0,0]]},"2_12":{toolbox:u(2,12),ideal:6,scale:{stepSpeed:3},requiredBlocks:[[r.MOVE_FORWARD],[r.WHILE_LOOP],[r.TURN_LEFT],[r.TURN_RIGHT]],startDirection:a.EAST,map:[[1,0,0,0,0,0,0,0],[1,2,4,0,0,0,0,0],[0,1,1,0,0,0,0,0],[0,0,1,1,0,0,0,0],[0,0,0,1,1,0,0,0],[0,0,0,0,1,1,0,0],[0,0,0,0,0,1,3,0],[0,0,0,0,0,0,1,1]]},"2_13":{toolbox:u(2,13),ideal:5,requiredBlocks:[[r.TURN_LEFT]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,3,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,1,0,0],[0,0,0,2,1,1,0,0],[0,0,0,0,0,4,0,0]],startBlocks:_(2,13)},"2_14":{toolbox:u(2,14),ideal:5,scale:{stepSpeed:2},requiredBlocks:[[r.MOVE_FORWARD],[r.TURN_RIGHT],[r.IS_PATH_RIGHT],[r.WHILE_LOOP]],startDirection:a.EAST,map:[[0,0,0,4,0,0,0,0],[0,0,0,1,0,1,0,0],[0,0,2,1,1,1,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,1,1,4],[0,0,0,0,0,1,0,0],[0,3,1,1,1,1,0,0],[0,0,0,0,0,0,0,0]],levelIncompleteError:m.ifInRepeatError()},"2_15":{toolbox:u(2,15),ideal:5,scale:{stepSpeed:2},requiredBlocks:[[r.MOVE_FORWARD],[r.TURN_LEFT],[r.IS_PATH_LEFT],[r.WHILE_LOOP]],startDirection:a.NORTH,map:[[0,0,0,4,0,0,0,0],[0,0,0,1,0,0,0,0],[0,1,1,1,1,1,0,0],[0,1,0,0,0,1,0,0],[0,1,0,3,0,1,0,0],[0,1,0,1,0,1,1,4],[0,1,1,1,0,2,0,0],[0,0,0,0,0,0,0,0]]},"2_16":{toolbox:u(2,16),ideal:5,scale:{stepSpeed:2},requiredBlocks:[[r.MOVE_FORWARD],[r.TURN_RIGHT],[r.IS_PATH_RIGHT],[r.WHILE_LOOP]],startDirection:a.SOUTH,map:[[0,0,0,4,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,1,1,2,0,0],[0,0,0,0,0,1,1,4],[0,1,1,3,0,1,0,4],[0,1,0,0,0,1,0,1],[0,1,1,1,1,1,1,1],[0,0,0,0,0,0,0,0]]},"2_17":{toolbox:u(2,17),ideal:5,scale:{stepSpeed:2},requiredBlocks:[[r.MOVE_FORWARD],[r.IS_PATH_FORWARD],[r.TURN_LEFT],[r.WHILE_LOOP]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,1,4,1,1,1,0,0],[0,0,1,0,0,0,0,0],[3,1,1,1,1,1,1,0],[0,1,0,1,0,0,1,0],[1,1,1,4,1,0,1,0],[0,1,0,1,0,2,1,0],[0,0,0,0,0,0,0,0]]},"2_18":{toolbox:u(2,18),ideal:5,scale:{stepSpeed:2},requiredBlocks:[[r.MOVE_FORWARD],[r.IS_PATH_FORWARD],[r.TURN_RIGHT],[r.WHILE_LOOP]],startDirection:a.EAST,map:[[0,0,4,0,4,0,4,0],[0,0,1,0,1,0,1,0],[0,2,1,1,1,1,1,0],[0,0,1,1,0,1,1,0],[0,0,0,0,0,0,1,0],[0,0,1,1,0,1,1,0],[0,1,3,1,1,1,1,0],[0,0,0,0,0,0,0,0]]},"2_19":{toolbox:u(2,19),ideal:7,scale:{stepSpeed:2},requiredBlocks:[[r.MOVE_FORWARD],[r.TURN_LEFT],[r.TURN_RIGHT]],startDirection:a.NORTH,map:[[1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,1],[1,0,1,1,1,1,1,1],[1,0,1,0,0,0,0,0],[1,0,1,0,1,1,1,1],[1,0,1,0,3,0,0,1],[1,0,1,0,0,0,0,1],[2,0,1,1,1,1,1,1]],startBlocks:_(2,19)},"3_1":{toolbox:u(3,1),ideal:3,editCode:!0,codeFunctions:{moveForward:null,turnLeft:null,turnRight:null},requiredBlocks:[[r.MOVE_FORWARD]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,2,1,3,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"3_2":{toolbox:u(3,2),ideal:4,editCode:!0,codeFunctions:{moveForward:null,turnLeft:null,turnRight:null},requiredBlocks:[[r.MOVE_FORWARD]],startDirection:a.SOUTH,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,2,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,3,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"3_3":{toolbox:u(3,3),ideal:6,editCode:!0,codeFunctions:{moveForward:null,turnLeft:null,turnRight:null},requiredBlocks:[[r.MOVE_FORWARD],[r.TURN_LEFT],[r.TURN_RIGHT]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,4,1,3,0,0,0],[0,0,2,1,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"3_4":{toolbox:u(3,4),ideal:8,editCode:!0,codeFunctions:{moveForward:null,turnLeft:null,turnRight:null},requiredBlocks:[[r.MOVE_FORWARD],[r.TURN_LEFT]],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,2,4,3,0,0,0],[0,0,1,1,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},custom:{toolbox:u(3,4),requiredBlocks:[],startDirection:a.EAST,map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,2,4,3,0,0,0],[0,0,1,1,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]}};for(var p in o)e.exports["karel_"+p]=o[p];for(p in i)e.exports["wordsearch_"+p]=i[p];l("2_1",!0,!0),l("2_2",!0,!1),l("2_17",!0,!1),l("karel_1_9",!0,!1),l("karel_2_9",!0,!1)},3142:function(e,t,n){"use strict";var l=n(2908),a=n(773).Direction,o=n(851),i=n(743),r=function(e,t){var l;switch(e){case 1:l=n(3143);break;case 2:l=n(3144);break;case 3:l=n(3145)}return l({level:t})},s=function(e,t){return n(3146)({page:e,level:t})},c={test:function(e){return"maze_moveForward"===e.type},type:"maze_moveForward"},m={test:"dig",type:"maze_dig"},u={test:"fill",type:"maze_fill"},_={test:function(e){return"controls_repeat"===e.type},type:"controls_repeat",titles:{TIMES:"???"}},p={test:function(e){return"controls_repeat_ext"===e.type},type:"controls_repeat_ext"},d={test:function(e){return"controls_for"===e.type},type:"controls_for"},b={test:function(e){return"variables_get"===e.type},type:"variables_get",titles:{VAR:"i"}},f={test:"turnLeft",type:"maze_turn",titles:{DIR:"turnLeft"}},k={test:"turnRight",type:"maze_turn",titles:{DIR:"turnRight"}},y={test:"while (Maze.isPathForward",type:"maze_untilBlocked"},h={test:"while (Maze.pilePresent",type:"maze_untilBlockedOrNotClear",titles:{DIR:"pilePresent"}},g={test:"while (Maze.holePresent",type:"maze_untilBlockedOrNotClear",titles:{DIR:"holePresent"}},v={test:"while (Maze.isPathForward",type:"maze_untilBlockedOrNotClear",titles:{DIR:"isPathForward"}},x={test:"if (Maze.pilePresent",type:"karel_if",titles:{DIR:"pilePresent"}},z={test:"if (Maze.holePresent",type:"karel_if",titles:{DIR:"holePresent"}},E={test:"} else {",type:"karel_ifElse"},T=function(e){return{test:function(t){return t.getTitleValue("NAME")===o.fillN({shovelfuls:e})},type:"procedures_callnoreturn",titles:{NAME:o.fillN({shovelfuls:e})}}},S=function(e){return{test:function(t){return t.getTitleValue("NAME")===o.removeN({shovelfuls:e})},type:"procedures_callnoreturn",titles:{NAME:o.removeN({shovelfuls:e})}}},A={test:function(e){return e.getTitleValue("NAME")===o.avoidCowAndRemove()},type:"procedures_callnoreturn",titles:{NAME:o.avoidCowAndRemove()}},R={test:function(e){return e.getTitleValue("NAME")===o.removeStack({shovelfuls:4})},type:"procedures_callnoreturn",titles:{NAME:o.removeStack({shovelfuls:4})}},I={test:function(e){return e.getTitleValue("NAME")===o.fillStack({shovelfuls:2})},type:"procedures_callnoreturn",titles:{NAME:o.fillStack({shovelfuls:2})}};e.exports={"1_1":{instructionsImportant:!0,toolbox:r(1,1),startBlocks:s(1,1),ideal:6,requiredBlocks:[[c],[m]],scale:{snapRadius:2},map:[[0,0,0,0,0,1,1,1],[0,1,1,0,0,1,1,1],[0,0,0,0,0,1,1,1],[0,0,0,0,0,0,0,0],[2,1,1,1,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,1,1,0,0,0,0],[0,0,1,1,0,0,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"1_2":{toolbox:r(1,2),startBlocks:s(1,2),ideal:4,requiredBlocks:[[c],[u]],map:[[0,0,0,0,0,0,1,1],[0,0,0,0,0,0,1,1],[0,0,0,0,0,0,0,0],[0,1,1,1,0,0,0,0],[0,1,2,1,0,0,0,0],[0,1,1,1,0,1,1,1],[0,0,0,0,0,1,1,1],[0,0,0,0,0,1,1,1]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,-2,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"1_3":{toolbox:r(1,3),startBlocks:s(1,3),ideal:4,requiredBlocks:[[c],[m],[_]],map:[[1,1,1,0,0,0,0,0],[1,1,1,0,0,0,0,0],[1,1,1,0,1,1,1,0],[0,0,0,0,1,2,1,0],[0,0,0,0,1,1,1,0],[0,0,0,0,0,0,0,0],[1,1,0,0,0,0,0,0],[1,1,0,0,0,0,0,0]],startDirection:a.SOUTH,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,10,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"1_4":{toolbox:r(1,4),ideal:5,requiredBlocks:[[c],[m],[f],[_]],map:[[0,0,0,0,0,0,1,1],[0,0,0,0,0,0,1,1],[0,0,0,0,0,0,1,1],[0,0,0,1,1,0,0,0],[0,0,0,2,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,1,1,0,0,0],[0,0,0,1,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"1_5":{toolbox:r(1,5),startBlocks:s(1,5),ideal:5,requiredBlocks:[[c],[u],[_],[y]],scale:{stepSpeed:2},map:[[1,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0],[0,0,0,0,1,1,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[2,1,1,1,1,1,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,-5,-5,-5,-5,-5,0,0]]},"1_6":{toolbox:r(1,6),ideal:4,requiredBlocks:[[c],[m],[h,_,v]],scale:{stepSpeed:3},map:[[1,1,0,1,1,0,1,1],[1,1,0,2,1,0,1,1],[0,0,0,1,1,0,0,0],[0,0,0,1,1,0,0,0],[0,0,0,1,1,0,0,0],[0,0,0,1,1,0,0,0],[1,1,0,1,1,0,1,1],[1,1,0,1,1,0,1,1]],startDirection:a.SOUTH,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"1_7":{toolbox:r(1,7),startBlocks:s(1,7),ideal:5,requiredBlocks:[[k],[c],[u],[g]],scale:{stepSpeed:2},map:[[1,1,0,0,0,0,1,1],[1,1,1,0,0,0,0,1],[0,1,1,2,0,0,0,0],[0,0,1,1,1,0,0,0],[0,0,0,1,1,1,0,0],[0,0,0,0,1,1,1,0],[1,0,0,0,0,1,1,1],[1,1,0,0,0,0,1,1]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,-18,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"1_8":{toolbox:r(1,8),ideal:4,requiredBlocks:[[c],[u],[v,_]],scale:{stepSpeed:3},map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1],[2,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,-1],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"1_9":{toolbox:r(1,9),ideal:8,requiredBlocks:[[c],[m],[v,_],[f]],scale:{stepSpeed:2.5},map:[[0,0,0,0,0,0,1,1],[0,0,0,0,0,0,1,1],[0,0,0,0,1,0,0,0],[0,1,1,0,1,0,0,0],[0,1,1,0,1,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,1,0,0,0],[2,1,1,1,1,0,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,1,0,0,0],[0,1,1,1,1,0,0,0]]},"1_10":{toolbox:r(1,10),startBlocks:s(1,10),ideal:5,requiredBlocks:[[c],[m],[x],[y,_]],scale:{stepSpeed:2.5},map:[[1,1,0,0,0,0,1,1],[1,1,0,0,0,0,1,1],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[2,1,1,1,1,1,1,1],[0,0,0,0,0,0,0,0],[1,1,0,0,0,0,1,1],[1,1,0,0,0,0,1,1]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,1,0,0,1,1,0,1],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"1_11":{toolbox:r(1,11),startBlocks:s(1,11),ideal:7,requiredBlocks:[[c],[m],[u],[x],[z],[y,_]],scale:{stepSpeed:2.5},map:[[1,1,0,0,0,0,1,1],[1,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0],[2,1,1,1,1,1,1,1],[0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,1],[1,1,0,0,0,0,1,1],[1,1,1,0,0,1,1,1]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,-1,0,0,-1,1,1,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"2_1":{instructionsImportant:!0,toolbox:r(2,1),startBlocks:s(2,1),ideal:null,requiredBlocks:[],recommendedBlocks:[[c],[m],[u],[f,k]],scale:{stepSpeed:3},map:[[0,0,0,0,0,0,1,1],[0,0,0,0,0,0,1,1],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[1,1,1,0,0,0,0,0],[1,1,1,0,0,0,0,0],[1,1,1,0,0,0,0,0],[2,1,1,0,0,0,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[1,0,1,0,0,0,0,0],[1,0,1,0,0,0,0,0],[1,-1,1,0,0,0,0,0],[1,-1,1,0,0,0,0,0]]},"2_2":{toolbox:r(2,2),startBlocks:s(2,2),ideal:6,requiredBlocks:[],recommendedBlocks:[[c],[T(5)]],map:[[0,0,0,0,0,0,0,0],[0,1,1,1,1,1,1,0],[0,1,0,0,0,0,1,0],[0,1,0,2,1,0,1,0],[0,1,0,1,1,0,1,0],[0,1,0,0,0,0,1,0],[0,1,1,1,1,1,1,0],[0,0,0,0,0,0,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,-5,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"2_3":{toolbox:r(2,3),startBlocks:s(2,3),ideal:8,requiredBlocks:[],recommendedBlocks:[[c],[T(5)],[y,_]],scale:{stepSpeed:2},map:[[0,1,1,1,1,1,1,0],[1,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,1],[0,2,1,1,1,1,1,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,-5,-5,-5,-5,-5,0]]},"2_4":{toolbox:r(2,4),startBlocks:s(2,4),ideal:13,requiredBlocks:[],recommendedBlocks:[[m],[_],[S(7)],[c],[f],[k]],scale:{stepSpeed:3},map:[[1,1,1,1,0,0,1,1],[1,1,1,0,0,1,1,1],[1,1,0,0,1,1,1,0],[1,0,0,1,1,1,0,0],[0,0,1,1,1,0,0,1],[0,1,2,1,0,0,1,1],[1,1,1,0,0,1,1,1],[1,1,0,0,1,1,1,1]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,7,0,0],[0,0,0,0,7,0,0,0],[0,0,0,7,0,0,0,0],[0,0,7,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"2_5":{toolbox:r(2,5),startBlocks:s(2,5),ideal:8,requiredBlocks:[],recommendedBlocks:[[m],[_],[S(6)],[c]],scale:{stepSpeed:3},map:[[0,0,0,1,1,0,0,0],[0,0,0,1,1,0,0,0],[0,0,0,1,1,0,0,0],[1,2,1,1,1,1,1,1],[1,1,1,1,1,1,1,1],[0,0,0,1,1,0,0,0],[0,0,0,1,1,0,0,0],[0,0,0,1,1,0,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,6,0,6,0,6,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"2_6":{toolbox:r(2,6),startBlocks:s(2,6),ideal:11,requiredBlocks:[],recommendedBlocks:[[S(8)],[T(8)],[c],[y,_]],scale:{stepSpeed:3},map:[[0,0,1,1,0,0,0,0],[0,0,1,1,0,0,0,0],[0,0,0,0,0,0,0,0],[2,1,1,1,1,1,1,1],[0,0,0,0,0,0,0,0],[0,0,0,0,1,1,1,0],[0,0,0,0,1,1,1,0],[0,0,0,0,1,1,1,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[8,0,0,0,0,0,0,-8],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"2_7":{toolbox:r(2,7),startBlocks:s(2,7),ideal:11,requiredBlocks:[],recommendedBlocks:[[f],[c],[k],[m]],map:[[1,1,0,0,0,1,1,1],[1,1,0,0,0,0,1,1],[0,0,0,0,0,0,0,0],[0,0,1,1,1,0,0,0],[0,0,2,4,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,1,1,0,0,0,0],[0,0,1,1,0,0,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"2_8":{toolbox:r(2,8),startBlocks:s(2,8),ideal:13,requiredBlocks:[],recommendedBlocks:[[_],[A]],scale:{stepSpeed:3},map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1],[2,4,1,4,1,4,1,1],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,1,0,1,0,1,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},"2_9":{toolbox:r(2,9),startBlocks:s(2,9),ideal:14,requiredBlocks:[],recommendedBlocks:[[R],[c],[y,_]],scale:{stepSpeed:3},map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1],[2,1,1,1,1,1,1,1]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[1,1,1,1,1,1,0,0],[1,1,1,1,1,1,0,0],[1,1,1,1,1,1,0,0],[1,1,1,1,1,1,0,0]]},"2_10":{toolbox:r(2,10),startBlocks:s(2,10),ideal:27,requiredBlocks:[],recommendedBlocks:[[R],[c],[I],[x,E],[y,_]],scale:{stepSpeed:3},map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1],[2,1,1,1,1,1,1,1]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[1,0,1,0,0,1,0,0],[1,0,1,0,0,1,0,0],[1,-1,1,-1,-1,1,-1,0],[1,-1,1,-1,-1,1,-1,0]]},debug_seq_1:{instructionsImportant:!0,toolbox:r(3,1),startBlocks:s(3,1),ideal:8,requiredBlocks:[[c],[m],[u],[f],[k]],map:[[0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0],[0,0,0,0,1,1,0,0],[0,0,0,0,0,0,0,0],[0,0,4,1,1,0,0,0],[0,0,2,1,4,0,0,0],[1,1,0,0,0,1,1,0],[1,1,0,0,0,0,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,-1,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},debug_seq_2:{toolbox:r(3,2),startBlocks:s(3,2),ideal:7,requiredBlocks:[[c],[m],[f]],map:[[1,1,0,0,0,0,0,0],[1,1,0,0,0,0,0,0],[0,0,0,0,0,0,1,0],[0,0,2,1,1,0,1,0],[0,0,1,1,1,0,1,0],[0,0,1,1,1,0,0,0],[1,0,0,0,0,0,0,1],[1,1,0,0,0,0,0,1]],startDirection:a.SOUTH,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},debug_repeat:{toolbox:r(3,3),startBlocks:s(3,3),ideal:12,requiredBlocks:[[c],[m],[f],[k],[_]],scale:{stepSpeed:3},map:[[1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,1],[1,0,1,1,1,1,0,1],[1,0,1,2,1,1,0,1],[1,0,1,1,1,1,0,1],[1,0,1,1,1,1,0,1],[1,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1]],startDirection:a.SOUTH,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,5,0,0,0],[0,0,0,0,0,7,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},debug_while:{toolbox:r(3,4),startBlocks:s(3,4),ideal:5,requiredBlocks:[[c],[_],[u],[g]],scale:{stepSpeed:3},map:[[0,0,0,0,0,1,1,0],[0,0,1,0,0,1,1,0],[0,0,1,0,0,1,1,0],[0,0,0,0,0,0,0,0],[0,2,1,1,1,1,1,0],[0,0,0,0,0,0,0,0],[1,1,0,0,0,0,0,0],[1,1,0,0,0,0,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,-15,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},debug_if:{toolbox:r(3,5),startBlocks:s(3,5),ideal:8,requiredBlocks:[[c],[f],[k],[_],[m],[x,h]],scale:{stepSpeed:3},map:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,1],[0,0,0,0,0,1,1,0],[0,0,0,0,1,1,0,1],[0,0,0,1,1,0,1,1],[0,0,1,1,0,1,1,0],[0,1,1,0,1,1,0,1],[2,1,0,1,1,0,1,1]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},debug_if_else:{toolbox:r(3,6),startBlocks:s(3,6),ideal:10,requiredBlocks:[[c],[f],[k],[_],[m],[u],[E,z]],scale:{stepSpeed:3},map:[[0,0,0,0,1,1,0,1],[0,0,0,1,1,0,1,1],[0,0,1,1,0,1,1,0],[0,1,1,0,1,1,0,1],[1,1,0,1,1,0,1,1],[1,0,1,1,0,1,1,0],[0,1,1,0,1,1,0,0],[2,1,0,1,1,0,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,-1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,-1,0,0,0],[0,0,0,-1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,-1,0,0,0,0,0,0]]},debug_function_1:{toolbox:r(3,7),startBlocks:s(3,7),ideal:8,requiredBlocks:[[c],[f],[_],[m]],scale:{stepSpeed:3},map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,1,1,1,1,0,0],[0,0,1,0,0,1,0,0],[0,0,1,0,0,1,0,0],[0,0,2,1,1,1,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,1,1,1,1,0,0],[0,0,1,0,0,1,0,0],[0,0,1,0,0,1,0,0],[0,0,1,1,1,1,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},debug_function_2:{toolbox:r(3,8),startBlocks:s(3,8),ideal:17,requiredBlocks:[[c],[f],[_],[m],[u],[l.call(o.fillSquare())],[l.call(o.removeSquare())]],scale:{stepSpeed:3},map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1],[1,0,1,0,0,1,0,1],[2,1,1,1,1,1,1,1],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[1,1,1,0,0,-1,-1,-1],[1,0,1,0,0,-1,0,-1],[1,1,1,0,0,-1,-1,-1],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},debug_function_3:{toolbox:r(3,9),startBlocks:s(3,9),ideal:12,requiredBlocks:[[c],[p],[m],[d],[l.callWithArg(o.removePile(),o.heightParameter())],[b]],scale:{stepSpeed:2},map:[[0,0,0,0,0,0,0,0],[0,1,1,0,0,0,0,0],[0,1,1,0,0,0,1,1],[0,0,0,0,0,0,1,1],[0,0,0,0,0,0,0,0],[1,2,1,1,1,1,1,1],[0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,1,2,3,4,5,6,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},bee_1:{toolbox:i.createToolbox('      <block type="maze_moveForward"></block>      <block type="maze_turn"><title name="DIR">turnLeft</title></block>      <block type="maze_turn"><title name="DIR">turnRight</title></block>      <block type="maze_nectar"></block>      <block type="maze_honey"></block>      <block type="math_number"><title name="NUM">0</title></block>      <block type="bee_ifNectarAmount"></block>      <block type="bee_ifTotalNectar"></block>      <block type="bee_ifFlower"></block>      <block type="bee_ifOnlyFlower"></block>      <block type="bee_whileNectarAmount"></block>'),startBlocks:s(1,1),requiredBlocks:[],scale:{snapRadius:2},honeyGoal:1,step:!0,map:[[0,0,0,0,0,1,1,1],[0,1,1,0,0,1,1,1],[0,0,0,0,0,1,1,1],[0,0,0,0,0,0,0,0],[2,"P",1,1,1,0,0,0],[0,0,0,0,0,0,0,0],[0,0,1,1,0,0,0,0],[0,0,1,1,0,0,0,0]],startDirection:a.EAST,initialDirt:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,3,-1,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]}}},3143:function(module,exports){module.exports=function anonymous(locals,escape,include,rethrow){function encode_char(e){return _ENCODE_HTML_RULES[e]||e}rethrow=rethrow||function(e,t,n,l){var a=t.split("\n"),o=Math.max(l-3,0),i=Math.min(a.length,l+3),r=a.slice(o,i).map(function(e,t){var n=t+o+1;return(n==l?" >> ":"    ")+n+"| "+e}).join("\n");throw e.path=n,e.message=(n||"ejs")+":"+l+"\n"+r+"\n\n"+e.message,e},escape=escape||function(e){return void 0==e?"":String(e).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g,__line=1,__lines='<xml id="toolbox" style="display: none;">\n  <block type="maze_moveForward"></block>\n  <block type="maze_turn"><title name="DIR">turnLeft</title></block>\n  <block type="maze_turn"><title name="DIR">turnRight</title></block>\n  <block type="maze_dig"></block>\n  <% if (level > 1) { -%>\n    <block type="maze_fill"></block>\n    <% if (level > 2) { -%>\n      <block type="controls_repeat">\n        <title name="TIMES">5</title>\n      </block>\n      <% if (level > 9) { -%>\n        <block type="karel_if"></block>\n      <% } -%>\n    <% } -%>\n    <% if (level === 5 || level === 10 || level === 11) { -%>\n      <block type="maze_untilBlocked"></block>\n    <% } -%>\n    <% if (level > 5 && level < 8) { -%>\n      <block type="maze_untilBlockedOrNotClear"></block>\n    <% } -%>\n    <% if (level === 8 || level === 9) { -%>\n      <block type="maze_untilBlockedOrNotClear">\n        <title name="DIR">isPathForward</title>\n      </block>\n    <% } -%>\n  <% } -%>\n</xml>\n',__filename="src/maze/toolboxes/karel1.xml.ejs";try{var __output=[],__append=__output.push.bind(__output);with(locals||{})__append('<xml id="toolbox" style="display: none;">\n  <block type="maze_moveForward"></block>\n  <block type="maze_turn"><title name="DIR">turnLeft</title></block>\n  <block type="maze_turn"><title name="DIR">turnRight</title></block>\n  <block type="maze_dig"></block>\n  '),__line=6,level>1&&(__append('    <block type="maze_fill"></block>\n    '),__line=8,level>2&&(__append('      <block type="controls_repeat">\n        <title name="TIMES">5</title>\n      </block>\n      '),__line=12,level>9&&(__append('        <block type="karel_if"></block>\n      '),__line=14),__append("    "),__line=15),__append("    "),__line=16,5!==level&&10!==level&&11!==level||(__append('      <block type="maze_untilBlocked"></block>\n    '),__line=18),__append("    "),__line=19,level>5&&level<8&&(__append('      <block type="maze_untilBlockedOrNotClear"></block>\n    '),__line=21),__append("    "),__line=22,8!==level&&9!==level||(__append('      <block type="maze_untilBlockedOrNotClear">\n        <title name="DIR">isPathForward</title>\n      </block>\n    '),__line=26),__append("  "),__line=27),__append("</xml>\n"),__line=29;return __output.join("")}catch(e){rethrow(e,'<xml id="toolbox" style="display: none;">\n  <block type="maze_moveForward"></block>\n  <block type="maze_turn"><title name="DIR">turnLeft</title></block>\n  <block type="maze_turn"><title name="DIR">turnRight</title></block>\n  <block type="maze_dig"></block>\n  <% if (level > 1) { -%>\n    <block type="maze_fill"></block>\n    <% if (level > 2) { -%>\n      <block type="controls_repeat">\n        <title name="TIMES">5</title>\n      </block>\n      <% if (level > 9) { -%>\n        <block type="karel_if"></block>\n      <% } -%>\n    <% } -%>\n    <% if (level === 5 || level === 10 || level === 11) { -%>\n      <block type="maze_untilBlocked"></block>\n    <% } -%>\n    <% if (level > 5 && level < 8) { -%>\n      <block type="maze_untilBlockedOrNotClear"></block>\n    <% } -%>\n    <% if (level === 8 || level === 9) { -%>\n      <block type="maze_untilBlockedOrNotClear">\n        <title name="DIR">isPathForward</title>\n      </block>\n    <% } -%>\n  <% } -%>\n</xml>\n',"src/maze/toolboxes/karel1.xml.ejs",__line)}}},3144:function(module,exports,__webpack_require__){module.exports=function anonymous(locals,escape,include,rethrow){function encode_char(e){return _ENCODE_HTML_RULES[e]||e}rethrow=rethrow||function(e,t,n,l){var a=t.split("\n"),o=Math.max(l-3,0),i=Math.min(a.length,l+3),r=a.slice(o,i).map(function(e,t){var n=t+o+1;return(n==l?" >> ":"    ")+n+"| "+e}).join("\n");throw e.path=n,e.message=(n||"ejs")+":"+l+"\n"+r+"\n\n"+e.message,e},escape=escape||function(e){return void 0==e?"":String(e).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g,__line=1,__lines='<%\n\nvar commonMsg = require(\'@cdo/locale\');\nvar mazeMsg = require(\'.././locale\');\n\nvar addProcedures = function() { -%>\n  <% if (level > 3) { -%>\n    <category name="<%= commonMsg.catProcedures() %>" custom="PROCEDURE"></category>\n  <% } else if (level === 2 || level === 3) { -%>\n    <category name="<%= commonMsg.catProcedures() %>">\n      <block type="procedures_callnoreturn">\n        <mutation name="<%= mazeMsg.fillN({shovelfuls: 5}) %>"></mutation>\n      </block>\n    </category>\n  <% } -%>\n  <% if (level < 9) { -%>\n    <category name="<%= commonMsg.catLogic() %>">\n      <block type="karel_if"></block>\n    </category>\n  <% } else if (level > 8) { -%>\n    <category name="<%= commonMsg.catLogic() %>">\n      <block type="karel_if"></block>\n      <block type="karel_ifElse"></block>\n    </category>\n  <% } -%>\n<% }; -%>\n\n<xml id="toolbox" style="display: none;">\n  <category name="<%= commonMsg.catActions() %>">\n    <block type="maze_moveForward"></block>\n    <block type="maze_turn"><title name="DIR">turnLeft</title></block>\n    <block type="maze_turn"><title name="DIR">turnRight</title></block>\n    <block type="maze_dig"></block>\n    <block type="maze_fill"></block>\n  </category>\n  <% addProcedures() -%>\n  <category name="<%= commonMsg.catLoops() %>">\n    <block type="maze_untilBlocked"></block>\n    <block type="controls_repeat"></block>\n  </category>\n</xml>\n',__filename="src/maze/toolboxes/karel2.xml.ejs";try{var __output=[],__append=__output.push.bind(__output);with(locals||{}){var commonMsg=__webpack_require__(40),mazeMsg=__webpack_require__(851),addProcedures=function(){__line=6,__append("  "),__line=7,level>3?(__append('    <category name="'),__line=8,__append(escape(commonMsg.catProcedures())),__append('" custom="PROCEDURE"></category>\n  '),__line=9):2!==level&&3!==level||(__append('    <category name="'),__line=10,__append(escape(commonMsg.catProcedures())),__append('">\n      <block type="procedures_callnoreturn">\n        <mutation name="'),__line=12,__append(escape(mazeMsg.fillN({shovelfuls:5}))),__append('"></mutation>\n      </block>\n    </category>\n  '),__line=15),__append("  "),__line=16,level<9?(__append('    <category name="'),__line=17,__append(escape(commonMsg.catLogic())),__append('">\n      <block type="karel_if"></block>\n    </category>\n  '),__line=20):level>8&&(__append('    <category name="'),__line=21,__append(escape(commonMsg.catLogic())),__append('">\n      <block type="karel_if"></block>\n      <block type="karel_ifElse"></block>\n    </category>\n  '),__line=25),__line=26};__append('\n<xml id="toolbox" style="display: none;">\n  <category name="'),__line=29,__append(escape(commonMsg.catActions())),__append('">\n    <block type="maze_moveForward"></block>\n    <block type="maze_turn"><title name="DIR">turnLeft</title></block>\n    <block type="maze_turn"><title name="DIR">turnRight</title></block>\n    <block type="maze_dig"></block>\n    <block type="maze_fill"></block>\n  </category>\n  '),__line=36,function(){__line=6,__append("  "),__line=7,level>3?(__append('    <category name="'),__line=8,__append(escape(commonMsg.catProcedures())),__append('" custom="PROCEDURE"></category>\n  '),__line=9):2!==level&&3!==level||(__append('    <category name="'),__line=10,__append(escape(commonMsg.catProcedures())),__append('">\n      <block type="procedures_callnoreturn">\n        <mutation name="'),__line=12,__append(escape(mazeMsg.fillN({shovelfuls:5}))),__append('"></mutation>\n      </block>\n    </category>\n  '),__line=15),__append("  "),__line=16,level<9?(__append('    <category name="'),__line=17,__append(escape(commonMsg.catLogic())),__append('">\n      <block type="karel_if"></block>\n    </category>\n  '),__line=20):level>8&&(__append('    <category name="'),__line=21,__append(escape(commonMsg.catLogic())),__append('">\n      <block type="karel_if"></block>\n      <block type="karel_ifElse"></block>\n    </category>\n  '),__line=25),__line=26}(),__append('  <category name="'),__line=37,__append(escape(commonMsg.catLoops())),__append('">\n    <block type="maze_untilBlocked"></block>\n    <block type="controls_repeat"></block>\n  </category>\n</xml>\n'),__line=42}return __output.join("")}catch(e){rethrow(e,'<%\n\nvar commonMsg = require(\'@cdo/locale\');\nvar mazeMsg = require(\'.././locale\');\n\nvar addProcedures = function() { -%>\n  <% if (level > 3) { -%>\n    <category name="<%= commonMsg.catProcedures() %>" custom="PROCEDURE"></category>\n  <% } else if (level === 2 || level === 3) { -%>\n    <category name="<%= commonMsg.catProcedures() %>">\n      <block type="procedures_callnoreturn">\n        <mutation name="<%= mazeMsg.fillN({shovelfuls: 5}) %>"></mutation>\n      </block>\n    </category>\n  <% } -%>\n  <% if (level < 9) { -%>\n    <category name="<%= commonMsg.catLogic() %>">\n      <block type="karel_if"></block>\n    </category>\n  <% } else if (level > 8) { -%>\n    <category name="<%= commonMsg.catLogic() %>">\n      <block type="karel_if"></block>\n      <block type="karel_ifElse"></block>\n    </category>\n  <% } -%>\n<% }; -%>\n\n<xml id="toolbox" style="display: none;">\n  <category name="<%= commonMsg.catActions() %>">\n    <block type="maze_moveForward"></block>\n    <block type="maze_turn"><title name="DIR">turnLeft</title></block>\n    <block type="maze_turn"><title name="DIR">turnRight</title></block>\n    <block type="maze_dig"></block>\n    <block type="maze_fill"></block>\n  </category>\n  <% addProcedures() -%>\n  <category name="<%= commonMsg.catLoops() %>">\n    <block type="maze_untilBlocked"></block>\n    <block type="controls_repeat"></block>\n  </category>\n</xml>\n',"src/maze/toolboxes/karel2.xml.ejs",__line)}}},3145:function(module,exports,__webpack_require__){module.exports=function anonymous(locals,escape,include,rethrow){function encode_char(e){return _ENCODE_HTML_RULES[e]||e}rethrow=rethrow||function(e,t,n,l){var a=t.split("\n"),o=Math.max(l-3,0),i=Math.min(a.length,l+3),r=a.slice(o,i).map(function(e,t){var n=t+o+1;return(n==l?" >> ":"    ")+n+"| "+e}).join("\n");throw e.path=n,e.message=(n||"ejs")+":"+l+"\n"+r+"\n\n"+e.message,e},escape=escape||function(e){return void 0==e?"":String(e).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g,__line=1,__lines='<%\n\nvar msg = require(\'@cdo/locale\');\n\n/**\n * Add the procedures category to the toolbox.\n */\nvar addProcedures = function() { -%>\n  <category name="<%= msg.catProcedures() %>" custom="PROCEDURE"></category>\n  <category name="<%= msg.catLogic() %>">\n    <block type="karel_if"></block>\n    <block type="karel_ifElse"></block>\n  </category>\n<% }; -%>\n\n<%\n/**\n * Options:\n * @param doStatement An optional statement for the do statement in the loop.\n * @param upperLimit The upper limit of the for loop.\n */\nvar controlsFor = function(doStatement, upperLimit) { -%>\n  <block type="controls_for">\n    <value name="FROM">\n      <block type="math_number">\n        <title name="NUM">1</title>\n      </block>\n    </value>\n    <value name="TO">\n      <block type="math_number">\n        <title name="NUM">\n          <%= upperLimit || 10 -%>\n        </title>\n      </block>\n    </value>\n    <value name="BY">\n      <block type="math_number">\n        <title name="NUM">1</title>\n      </block>\n    </value>\n    <% if (doStatement) { -%>\n      <statement name="DO">\n        <% doStatement() %>\n      </statement>\n    <% } -%>\n  </block>\n<% }; -%>\n\n<xml id="toolbox" style="display: none;">\n  <category name="<%= msg.catActions() %>">\n    <block type="maze_moveForward"></block>\n    <block type="maze_turn"><title name="DIR">turnLeft</title></block>\n    <block type="maze_turn"><title name="DIR">turnRight</title></block>\n    <block type="maze_dig"></block>\n    <block type="maze_fill"></block>\n  </category>\n  <% addProcedures() -%>\n  <category name="<%= msg.catLoops() %>">\n    <block type="maze_untilBlockedOrNotClear"></block>\n    <% if (level < 9) { -%>\n      <block type="controls_repeat"></block>\n    <% } else { -%>\n      <block type="controls_repeat_ext">\n        <value name="TIMES">\n          <block type="math_number">\n            <title name="NUM">10</title>\n          </block>\n        </value>\n      </block>\n    <% } -%>\n    <% controlsFor() -%>\n  </category>\n  <category name="<%= msg.catMath() %>">\n    <block type="math_number"></block>\n  </category>\n  <category name="<%= msg.catVariables() %>" custom="VARIABLE">\n  </category>\n</xml>\n',__filename="src/maze/toolboxes/karel3.xml.ejs";try{var __output=[],__append=__output.push.bind(__output);with(locals||{}){var msg=__webpack_require__(40),addProcedures=function(){__line=8,__append('  <category name="'),__line=9,__append(escape(msg.catProcedures())),__append('" custom="PROCEDURE"></category>\n  <category name="'),__line=10,__append(escape(msg.catLogic())),__append('">\n    <block type="karel_if"></block>\n    <block type="karel_ifElse"></block>\n  </category>\n'),__line=14};__append("\n"),__line=16;var controlsFor=function(e,t){__line=22,__append('  <block type="controls_for">\n    <value name="FROM">\n      <block type="math_number">\n        <title name="NUM">1</title>\n      </block>\n    </value>\n    <value name="TO">\n      <block type="math_number">\n        <title name="NUM">\n          '),__line=32,__append(escape(t||10)),__append('        </title>\n      </block>\n    </value>\n    <value name="BY">\n      <block type="math_number">\n        <title name="NUM">1</title>\n      </block>\n    </value>\n    '),__line=41,e&&(__append('      <statement name="DO">\n        '),__line=43,e(),__append("\n      </statement>\n    "),__line=45),__append("  </block>\n"),__line=47};__append('\n<xml id="toolbox" style="display: none;">\n  <category name="'),__line=50,__append(escape(msg.catActions())),__append('">\n    <block type="maze_moveForward"></block>\n    <block type="maze_turn"><title name="DIR">turnLeft</title></block>\n    <block type="maze_turn"><title name="DIR">turnRight</title></block>\n    <block type="maze_dig"></block>\n    <block type="maze_fill"></block>\n  </category>\n  '),__line=57,function(){__line=8,__append('  <category name="'),__line=9,__append(escape(msg.catProcedures())),__append('" custom="PROCEDURE"></category>\n  <category name="'),__line=10,__append(escape(msg.catLogic())),__append('">\n    <block type="karel_if"></block>\n    <block type="karel_ifElse"></block>\n  </category>\n'),__line=14}(),__append('  <category name="'),__line=58,__append(escape(msg.catLoops())),__append('">\n    <block type="maze_untilBlockedOrNotClear"></block>\n    '),__line=60,level<9?(__append('      <block type="controls_repeat"></block>\n    '),__line=62):(__append('      <block type="controls_repeat_ext">\n        <value name="TIMES">\n          <block type="math_number">\n            <title name="NUM">10</title>\n          </block>\n        </value>\n      </block>\n    '),__line=70),__append("    "),__line=71,function(e,t){__line=22,__append('  <block type="controls_for">\n    <value name="FROM">\n      <block type="math_number">\n        <title name="NUM">1</title>\n      </block>\n    </value>\n    <value name="TO">\n      <block type="math_number">\n        <title name="NUM">\n          '),__line=32,__append(escape(t||10)),__append('        </title>\n      </block>\n    </value>\n    <value name="BY">\n      <block type="math_number">\n        <title name="NUM">1</title>\n      </block>\n    </value>\n    '),__line=41,e&&(__append('      <statement name="DO">\n        '),__line=43,e(),__append("\n      </statement>\n    "),__line=45),__append("  </block>\n"),__line=47}(),__append('  </category>\n  <category name="'),__line=73,__append(escape(msg.catMath())),__append('">\n    <block type="math_number"></block>\n  </category>\n  <category name="'),__line=76,__append(escape(msg.catVariables())),__append('" custom="VARIABLE">\n  </category>\n</xml>\n'),__line=79}return __output.join("")}catch(e){rethrow(e,'<%\n\nvar msg = require(\'@cdo/locale\');\n\n/**\n * Add the procedures category to the toolbox.\n */\nvar addProcedures = function() { -%>\n  <category name="<%= msg.catProcedures() %>" custom="PROCEDURE"></category>\n  <category name="<%= msg.catLogic() %>">\n    <block type="karel_if"></block>\n    <block type="karel_ifElse"></block>\n  </category>\n<% }; -%>\n\n<%\n/**\n * Options:\n * @param doStatement An optional statement for the do statement in the loop.\n * @param upperLimit The upper limit of the for loop.\n */\nvar controlsFor = function(doStatement, upperLimit) { -%>\n  <block type="controls_for">\n    <value name="FROM">\n      <block type="math_number">\n        <title name="NUM">1</title>\n      </block>\n    </value>\n    <value name="TO">\n      <block type="math_number">\n        <title name="NUM">\n          <%= upperLimit || 10 -%>\n        </title>\n      </block>\n    </value>\n    <value name="BY">\n      <block type="math_number">\n        <title name="NUM">1</title>\n      </block>\n    </value>\n    <% if (doStatement) { -%>\n      <statement name="DO">\n        <% doStatement() %>\n      </statement>\n    <% } -%>\n  </block>\n<% }; -%>\n\n<xml id="toolbox" style="display: none;">\n  <category name="<%= msg.catActions() %>">\n    <block type="maze_moveForward"></block>\n    <block type="maze_turn"><title name="DIR">turnLeft</title></block>\n    <block type="maze_turn"><title name="DIR">turnRight</title></block>\n    <block type="maze_dig"></block>\n    <block type="maze_fill"></block>\n  </category>\n  <% addProcedures() -%>\n  <category name="<%= msg.catLoops() %>">\n    <block type="maze_untilBlockedOrNotClear"></block>\n    <% if (level < 9) { -%>\n      <block type="controls_repeat"></block>\n    <% } else { -%>\n      <block type="controls_repeat_ext">\n        <value name="TIMES">\n          <block type="math_number">\n            <title name="NUM">10</title>\n          </block>\n        </value>\n      </block>\n    <% } -%>\n    <% controlsFor() -%>\n  </category>\n  <category name="<%= msg.catMath() %>">\n    <block type="math_number"></block>\n  </category>\n  <category name="<%= msg.catVariables() %>" custom="VARIABLE">\n  </category>\n</xml>\n',"src/maze/toolboxes/karel3.xml.ejs",__line)}}},3146:function(module,exports,__webpack_require__){module.exports=function anonymous(locals,escape,include,rethrow){function encode_char(e){return _ENCODE_HTML_RULES[e]||e}rethrow=rethrow||function(e,t,n,l){var a=t.split("\n"),o=Math.max(l-3,0),i=Math.min(a.length,l+3),r=a.slice(o,i).map(function(e,t){var n=t+o+1;return(n==l?" >> ":"    ")+n+"| "+e}).join("\n");throw e.path=n,e.message=(n||"ejs")+":"+l+"\n"+r+"\n\n"+e.message,e},escape=escape||function(e){return void 0==e?"":String(e).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g,__line=1,__lines='<%\n\nvar msg = require(\'./locale\');\n\n/**\n * Template to create function for filling in shovels.\n */\nvar fillShovelfuls = function(n) { -%>\n  <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n    deletable="false">\n    <mutation></mutation>\n    <title name="NAME"><%= msg.fillN({shovelfuls: n}) %></title>\n    <statement name="STACK">\n      <block type="controls_repeat" editable="false" deletable="false">\n        <title name="TIMES"><%= n %></title>\n        <statement name="DO">\n          <block type="maze_fill" editable="false" deletable="false">\n          </block>\n        </statement>\n       </block>\n    </statement>\n  </block>\n<% }; -%>\n\n<%\n/**\n * Template to create function for removing in shovels.\n */\nvar removeShovelfuls = function(n) { -%>\n  <block type="procedures_defnoreturn" x="300" y="200" editable="false"\n    deletable="false">\n    <mutation></mutation>\n    <title name="NAME"><%= msg.removeN({shovelfuls: n}) %></title>\n    <statement name="STACK">\n      <block type="controls_repeat" editable="false" deletable="false">\n        <title name="TIMES"><%= n %></title>\n        <statement name="DO">\n          <block type="maze_dig" editable="false" deletable="false">\n          </block>\n        </statement>\n       </block>\n    </statement>\n  </block>\n<% }; %>\n\n<% if (page === 1) { -%>\n  <% if (level === 1) { -%>\n    <block type="maze_moveForward" x="70" y="70"></block>\n  <% } else if (level === 2) { -%>\n    <block type="maze_moveForward" x="70" y="70"></block>\n  <% } else if (level === 3) { -%>\n    <block type="maze_moveForward" x="70" y="70"></block>\n  <% } else if (level === 4) { -%>\n    <block type="maze_moveForward" x="70" y="70"></block>\n  <% } else if (level === 5) { -%>\n    <block type="maze_untilBlocked" x="70" y="70"></block>\n  <% } else if (level === 6) { -%>\n    <block type="maze_dig" x="70" y="70"></block>\n  <% } else if (level === 7) { -%>\n    <block type="maze_turn" x="70" y="70">\n          <title name="DIR">turnRight</title>\n    </block>\n  <% } else if (level === 8) { -%>\n    <block type="maze_moveForward" x="70" y="70"></block>\n  <% } else if (level === 9) { -%>\n    <block type="maze_moveForward" x="70" y="70"></block>\n  <% } else if (level === 10) { -%>\n    <block type="maze_untilBlocked" x="70" y="70"></block>\n  <% } else if (level === 11) { -%>\n    <block type="maze_untilBlocked" x="70" y="70"></block>\n  <% } -%>\n<% } else if (page === 2) { -%>\n  <% if (level === 2) { -%>\n    <block type="maze_moveForward" x="20" y="70"></block>\n    <% fillShovelfuls(5) -%>\n  <% } else if (level === 3) { -%>\n    <% fillShovelfuls(5) -%>\n  <% } else if (level === 4) { -%>\n    <% fillShovelfuls(5) -%>\n    <block type="procedures_defnoreturn" x="300" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.removeN({shovelfuls: 7}) %></title>\n    </block>\n  <% } else if (level === 5) { -%>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.removeN({shovelfuls: 6}) %></title>\n    </block>\n  <% } else if (level === 6) { -%>\n    <% fillShovelfuls(8) -%>\n    <% removeShovelfuls(8) -%>\n  <% } else if (level === 7) { -%>\n    <block type="procedures_callnoreturn" x="20" y="70" editable="false"\n      deletable="false">\n      <mutation name="<%= msg.avoidCowAndRemove() %>"></mutation>\n    </block>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.avoidCowAndRemove() %></title>\n    </block>\n  <% } else if (level === 8) { -%>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.avoidCowAndRemove() %></title>\n      <statement name="STACK">\n        <block type="maze_turn" editable="false" deletable="false">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="maze_moveForward" editable="false" deletable="false">\n              <next>\n                <block type="maze_turn" editable="false" deletable="false">\n                  <title name="DIR">turnRight</title>\n                  <next>\n                    <block type="maze_moveForward" editable="false"\n                      deletable="false">\n                      <next>\n                        <block type="maze_moveForward" editable="false"\n                          deletable="false">\n                          <next>\n                            <block type="maze_turn" editable="false"\n                              deletable="false">\n                              <title name="DIR">turnRight</title>\n                              <next>\n                                <block type="maze_moveForward"\n                                  editable="false" deletable="false">\n                                  <next>\n                                    <block type="maze_dig"\n                                      editable="false" deletable="false">\n                                      <next>\n                                        <block type="maze_turn"\n                                          editable="false" deletable="false">\n                                          <title name="DIR">turnLeft</title>\n                                        </block>\n                                      </next>\n                                    </block>\n                                  </next>\n                                </block>\n                              </next>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 9) { -%>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.removeStack({shovelfuls: 4}) %></title>\n      <statement name="STACK">\n        <block type="maze_turn" editable="false" deletable="false">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="controls_repeat" editable="false" deletable="false">\n              <title name="TIMES">4</title>\n              <statement name="DO">\n                <block type="maze_dig" editable="false"\n                  deletable="false">\n                  <next>\n                    <block type="maze_moveForward" editable="false"\n                      deletable="false"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn" editable="false" deletable="false">\n                  <title name="DIR">turnRight</title>\n                  <next>\n                    <block type="maze_turn" editable="false" deletable="false">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="controls_repeat" editable="false"\n                          deletable="false">\n                          <title name="TIMES">4</title>\n                          <statement name="DO">\n                            <block type="maze_moveForward" editable="false"\n                              deletable="false"></block>\n                          </statement>\n                          <next>\n                            <block type="maze_turn" editable="false"\n                              deletable="false">\n                              <title name="DIR">turnLeft</title>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 10) { -%>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.removeStack({shovelfuls: 4}) %></title>\n      <statement name="STACK">\n        <block type="maze_turn" editable="false" deletable="false">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="controls_repeat" editable="false" deletable="false">\n              <title name="TIMES">4</title>\n              <statement name="DO">\n                <block type="maze_dig" editable="false"\n                  deletable="false">\n                  <next>\n                    <block type="maze_moveForward" editable="false"\n                      deletable="false"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn" editable="false" deletable="false">\n                  <title name="DIR">turnRight</title>\n                  <next>\n                    <block type="maze_turn" editable="false" deletable="false">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="controls_repeat" editable="false"\n                          deletable="false">\n                          <title name="TIMES">4</title>\n                          <statement name="DO">\n                            <block type="maze_moveForward" editable="false"\n                              deletable="false"></block>\n                          </statement>\n                          <next>\n                            <block type="maze_turn" editable="false"\n                              deletable="false">\n                              <title name="DIR">turnLeft</title>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n    <block type="procedures_defnoreturn" x="300" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.fillStack({shovelfuls: 2}) %></title>\n      <statement name="STACK">\n        <block type="maze_turn" editable="false" deletable="false">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="controls_repeat" editable="false" deletable="false">\n              <title name="TIMES">2</title>\n              <statement name="DO">\n                <block type="maze_fill" editable="false"\n                  deletable="false">\n                  <next>\n                    <block type="maze_moveForward" editable="false"\n                      deletable="false"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn" editable="false" deletable="false">\n                  <title name="DIR">turnRight</title>\n                  <next>\n                    <block type="maze_turn" editable="false" deletable="false">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="controls_repeat" editable="false"\n                          deletable="false">\n                          <title name="TIMES">2</title>\n                          <statement name="DO">\n                            <block type="maze_moveForward" editable="false"\n                              deletable="false"></block>\n                          </statement>\n                          <next>\n                            <block type="maze_turn" editable="false"\n                              deletable="false">\n                              <title name="DIR">turnLeft</title>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 11) { -%>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.removeAndAvoidTheCow() %></title>\n      <statement name="STACK">\n        <block type="maze_dig" editable="false" deletable="false">\n          <next>\n            <block type="maze_turn" editable="false" deletable="false">\n              <title name="DIR">turnLeft</title>\n              <next>\n                <block type="maze_moveForward" editable="false"\n                  deletable="false">\n                  <next>\n                    <block type="maze_turn" editable="false" deletable="false">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="maze_moveForward" editable="false"\n                          deletable="false">\n                          <next>\n                            <block type="maze_moveForward" editable="false"\n                              deletable="false">\n                              <next>\n                                <block type="maze_turn" editable="false"\n                                  deletable="false">\n                                  <title name="DIR">turnRight</title>\n                                  <next>\n                                    <block type="maze_moveForward"\n                                      editable="false" deletable="false">\n                                      <next>\n                                        <block type="maze_turn"\n                                          editable="false" deletable="false">\n                                          <title name="DIR">turnLeft\n                                          </title>\n                                        </block>\n                                      </next>\n                                    </block>\n                                  </next>\n                                </block>\n                              </next>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  <% } -%>\n<% } else if (page === 3) { -%>\n  <% if (level === 1) { -%>\n    <block type="maze_moveForward" x="70" y="70">\n      <next>\n        <block type="maze_turn">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="maze_moveForward">\n              <next>\n                <block type="maze_dig">\n                  <next>\n                    <block type="maze_turn">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="maze_moveForward">\n                          <next>\n                            <block type="maze_fill"></block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </next>\n    </block>\n  <% } else if (level === 2) { -%>\n    <block type="maze_moveForward" x="70" y="70">\n      <next>\n        <block type="maze_moveForward">\n          <next>\n            <block type="maze_moveForward">\n              <next>\n                <block type="maze_moveForward">\n                  <next>\n                    <block type="maze_dig"></block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </next>\n    </block>\n  <% } else if (level === 3) { -%>\n    <block type="maze_moveForward" x="70" y="70">\n      <next>\n        <block type="maze_turn">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="maze_moveForward">\n              <next>\n                <block type="controls_repeat">\n                  <title name="TIMES">10</title>\n                  <statement name="DO">\n                    <block type="maze_dig"></block>\n                  </statement>\n                  <next>\n                    <block type="maze_turn">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="maze_moveForward">\n                          <next>\n                            <block type="maze_turn">\n                              <title name="DIR">turnLeft</title>\n                              <next>\n                                <block type="maze_moveForward">\n                                  <next>\n                                    <block type="controls_repeat">\n                                      <title name="TIMES">10</title>\n                                      <statement name="DO">\n                                        <block type="maze_dig"></block>\n                                      </statement>\n                                    </block>\n                                  </next>\n                                </block>\n                              </next>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </next>\n    </block>\n  <% } else if (level === 4) { -%>\n    <block type="controls_repeat" x="70" y="70">\n      <title name="TIMES">5</title>\n      <statement name="DO">\n        <block type="maze_moveForward"></block>\n      </statement>\n      <next>\n        <block type="maze_untilBlockedOrNotClear">\n          <title name="DIR">pilePresent</title>\n          <statement name="DO">\n            <block type="maze_fill"></block>\n          </statement>\n        </block>\n      </next>\n    </block>\n  <% } else if (level === 5) { -%>\n    <block type="controls_repeat" x="70" y="70">\n      <title name="TIMES">7</title>\n      <statement name="DO">\n        <block type="maze_moveForward">\n          <next>\n            <block type="maze_dig">\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                  <next>\n                    <block type="maze_moveForward">\n                      <next>\n                        <block type="maze_turn">\n                          <title name="DIR">turnRight</title>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 6) { -%>\n    <block type="controls_repeat" x="70" y="70">\n      <title name="TIMES">7</title>\n      <statement name="DO">\n        <block type="maze_moveForward">\n          <next>\n            <block type="karel_if">\n              <title name="DIR">pilePresent</title>\n              <statement name="DO">\n                <block type="maze_dig"></block>\n              </statement>\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                  <next>\n                    <block type="maze_moveForward">\n                      <next>\n                        <block type="maze_turn">\n                          <title name="DIR">turnRight</title>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 7) { -%>\n    <block type="procedures_callnoreturn" x="20" y="70"\n      editable="false" deletable="false">\n      <mutation name="<%= msg.removeSquare() %>"></mutation>\n    </block>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false" deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.removeSquare() %></title>\n      <statement name="STACK">\n        <block type="controls_repeat">\n          <title name="TIMES">4</title>\n          <statement name="DO">\n            <block type="controls_repeat">\n              <title name="TIMES">2</title>\n              <statement name="DO">\n                <block type="maze_moveForward">\n                  <next>\n                    <block type="maze_dig"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                </block>\n              </next>\n            </block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 8) { -%>\n    <block type="procedures_callnoreturn" x="20" y="70">\n      <mutation name="<%= msg.fillSquare() %>"></mutation>\n      <next>\n        <block type="controls_repeat">\n          <title name="TIMES">5</title>\n          <statement name="DO">\n            <block type="maze_moveForward"></block>\n          </statement>\n          <next>\n            <block type="procedures_callnoreturn">\n              <mutation name="<%= msg.removeSquare() %>"></mutation>\n            </block>\n          </next>\n        </block>\n      </next>\n    </block>\n    <block type="procedures_defnoreturn" deletable="false"\n      editable="false" x="20" y="250">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.removeSquare() %></title>\n      <statement name="STACK">\n        <block type="controls_repeat">\n          <title name="TIMES">4</title>\n          <statement name="DO">\n            <block type="controls_repeat">\n              <title name="TIMES">2</title>\n              <statement name="DO">\n                <block type="maze_moveForward">\n                  <next>\n                    <block type="maze_dig"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                </block>\n              </next>\n            </block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n    <block type="procedures_defnoreturn" deletable="false"\n      editable="false" x="350" y="250">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.fillSquare() %></title>\n      <statement name="STACK">\n        <block type="controls_repeat">\n          <title name="TIMES">4</title>\n          <statement name="DO">\n            <block type="controls_repeat">\n              <title name="TIMES">2</title>\n              <statement name="DO">\n                <block type="maze_moveForward">\n                  <next>\n                    <block type="maze_fill"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                </block>\n              </next>\n            </block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 9) { -%>\n    <block type="controls_for" inline="true" x="20" y="70">\n      <title name="VAR">counter</title>\n      <value name="FROM">\n        <block type="math_number">\n          <title name="NUM">1</title>\n        </block>\n      </value>\n      <value name="TO">\n        <block type="math_number">\n          <title name="NUM">6</title>\n        </block>\n      </value>\n      <value name="BY">\n        <block type="math_number">\n          <title name="NUM">1</title>\n        </block>\n      </value>\n      <statement name="DO">\n        <block type="procedures_callnoreturn" inline="false">\n          <mutation name="<%= msg.removePile() %>">\n            <arg name="<%= msg.heightParameter() %>"></arg>\n          </mutation>\n          <value name="ARG0">\n            <block type="math_number">\n              <title name="NUM">1</title>\n            </block>\n          </value>\n          <next>\n            <block type="maze_moveForward"></block>\n          </next>\n        </block>\n      </statement>\n    </block>\n    <block type="procedures_defnoreturn" x="20" y="250" editable="false" deletable="false">\n      <mutation>\n        <arg name="<%= msg.heightParameter() %>"></arg>\n      </mutation>\n      <title name="NAME"><%= msg.removePile() %></title>\n      <statement name="STACK">\n        <block type="controls_repeat_ext" inline="true">\n          <value name="TIMES">\n            <block type="math_number">\n              <title name="NUM">1</title>\n            </block>\n          </value>\n          <statement name="DO">\n            <block type="maze_dig"></block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n  <% } -%>\n<% } -%>\n',__filename="src/maze/karelStartBlocks.xml.ejs";try{var __output=[],__append=__output.push.bind(__output);with(locals||{}){var msg=__webpack_require__(851),fillShovelfuls=function(e){__line=8,__append('  <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n    deletable="false">\n    <mutation></mutation>\n    <title name="NAME">'),__line=12,__append(escape(msg.fillN({shovelfuls:e}))),__append('</title>\n    <statement name="STACK">\n      <block type="controls_repeat" editable="false" deletable="false">\n        <title name="TIMES">'),__line=15,__append(escape(e)),__append('</title>\n        <statement name="DO">\n          <block type="maze_fill" editable="false" deletable="false">\n          </block>\n        </statement>\n       </block>\n    </statement>\n  </block>\n'),__line=23};__append("\n"),__line=25;var removeShovelfuls=function(e){__line=29,__append('  <block type="procedures_defnoreturn" x="300" y="200" editable="false"\n    deletable="false">\n    <mutation></mutation>\n    <title name="NAME">'),__line=33,__append(escape(msg.removeN({shovelfuls:e}))),__append('</title>\n    <statement name="STACK">\n      <block type="controls_repeat" editable="false" deletable="false">\n        <title name="TIMES">'),__line=36,__append(escape(e)),__append('</title>\n        <statement name="DO">\n          <block type="maze_dig" editable="false" deletable="false">\n          </block>\n        </statement>\n       </block>\n    </statement>\n  </block>\n'),__line=44};__append("\n\n"),__line=46,1===page?(__append("  "),__line=47,1===level?(__append('    <block type="maze_moveForward" x="70" y="70"></block>\n  '),__line=49):2===level?(__append('    <block type="maze_moveForward" x="70" y="70"></block>\n  '),__line=51):3===level?(__append('    <block type="maze_moveForward" x="70" y="70"></block>\n  '),__line=53):4===level?(__append('    <block type="maze_moveForward" x="70" y="70"></block>\n  '),__line=55):5===level?(__append('    <block type="maze_untilBlocked" x="70" y="70"></block>\n  '),__line=57):6===level?(__append('    <block type="maze_dig" x="70" y="70"></block>\n  '),__line=59):7===level?(__append('    <block type="maze_turn" x="70" y="70">\n          <title name="DIR">turnRight</title>\n    </block>\n  '),__line=63):8===level?(__append('    <block type="maze_moveForward" x="70" y="70"></block>\n  '),__line=65):9===level?(__append('    <block type="maze_moveForward" x="70" y="70"></block>\n  '),__line=67):10===level?(__append('    <block type="maze_untilBlocked" x="70" y="70"></block>\n  '),__line=69):11===level&&(__append('    <block type="maze_untilBlocked" x="70" y="70"></block>\n  '),__line=71),__line=72):2===page?(__append("  "),__line=73,2===level?(__append('    <block type="maze_moveForward" x="20" y="70"></block>\n    '),__line=75,fillShovelfuls(5),__append("  "),__line=76):3===level?(__append("    "),__line=77,fillShovelfuls(5),__append("  "),__line=78):4===level?(__append("    "),__line=79,fillShovelfuls(5),__append('    <block type="procedures_defnoreturn" x="300" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME">'),__line=83,__append(escape(msg.removeN({shovelfuls:7}))),__append("</title>\n    </block>\n  "),__line=85):5===level?(__append('    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME">'),__line=89,__append(escape(msg.removeN({shovelfuls:6}))),__append("</title>\n    </block>\n  "),__line=91):6===level?(__append("    "),__line=92,fillShovelfuls(8),__append("    "),__line=93,function(e){__line=29,__append('  <block type="procedures_defnoreturn" x="300" y="200" editable="false"\n    deletable="false">\n    <mutation></mutation>\n    <title name="NAME">'),__line=33,__append(escape(msg.removeN({shovelfuls:e}))),__append('</title>\n    <statement name="STACK">\n      <block type="controls_repeat" editable="false" deletable="false">\n        <title name="TIMES">'),__line=36,__append(escape(e)),__append('</title>\n        <statement name="DO">\n          <block type="maze_dig" editable="false" deletable="false">\n          </block>\n        </statement>\n       </block>\n    </statement>\n  </block>\n'),__line=44}(8),__append("  "),__line=94):7===level?(__append('    <block type="procedures_callnoreturn" x="20" y="70" editable="false"\n      deletable="false">\n      <mutation name="'),__line=97,__append(escape(msg.avoidCowAndRemove())),__append('"></mutation>\n    </block>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME">'),__line=102,__append(escape(msg.avoidCowAndRemove())),__append("</title>\n    </block>\n  "),__line=104):8===level?(__append('    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME">'),__line=108,__append(escape(msg.avoidCowAndRemove())),__append('</title>\n      <statement name="STACK">\n        <block type="maze_turn" editable="false" deletable="false">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="maze_moveForward" editable="false" deletable="false">\n              <next>\n                <block type="maze_turn" editable="false" deletable="false">\n                  <title name="DIR">turnRight</title>\n                  <next>\n                    <block type="maze_moveForward" editable="false"\n                      deletable="false">\n                      <next>\n                        <block type="maze_moveForward" editable="false"\n                          deletable="false">\n                          <next>\n                            <block type="maze_turn" editable="false"\n                              deletable="false">\n                              <title name="DIR">turnRight</title>\n                              <next>\n                                <block type="maze_moveForward"\n                                  editable="false" deletable="false">\n                                  <next>\n                                    <block type="maze_dig"\n                                      editable="false" deletable="false">\n                                      <next>\n                                        <block type="maze_turn"\n                                          editable="false" deletable="false">\n                                          <title name="DIR">turnLeft</title>\n                                        </block>\n                                      </next>\n                                    </block>\n                                  </next>\n                                </block>\n                              </next>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  '),__line=156):9===level?(__append('    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME">'),__line=160,__append(escape(msg.removeStack({shovelfuls:4}))),__append('</title>\n      <statement name="STACK">\n        <block type="maze_turn" editable="false" deletable="false">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="controls_repeat" editable="false" deletable="false">\n              <title name="TIMES">4</title>\n              <statement name="DO">\n                <block type="maze_dig" editable="false"\n                  deletable="false">\n                  <next>\n                    <block type="maze_moveForward" editable="false"\n                      deletable="false"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn" editable="false" deletable="false">\n                  <title name="DIR">turnRight</title>\n                  <next>\n                    <block type="maze_turn" editable="false" deletable="false">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="controls_repeat" editable="false"\n                          deletable="false">\n                          <title name="TIMES">4</title>\n                          <statement name="DO">\n                            <block type="maze_moveForward" editable="false"\n                              deletable="false"></block>\n                          </statement>\n                          <next>\n                            <block type="maze_turn" editable="false"\n                              deletable="false">\n                              <title name="DIR">turnLeft</title>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  '),__line=207):10===level?(__append('    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME">'),__line=211,__append(escape(msg.removeStack({shovelfuls:4}))),__append('</title>\n      <statement name="STACK">\n        <block type="maze_turn" editable="false" deletable="false">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="controls_repeat" editable="false" deletable="false">\n              <title name="TIMES">4</title>\n              <statement name="DO">\n                <block type="maze_dig" editable="false"\n                  deletable="false">\n                  <next>\n                    <block type="maze_moveForward" editable="false"\n                      deletable="false"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn" editable="false" deletable="false">\n                  <title name="DIR">turnRight</title>\n                  <next>\n                    <block type="maze_turn" editable="false" deletable="false">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="controls_repeat" editable="false"\n                          deletable="false">\n                          <title name="TIMES">4</title>\n                          <statement name="DO">\n                            <block type="maze_moveForward" editable="false"\n                              deletable="false"></block>\n                          </statement>\n                          <next>\n                            <block type="maze_turn" editable="false"\n                              deletable="false">\n                              <title name="DIR">turnLeft</title>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n    <block type="procedures_defnoreturn" x="300" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME">'),__line=261,__append(escape(msg.fillStack({shovelfuls:2}))),__append('</title>\n      <statement name="STACK">\n        <block type="maze_turn" editable="false" deletable="false">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="controls_repeat" editable="false" deletable="false">\n              <title name="TIMES">2</title>\n              <statement name="DO">\n                <block type="maze_fill" editable="false"\n                  deletable="false">\n                  <next>\n                    <block type="maze_moveForward" editable="false"\n                      deletable="false"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn" editable="false" deletable="false">\n                  <title name="DIR">turnRight</title>\n                  <next>\n                    <block type="maze_turn" editable="false" deletable="false">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="controls_repeat" editable="false"\n                          deletable="false">\n                          <title name="TIMES">2</title>\n                          <statement name="DO">\n                            <block type="maze_moveForward" editable="false"\n                              deletable="false"></block>\n                          </statement>\n                          <next>\n                            <block type="maze_turn" editable="false"\n                              deletable="false">\n                              <title name="DIR">turnLeft</title>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  '),__line=308):11===level&&(__append('    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME">'),__line=312,__append(escape(msg.removeAndAvoidTheCow())),__append('</title>\n      <statement name="STACK">\n        <block type="maze_dig" editable="false" deletable="false">\n          <next>\n            <block type="maze_turn" editable="false" deletable="false">\n              <title name="DIR">turnLeft</title>\n              <next>\n                <block type="maze_moveForward" editable="false"\n                  deletable="false">\n                  <next>\n                    <block type="maze_turn" editable="false" deletable="false">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="maze_moveForward" editable="false"\n                          deletable="false">\n                          <next>\n                            <block type="maze_moveForward" editable="false"\n                              deletable="false">\n                              <next>\n                                <block type="maze_turn" editable="false"\n                                  deletable="false">\n                                  <title name="DIR">turnRight</title>\n                                  <next>\n                                    <block type="maze_moveForward"\n                                      editable="false" deletable="false">\n                                      <next>\n                                        <block type="maze_turn"\n                                          editable="false" deletable="false">\n                                          <title name="DIR">turnLeft\n                                          </title>\n                                        </block>\n                                      </next>\n                                    </block>\n                                  </next>\n                                </block>\n                              </next>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  '),__line=361),__line=362):3===page&&(__append("  "),__line=363,1===level?(__append('    <block type="maze_moveForward" x="70" y="70">\n      <next>\n        <block type="maze_turn">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="maze_moveForward">\n              <next>\n                <block type="maze_dig">\n                  <next>\n                    <block type="maze_turn">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="maze_moveForward">\n                          <next>\n                            <block type="maze_fill"></block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </next>\n    </block>\n  '),__line=391):2===level?(__append('    <block type="maze_moveForward" x="70" y="70">\n      <next>\n        <block type="maze_moveForward">\n          <next>\n            <block type="maze_moveForward">\n              <next>\n                <block type="maze_moveForward">\n                  <next>\n                    <block type="maze_dig"></block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </next>\n    </block>\n  '),__line=409):3===level?(__append('    <block type="maze_moveForward" x="70" y="70">\n      <next>\n        <block type="maze_turn">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="maze_moveForward">\n              <next>\n                <block type="controls_repeat">\n                  <title name="TIMES">10</title>\n                  <statement name="DO">\n                    <block type="maze_dig"></block>\n                  </statement>\n                  <next>\n                    <block type="maze_turn">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="maze_moveForward">\n                          <next>\n                            <block type="maze_turn">\n                              <title name="DIR">turnLeft</title>\n                              <next>\n                                <block type="maze_moveForward">\n                                  <next>\n                                    <block type="controls_repeat">\n                                      <title name="TIMES">10</title>\n                                      <statement name="DO">\n                                        <block type="maze_dig"></block>\n                                      </statement>\n                                    </block>\n                                  </next>\n                                </block>\n                              </next>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </next>\n    </block>\n  '),__line=455):4===level?(__append('    <block type="controls_repeat" x="70" y="70">\n      <title name="TIMES">5</title>\n      <statement name="DO">\n        <block type="maze_moveForward"></block>\n      </statement>\n      <next>\n        <block type="maze_untilBlockedOrNotClear">\n          <title name="DIR">pilePresent</title>\n          <statement name="DO">\n            <block type="maze_fill"></block>\n          </statement>\n        </block>\n      </next>\n    </block>\n  '),__line=470):5===level?(__append('    <block type="controls_repeat" x="70" y="70">\n      <title name="TIMES">7</title>\n      <statement name="DO">\n        <block type="maze_moveForward">\n          <next>\n            <block type="maze_dig">\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                  <next>\n                    <block type="maze_moveForward">\n                      <next>\n                        <block type="maze_turn">\n                          <title name="DIR">turnRight</title>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  '),__line=496):6===level?(__append('    <block type="controls_repeat" x="70" y="70">\n      <title name="TIMES">7</title>\n      <statement name="DO">\n        <block type="maze_moveForward">\n          <next>\n            <block type="karel_if">\n              <title name="DIR">pilePresent</title>\n              <statement name="DO">\n                <block type="maze_dig"></block>\n              </statement>\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                  <next>\n                    <block type="maze_moveForward">\n                      <next>\n                        <block type="maze_turn">\n                          <title name="DIR">turnRight</title>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  '),__line=526):7===level?(__append('    <block type="procedures_callnoreturn" x="20" y="70"\n      editable="false" deletable="false">\n      <mutation name="'),__line=529,__append(escape(msg.removeSquare())),__append('"></mutation>\n    </block>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false" deletable="false">\n      <mutation></mutation>\n      <title name="NAME">'),__line=533,__append(escape(msg.removeSquare())),__append('</title>\n      <statement name="STACK">\n        <block type="controls_repeat">\n          <title name="TIMES">4</title>\n          <statement name="DO">\n            <block type="controls_repeat">\n              <title name="TIMES">2</title>\n              <statement name="DO">\n                <block type="maze_moveForward">\n                  <next>\n                    <block type="maze_dig"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                </block>\n              </next>\n            </block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n  '),__line=557):8===level?(__append('    <block type="procedures_callnoreturn" x="20" y="70">\n      <mutation name="'),__line=559,__append(escape(msg.fillSquare())),__append('"></mutation>\n      <next>\n        <block type="controls_repeat">\n          <title name="TIMES">5</title>\n          <statement name="DO">\n            <block type="maze_moveForward"></block>\n          </statement>\n          <next>\n            <block type="procedures_callnoreturn">\n              <mutation name="'),__line=568,__append(escape(msg.removeSquare())),__append('"></mutation>\n            </block>\n          </next>\n        </block>\n      </next>\n    </block>\n    <block type="procedures_defnoreturn" deletable="false"\n      editable="false" x="20" y="250">\n      <mutation></mutation>\n      <title name="NAME">'),__line=577,__append(escape(msg.removeSquare())),__append('</title>\n      <statement name="STACK">\n        <block type="controls_repeat">\n          <title name="TIMES">4</title>\n          <statement name="DO">\n            <block type="controls_repeat">\n              <title name="TIMES">2</title>\n              <statement name="DO">\n                <block type="maze_moveForward">\n                  <next>\n                    <block type="maze_dig"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                </block>\n              </next>\n            </block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n    <block type="procedures_defnoreturn" deletable="false"\n      editable="false" x="350" y="250">\n      <mutation></mutation>\n      <title name="NAME">'),__line=604,__append(escape(msg.fillSquare())),__append('</title>\n      <statement name="STACK">\n        <block type="controls_repeat">\n          <title name="TIMES">4</title>\n          <statement name="DO">\n            <block type="controls_repeat">\n              <title name="TIMES">2</title>\n              <statement name="DO">\n                <block type="maze_moveForward">\n                  <next>\n                    <block type="maze_fill"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                </block>\n              </next>\n            </block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n  '),__line=628):9===level&&(__append('    <block type="controls_for" inline="true" x="20" y="70">\n      <title name="VAR">counter</title>\n      <value name="FROM">\n        <block type="math_number">\n          <title name="NUM">1</title>\n        </block>\n      </value>\n      <value name="TO">\n        <block type="math_number">\n          <title name="NUM">6</title>\n        </block>\n      </value>\n      <value name="BY">\n        <block type="math_number">\n          <title name="NUM">1</title>\n        </block>\n      </value>\n      <statement name="DO">\n        <block type="procedures_callnoreturn" inline="false">\n          <mutation name="'),__line=648,__append(escape(msg.removePile())),__append('">\n            <arg name="'),__line=649,__append(escape(msg.heightParameter())),__append('"></arg>\n          </mutation>\n          <value name="ARG0">\n            <block type="math_number">\n              <title name="NUM">1</title>\n            </block>\n          </value>\n          <next>\n            <block type="maze_moveForward"></block>\n          </next>\n        </block>\n      </statement>\n    </block>\n    <block type="procedures_defnoreturn" x="20" y="250" editable="false" deletable="false">\n      <mutation>\n        <arg name="'),__line=664,__append(escape(msg.heightParameter())),__append('"></arg>\n      </mutation>\n      <title name="NAME">'),__line=666,__append(escape(msg.removePile())),__append('</title>\n      <statement name="STACK">\n        <block type="controls_repeat_ext" inline="true">\n          <value name="TIMES">\n            <block type="math_number">\n              <title name="NUM">1</title>\n            </block>\n          </value>\n          <statement name="DO">\n            <block type="maze_dig"></block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n  '),__line=680),__line=681),__line=682}return __output.join("")}catch(e){rethrow(e,'<%\n\nvar msg = require(\'./locale\');\n\n/**\n * Template to create function for filling in shovels.\n */\nvar fillShovelfuls = function(n) { -%>\n  <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n    deletable="false">\n    <mutation></mutation>\n    <title name="NAME"><%= msg.fillN({shovelfuls: n}) %></title>\n    <statement name="STACK">\n      <block type="controls_repeat" editable="false" deletable="false">\n        <title name="TIMES"><%= n %></title>\n        <statement name="DO">\n          <block type="maze_fill" editable="false" deletable="false">\n          </block>\n        </statement>\n       </block>\n    </statement>\n  </block>\n<% }; -%>\n\n<%\n/**\n * Template to create function for removing in shovels.\n */\nvar removeShovelfuls = function(n) { -%>\n  <block type="procedures_defnoreturn" x="300" y="200" editable="false"\n    deletable="false">\n    <mutation></mutation>\n    <title name="NAME"><%= msg.removeN({shovelfuls: n}) %></title>\n    <statement name="STACK">\n      <block type="controls_repeat" editable="false" deletable="false">\n        <title name="TIMES"><%= n %></title>\n        <statement name="DO">\n          <block type="maze_dig" editable="false" deletable="false">\n          </block>\n        </statement>\n       </block>\n    </statement>\n  </block>\n<% }; %>\n\n<% if (page === 1) { -%>\n  <% if (level === 1) { -%>\n    <block type="maze_moveForward" x="70" y="70"></block>\n  <% } else if (level === 2) { -%>\n    <block type="maze_moveForward" x="70" y="70"></block>\n  <% } else if (level === 3) { -%>\n    <block type="maze_moveForward" x="70" y="70"></block>\n  <% } else if (level === 4) { -%>\n    <block type="maze_moveForward" x="70" y="70"></block>\n  <% } else if (level === 5) { -%>\n    <block type="maze_untilBlocked" x="70" y="70"></block>\n  <% } else if (level === 6) { -%>\n    <block type="maze_dig" x="70" y="70"></block>\n  <% } else if (level === 7) { -%>\n    <block type="maze_turn" x="70" y="70">\n          <title name="DIR">turnRight</title>\n    </block>\n  <% } else if (level === 8) { -%>\n    <block type="maze_moveForward" x="70" y="70"></block>\n  <% } else if (level === 9) { -%>\n    <block type="maze_moveForward" x="70" y="70"></block>\n  <% } else if (level === 10) { -%>\n    <block type="maze_untilBlocked" x="70" y="70"></block>\n  <% } else if (level === 11) { -%>\n    <block type="maze_untilBlocked" x="70" y="70"></block>\n  <% } -%>\n<% } else if (page === 2) { -%>\n  <% if (level === 2) { -%>\n    <block type="maze_moveForward" x="20" y="70"></block>\n    <% fillShovelfuls(5) -%>\n  <% } else if (level === 3) { -%>\n    <% fillShovelfuls(5) -%>\n  <% } else if (level === 4) { -%>\n    <% fillShovelfuls(5) -%>\n    <block type="procedures_defnoreturn" x="300" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.removeN({shovelfuls: 7}) %></title>\n    </block>\n  <% } else if (level === 5) { -%>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.removeN({shovelfuls: 6}) %></title>\n    </block>\n  <% } else if (level === 6) { -%>\n    <% fillShovelfuls(8) -%>\n    <% removeShovelfuls(8) -%>\n  <% } else if (level === 7) { -%>\n    <block type="procedures_callnoreturn" x="20" y="70" editable="false"\n      deletable="false">\n      <mutation name="<%= msg.avoidCowAndRemove() %>"></mutation>\n    </block>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.avoidCowAndRemove() %></title>\n    </block>\n  <% } else if (level === 8) { -%>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.avoidCowAndRemove() %></title>\n      <statement name="STACK">\n        <block type="maze_turn" editable="false" deletable="false">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="maze_moveForward" editable="false" deletable="false">\n              <next>\n                <block type="maze_turn" editable="false" deletable="false">\n                  <title name="DIR">turnRight</title>\n                  <next>\n                    <block type="maze_moveForward" editable="false"\n                      deletable="false">\n                      <next>\n                        <block type="maze_moveForward" editable="false"\n                          deletable="false">\n                          <next>\n                            <block type="maze_turn" editable="false"\n                              deletable="false">\n                              <title name="DIR">turnRight</title>\n                              <next>\n                                <block type="maze_moveForward"\n                                  editable="false" deletable="false">\n                                  <next>\n                                    <block type="maze_dig"\n                                      editable="false" deletable="false">\n                                      <next>\n                                        <block type="maze_turn"\n                                          editable="false" deletable="false">\n                                          <title name="DIR">turnLeft</title>\n                                        </block>\n                                      </next>\n                                    </block>\n                                  </next>\n                                </block>\n                              </next>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 9) { -%>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.removeStack({shovelfuls: 4}) %></title>\n      <statement name="STACK">\n        <block type="maze_turn" editable="false" deletable="false">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="controls_repeat" editable="false" deletable="false">\n              <title name="TIMES">4</title>\n              <statement name="DO">\n                <block type="maze_dig" editable="false"\n                  deletable="false">\n                  <next>\n                    <block type="maze_moveForward" editable="false"\n                      deletable="false"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn" editable="false" deletable="false">\n                  <title name="DIR">turnRight</title>\n                  <next>\n                    <block type="maze_turn" editable="false" deletable="false">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="controls_repeat" editable="false"\n                          deletable="false">\n                          <title name="TIMES">4</title>\n                          <statement name="DO">\n                            <block type="maze_moveForward" editable="false"\n                              deletable="false"></block>\n                          </statement>\n                          <next>\n                            <block type="maze_turn" editable="false"\n                              deletable="false">\n                              <title name="DIR">turnLeft</title>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 10) { -%>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.removeStack({shovelfuls: 4}) %></title>\n      <statement name="STACK">\n        <block type="maze_turn" editable="false" deletable="false">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="controls_repeat" editable="false" deletable="false">\n              <title name="TIMES">4</title>\n              <statement name="DO">\n                <block type="maze_dig" editable="false"\n                  deletable="false">\n                  <next>\n                    <block type="maze_moveForward" editable="false"\n                      deletable="false"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn" editable="false" deletable="false">\n                  <title name="DIR">turnRight</title>\n                  <next>\n                    <block type="maze_turn" editable="false" deletable="false">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="controls_repeat" editable="false"\n                          deletable="false">\n                          <title name="TIMES">4</title>\n                          <statement name="DO">\n                            <block type="maze_moveForward" editable="false"\n                              deletable="false"></block>\n                          </statement>\n                          <next>\n                            <block type="maze_turn" editable="false"\n                              deletable="false">\n                              <title name="DIR">turnLeft</title>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n    <block type="procedures_defnoreturn" x="300" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.fillStack({shovelfuls: 2}) %></title>\n      <statement name="STACK">\n        <block type="maze_turn" editable="false" deletable="false">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="controls_repeat" editable="false" deletable="false">\n              <title name="TIMES">2</title>\n              <statement name="DO">\n                <block type="maze_fill" editable="false"\n                  deletable="false">\n                  <next>\n                    <block type="maze_moveForward" editable="false"\n                      deletable="false"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn" editable="false" deletable="false">\n                  <title name="DIR">turnRight</title>\n                  <next>\n                    <block type="maze_turn" editable="false" deletable="false">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="controls_repeat" editable="false"\n                          deletable="false">\n                          <title name="TIMES">2</title>\n                          <statement name="DO">\n                            <block type="maze_moveForward" editable="false"\n                              deletable="false"></block>\n                          </statement>\n                          <next>\n                            <block type="maze_turn" editable="false"\n                              deletable="false">\n                              <title name="DIR">turnLeft</title>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 11) { -%>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false"\n      deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.removeAndAvoidTheCow() %></title>\n      <statement name="STACK">\n        <block type="maze_dig" editable="false" deletable="false">\n          <next>\n            <block type="maze_turn" editable="false" deletable="false">\n              <title name="DIR">turnLeft</title>\n              <next>\n                <block type="maze_moveForward" editable="false"\n                  deletable="false">\n                  <next>\n                    <block type="maze_turn" editable="false" deletable="false">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="maze_moveForward" editable="false"\n                          deletable="false">\n                          <next>\n                            <block type="maze_moveForward" editable="false"\n                              deletable="false">\n                              <next>\n                                <block type="maze_turn" editable="false"\n                                  deletable="false">\n                                  <title name="DIR">turnRight</title>\n                                  <next>\n                                    <block type="maze_moveForward"\n                                      editable="false" deletable="false">\n                                      <next>\n                                        <block type="maze_turn"\n                                          editable="false" deletable="false">\n                                          <title name="DIR">turnLeft\n                                          </title>\n                                        </block>\n                                      </next>\n                                    </block>\n                                  </next>\n                                </block>\n                              </next>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  <% } -%>\n<% } else if (page === 3) { -%>\n  <% if (level === 1) { -%>\n    <block type="maze_moveForward" x="70" y="70">\n      <next>\n        <block type="maze_turn">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="maze_moveForward">\n              <next>\n                <block type="maze_dig">\n                  <next>\n                    <block type="maze_turn">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="maze_moveForward">\n                          <next>\n                            <block type="maze_fill"></block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </next>\n    </block>\n  <% } else if (level === 2) { -%>\n    <block type="maze_moveForward" x="70" y="70">\n      <next>\n        <block type="maze_moveForward">\n          <next>\n            <block type="maze_moveForward">\n              <next>\n                <block type="maze_moveForward">\n                  <next>\n                    <block type="maze_dig"></block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </next>\n    </block>\n  <% } else if (level === 3) { -%>\n    <block type="maze_moveForward" x="70" y="70">\n      <next>\n        <block type="maze_turn">\n          <title name="DIR">turnLeft</title>\n          <next>\n            <block type="maze_moveForward">\n              <next>\n                <block type="controls_repeat">\n                  <title name="TIMES">10</title>\n                  <statement name="DO">\n                    <block type="maze_dig"></block>\n                  </statement>\n                  <next>\n                    <block type="maze_turn">\n                      <title name="DIR">turnRight</title>\n                      <next>\n                        <block type="maze_moveForward">\n                          <next>\n                            <block type="maze_turn">\n                              <title name="DIR">turnLeft</title>\n                              <next>\n                                <block type="maze_moveForward">\n                                  <next>\n                                    <block type="controls_repeat">\n                                      <title name="TIMES">10</title>\n                                      <statement name="DO">\n                                        <block type="maze_dig"></block>\n                                      </statement>\n                                    </block>\n                                  </next>\n                                </block>\n                              </next>\n                            </block>\n                          </next>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </next>\n    </block>\n  <% } else if (level === 4) { -%>\n    <block type="controls_repeat" x="70" y="70">\n      <title name="TIMES">5</title>\n      <statement name="DO">\n        <block type="maze_moveForward"></block>\n      </statement>\n      <next>\n        <block type="maze_untilBlockedOrNotClear">\n          <title name="DIR">pilePresent</title>\n          <statement name="DO">\n            <block type="maze_fill"></block>\n          </statement>\n        </block>\n      </next>\n    </block>\n  <% } else if (level === 5) { -%>\n    <block type="controls_repeat" x="70" y="70">\n      <title name="TIMES">7</title>\n      <statement name="DO">\n        <block type="maze_moveForward">\n          <next>\n            <block type="maze_dig">\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                  <next>\n                    <block type="maze_moveForward">\n                      <next>\n                        <block type="maze_turn">\n                          <title name="DIR">turnRight</title>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 6) { -%>\n    <block type="controls_repeat" x="70" y="70">\n      <title name="TIMES">7</title>\n      <statement name="DO">\n        <block type="maze_moveForward">\n          <next>\n            <block type="karel_if">\n              <title name="DIR">pilePresent</title>\n              <statement name="DO">\n                <block type="maze_dig"></block>\n              </statement>\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                  <next>\n                    <block type="maze_moveForward">\n                      <next>\n                        <block type="maze_turn">\n                          <title name="DIR">turnRight</title>\n                        </block>\n                      </next>\n                    </block>\n                  </next>\n                </block>\n              </next>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 7) { -%>\n    <block type="procedures_callnoreturn" x="20" y="70"\n      editable="false" deletable="false">\n      <mutation name="<%= msg.removeSquare() %>"></mutation>\n    </block>\n    <block type="procedures_defnoreturn" x="20" y="200" editable="false" deletable="false">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.removeSquare() %></title>\n      <statement name="STACK">\n        <block type="controls_repeat">\n          <title name="TIMES">4</title>\n          <statement name="DO">\n            <block type="controls_repeat">\n              <title name="TIMES">2</title>\n              <statement name="DO">\n                <block type="maze_moveForward">\n                  <next>\n                    <block type="maze_dig"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                </block>\n              </next>\n            </block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 8) { -%>\n    <block type="procedures_callnoreturn" x="20" y="70">\n      <mutation name="<%= msg.fillSquare() %>"></mutation>\n      <next>\n        <block type="controls_repeat">\n          <title name="TIMES">5</title>\n          <statement name="DO">\n            <block type="maze_moveForward"></block>\n          </statement>\n          <next>\n            <block type="procedures_callnoreturn">\n              <mutation name="<%= msg.removeSquare() %>"></mutation>\n            </block>\n          </next>\n        </block>\n      </next>\n    </block>\n    <block type="procedures_defnoreturn" deletable="false"\n      editable="false" x="20" y="250">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.removeSquare() %></title>\n      <statement name="STACK">\n        <block type="controls_repeat">\n          <title name="TIMES">4</title>\n          <statement name="DO">\n            <block type="controls_repeat">\n              <title name="TIMES">2</title>\n              <statement name="DO">\n                <block type="maze_moveForward">\n                  <next>\n                    <block type="maze_dig"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                </block>\n              </next>\n            </block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n    <block type="procedures_defnoreturn" deletable="false"\n      editable="false" x="350" y="250">\n      <mutation></mutation>\n      <title name="NAME"><%= msg.fillSquare() %></title>\n      <statement name="STACK">\n        <block type="controls_repeat">\n          <title name="TIMES">4</title>\n          <statement name="DO">\n            <block type="controls_repeat">\n              <title name="TIMES">2</title>\n              <statement name="DO">\n                <block type="maze_moveForward">\n                  <next>\n                    <block type="maze_fill"></block>\n                  </next>\n                </block>\n              </statement>\n              <next>\n                <block type="maze_turn">\n                  <title name="DIR">turnLeft</title>\n                </block>\n              </next>\n            </block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 9) { -%>\n    <block type="controls_for" inline="true" x="20" y="70">\n      <title name="VAR">counter</title>\n      <value name="FROM">\n        <block type="math_number">\n          <title name="NUM">1</title>\n        </block>\n      </value>\n      <value name="TO">\n        <block type="math_number">\n          <title name="NUM">6</title>\n        </block>\n      </value>\n      <value name="BY">\n        <block type="math_number">\n          <title name="NUM">1</title>\n        </block>\n      </value>\n      <statement name="DO">\n        <block type="procedures_callnoreturn" inline="false">\n          <mutation name="<%= msg.removePile() %>">\n            <arg name="<%= msg.heightParameter() %>"></arg>\n          </mutation>\n          <value name="ARG0">\n            <block type="math_number">\n              <title name="NUM">1</title>\n            </block>\n          </value>\n          <next>\n            <block type="maze_moveForward"></block>\n          </next>\n        </block>\n      </statement>\n    </block>\n    <block type="procedures_defnoreturn" x="20" y="250" editable="false" deletable="false">\n      <mutation>\n        <arg name="<%= msg.heightParameter() %>"></arg>\n      </mutation>\n      <title name="NAME"><%= msg.removePile() %></title>\n      <statement name="STACK">\n        <block type="controls_repeat_ext" inline="true">\n          <value name="TIMES">\n            <block type="math_number">\n              <title name="NUM">1</title>\n            </block>\n          </value>\n          <statement name="DO">\n            <block type="maze_dig"></block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n  <% } -%>\n<% } -%>\n',"src/maze/karelStartBlocks.xml.ejs",__line)}}},3147:function(e,t,n){"use strict";var l=n(773).Direction,a=n(2909),o=n(743),i=function(){return o.createToolbox(o.blockOfType("maze_moveNorth")+o.blockOfType("maze_moveSouth")+o.blockOfType("maze_moveEast")+o.blockOfType("maze_moveWest"))};e.exports={k_1:{isK1:!0,instructionsImportant:!0,toolbox:i(),ideal:5,requiredBlocks:[[a.moveEast]],startDirection:l.EAST,searchWord:"EAST",step:!0,map:[["_","_","_","_","_","_","_","_"],["_","_","_","_","_","_","_","_"],["_","_","_","_","_","_","_","_"],["_","_","_","_","_","_","_","_"],["_","_",2,"E","A","S","T","_"],["_","_","_","_","_","_","_","_"],["_","K","E","L","L","Y","B","_"],["_","_","_","_","_","_","_","_"]],startBlocks:o.blockOfType("maze_moveEast")},k_2:{isK1:!0,toolbox:i(),ideal:6,requiredBlocks:[[a.moveSouth]],searchWord:"SOUTH",startDirection:l.SOUTH,step:!0,map:[["_","_","_","_","_","_","_","_"],["A","N","G","I","E","D","O","G"],["_","_","_",2,"_","_","_","_"],["_","_","_","S","_","_","_","_"],["_","_","_","O","_","_","_","_"],["_","_","_","U","_","_","_","_"],["_","_","_","T","_","_","_","_"],["_","_","_","H","_","_","_","_"]],startBlocks:o.blockOfType("maze_moveSouth")},k_3:{isK1:!0,toolbox:i(),ideal:5,requiredBlocks:[[a.moveWest]],searchWord:"WEST",startDirection:l.WEST,step:!0,map:[["_","_","_","_","_","_","_","_"],["_","_","_","_","_","_","_","_"],["L","E","V","E","N","S","O","N"],["_","_","_","_","_","_","_","_"],["_","_","T","S","E","W",2,"_"],["_","_","_","_","_","_","_","_"],["_","_","_","_","_","_","_","_"],["_","_","_","_","_","_","_","_"]],startBlocks:o.blockOfType("maze_moveWest")},k_4:{isK1:!0,toolbox:i(),ideal:6,requiredBlocks:[[a.moveNorth]],searchWord:"NORTH",startDirection:l.NORTH,step:!0,map:[["_","_","_","_","G","_","_","_"],["_","_","H","_","O","_","_","_"],["_","_","T","_","_4","_","_","_"],["_","_","R","_","I","_","_","_"],["_","_","O","_","T","_","_","_"],["_","_","N","_","J","_","_","_"],["_","_",2,"_","R","_","_","_"],["_","_","_","_","F","_","_","_"]]},k_6:{isK1:!0,toolbox:i(),ideal:5,requiredBlocks:[[a.moveEast],[a.moveSouth]],searchWord:"JUMP",startDirection:l.EAST,step:!0,map:[["_","_","_","_","_","_","_","_"],["S","_","_","_","_","_","_","_"],["A","_","_","_","_","_","_","_"],["Y","_",2,"J","U","M","_","_"],["E","_","_","_","_","P","_","_"],["E","_","_","_","_","_","_","_"],["D","_","_","_","_","_","_","_"],["_","_","_","_","_","_","_","_"]]},k_9:{toolbox:i(),ideal:5,requiredBlocks:[[a.moveEast],[a.moveNorth]],searchWord:"CODE",startDirection:l.EAST,step:!0,map:[["_","_","_","_","_","_","M","_"],["_","_","_","_","_","_","A","_"],["_","_","_","_","_","_","R","_"],["_","_","_","D","E","_","K","_"],["_",2,"C","O","_","_","N","_"],["_","_","_","_","_","_","P","_"],["_","_","_","_","_","_","A","_"],["_","_","_","_","_","_","M","_"]]},k_13:{isK1:!0,toolbox:i(),ideal:6,requiredBlocks:[[a.moveEast],[a.moveSouth]],searchWord:"DEBUG",startDirection:l.EAST,step:!0,map:[["_","_","_","_","_","_","_","_"],["_","_","_","_","_","_","_","_"],["_",2,"D","E","_","_","_","_"],["_","_","_","B","_","_","_","_"],["_","_","_","U","G","_","_","_"],["_","_","_","_","_","_","_","_"],["_","_","_","H","E","N","R","Y"],["_","_","_","_","_","_","_","_"]]},k_15:{isK1:!0,toolbox:i(),ideal:6,requiredBlocks:[[a.moveSouth],[a.moveEast]],searchWord:"ABOVE",startDirection:l.SOUTH,step:!0,map:[["_","_","_","_","_","_","_","_"],["_","_","_","_","_","_","_","_"],["_","_",2,"_","_","_","_","_"],["_","_","A","_","_","_","_","_"],["_","_","B","O","_","_","_","_"],["_","_","_","V","E","_","_","_"],["_","_","_","_","_","_","_","_"],["_","_","_","_","_","_","_","_"]]},k_16:{isK1:!0,toolbox:i(),ideal:6,requiredBlocks:[[a.moveEast],[a.moveNorth]],searchWord:"BELOW",startDirection:l.EAST,step:!0,map:[["_","_","_","_","_","_","_","_"],["_","_","_","_","_","_","_","_"],["_","_","_","_","W","_","_","_"],["_","_","_","_","O","_","_","_"],["_","_","_","E","L","_","_","_"],["_","_",2,"B","_","_","_","_"],["_","_","_","_","_","_","_","_"],["_","_","_","_","_","_","_","_"]]},k_20:{isK1:!0,toolbox:i(),ideal:6,requiredBlocks:[[a.moveEast],[a.moveSouth]],searchWord:"STORY",startDirection:l.EAST,step:!0,map:[["_","_","_","_","_","_","_","_"],["_","_","_","_","_","_","_","_"],["_","_",2,"S","T","_","_","_"],["_","_","_","_","O","_","_","_"],["_","_","_","_","R","_","_","_"],["_","_","_","_","Y","_","_","_"],["_","_","_","_","_","_","_","_"],["_","_","_","_","_","_","_","_"]]}}},3148:function(module,exports){module.exports=function anonymous(locals,escape,include,rethrow){function encode_char(e){return _ENCODE_HTML_RULES[e]||e}rethrow=rethrow||function(e,t,n,l){var a=t.split("\n"),o=Math.max(l-3,0),i=Math.min(a.length,l+3),r=a.slice(o,i).map(function(e,t){var n=t+o+1;return(n==l?" >> ":"    ")+n+"| "+e}).join("\n");throw e.path=n,e.message=(n||"ejs")+":"+l+"\n"+r+"\n\n"+e.message,e},escape=escape||function(e){return void 0==e?"":String(e).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g,__line=1,__lines='<xml id="toolbox" style="display: none;">\n  <block type="maze_moveForward"></block>\n  <block type="maze_turn"><title name="DIR">turnLeft</title></block>\n  <block type="maze_turn"><title name="DIR">turnRight</title></block>\n  <% if (page === 1) { -%>\n    <% if (level > 2) { -%>\n      <block type="maze_forever"></block>\n      <% if (level === 5) { -%>\n        <block type="maze_if"><title name="DIR">isPathLeft</title></block>\n      <% } else if (level > 5 && level < 9) { -%>\n        <block type="maze_if"></block>\n      <% } -%>\n      <% if (level > 8) { -%>\n       <block type="maze_ifElse"></block>\n      <% } -%>\n    <% } -%>\n  <% } else if (page === 2) { -%>\n    <% if (level > 4 && level < 9) { -%>\n      <block type="controls_repeat">\n        <title name="TIMES">5</title>\n      </block>\n    <% } -%>\n    <% if (level > 8) { -%>\n      <block type="maze_forever"></block>\n      <% if (level === 13 || level === 15) { -%>\n        <block type="maze_if"><title name="DIR">isPathLeft</title></block>\n      <% } else if (level === 14 || level === 16) { -%>\n        <block type="maze_if"><title name="DIR">isPathRight</title></block>\n      <% } -%>\n      <% if (level > 16) { -%>\n       <block type="maze_ifElse"></block>\n      <% } -%>\n    <% } -%>\n  <% } -%>\n</xml>\n',__filename="src/maze/toolboxes/maze.xml.ejs";try{var __output=[],__append=__output.push.bind(__output);with(locals||{})__append('<xml id="toolbox" style="display: none;">\n  <block type="maze_moveForward"></block>\n  <block type="maze_turn"><title name="DIR">turnLeft</title></block>\n  <block type="maze_turn"><title name="DIR">turnRight</title></block>\n  '),__line=5,1===page?(__append("    "),__line=6,level>2&&(__append('      <block type="maze_forever"></block>\n      '),__line=8,5===level?(__append('        <block type="maze_if"><title name="DIR">isPathLeft</title></block>\n      '),__line=10):level>5&&level<9&&(__append('        <block type="maze_if"></block>\n      '),__line=12),__append("      "),__line=13,level>8&&(__append('       <block type="maze_ifElse"></block>\n      '),__line=15),__append("    "),__line=16),__append("  "),__line=17):2===page&&(__append("    "),__line=18,level>4&&level<9&&(__append('      <block type="controls_repeat">\n        <title name="TIMES">5</title>\n      </block>\n    '),__line=22),__append("    "),__line=23,level>8&&(__append('      <block type="maze_forever"></block>\n      '),__line=25,13===level||15===level?(__append('        <block type="maze_if"><title name="DIR">isPathLeft</title></block>\n      '),__line=27):14!==level&&16!==level||(__append('        <block type="maze_if"><title name="DIR">isPathRight</title></block>\n      '),__line=29),__append("      "),__line=30,level>16&&(__append('       <block type="maze_ifElse"></block>\n      '),__line=32),__append("    "),__line=33),__append("  "),__line=34),__append("</xml>\n"),__line=36;return __output.join("")}catch(e){rethrow(e,'<xml id="toolbox" style="display: none;">\n  <block type="maze_moveForward"></block>\n  <block type="maze_turn"><title name="DIR">turnLeft</title></block>\n  <block type="maze_turn"><title name="DIR">turnRight</title></block>\n  <% if (page === 1) { -%>\n    <% if (level > 2) { -%>\n      <block type="maze_forever"></block>\n      <% if (level === 5) { -%>\n        <block type="maze_if"><title name="DIR">isPathLeft</title></block>\n      <% } else if (level > 5 && level < 9) { -%>\n        <block type="maze_if"></block>\n      <% } -%>\n      <% if (level > 8) { -%>\n       <block type="maze_ifElse"></block>\n      <% } -%>\n    <% } -%>\n  <% } else if (page === 2) { -%>\n    <% if (level > 4 && level < 9) { -%>\n      <block type="controls_repeat">\n        <title name="TIMES">5</title>\n      </block>\n    <% } -%>\n    <% if (level > 8) { -%>\n      <block type="maze_forever"></block>\n      <% if (level === 13 || level === 15) { -%>\n        <block type="maze_if"><title name="DIR">isPathLeft</title></block>\n      <% } else if (level === 14 || level === 16) { -%>\n        <block type="maze_if"><title name="DIR">isPathRight</title></block>\n      <% } -%>\n      <% if (level > 16) { -%>\n       <block type="maze_ifElse"></block>\n      <% } -%>\n    <% } -%>\n  <% } -%>\n</xml>\n',"src/maze/toolboxes/maze.xml.ejs",__line)}}},3149:function(module,exports){module.exports=function anonymous(locals,escape,include,rethrow){function encode_char(e){return _ENCODE_HTML_RULES[e]||e}rethrow=rethrow||function(e,t,n,l){var a=t.split("\n"),o=Math.max(l-3,0),i=Math.min(a.length,l+3),r=a.slice(o,i).map(function(e,t){var n=t+o+1;return(n==l?" >> ":"    ")+n+"| "+e}).join("\n");throw e.path=n,e.message=(n||"ejs")+":"+l+"\n"+r+"\n\n"+e.message,e},escape=escape||function(e){return void 0==e?"":String(e).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g,__line=1,__lines='<% if (page === 2) { -%>\n  <% if (level < 4) { -%>\n    <block type="maze_moveForward" x="70" y="70"></block>\n  <% } else if (level === 8) { -%>\n    <block type="controls_repeat" x="70" y="70" editable="false"\n      deletable="false">\n      <title name="TIMES">3</title>\n    </block>\n  <% } else if (level === 13) { -%>\n    <block type="maze_forever" x="20" y="70" editable="false" deletable="false">\n      <statement name="DO">\n        <block type="maze_moveForward" editable="false" deletable="false">\n          <next>\n            <block type="maze_if" editable="false" deletable="false">\n              <title name="DIR">isPathLeft</title>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 19) { -%>\n    <block type="maze_forever" x="20" y="70" editable="false" deletable="false">\n      <statement name="DO">\n        <block type="maze_ifElse" editable="false" deletable="false">\n          <title name="DIR">isPathForward</title>\n          <statement name="ELSE">\n            <block type="maze_ifElse" editable="false" deletable="false">\n              <title name="DIR">isPathRight</title>\n            </block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n  <% } -%>\n<% } -%>\n',__filename="src/maze/startBlocks.xml.ejs";try{var __output=[],__append=__output.push.bind(__output);with(locals||{})2===page&&(__append("  "),__line=2,level<4?(__append('    <block type="maze_moveForward" x="70" y="70"></block>\n  '),__line=4):8===level?(__append('    <block type="controls_repeat" x="70" y="70" editable="false"\n      deletable="false">\n      <title name="TIMES">3</title>\n    </block>\n  '),__line=9):13===level?(__append('    <block type="maze_forever" x="20" y="70" editable="false" deletable="false">\n      <statement name="DO">\n        <block type="maze_moveForward" editable="false" deletable="false">\n          <next>\n            <block type="maze_if" editable="false" deletable="false">\n              <title name="DIR">isPathLeft</title>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  '),__line=21):19===level&&(__append('    <block type="maze_forever" x="20" y="70" editable="false" deletable="false">\n      <statement name="DO">\n        <block type="maze_ifElse" editable="false" deletable="false">\n          <title name="DIR">isPathForward</title>\n          <statement name="ELSE">\n            <block type="maze_ifElse" editable="false" deletable="false">\n              <title name="DIR">isPathRight</title>\n            </block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n  '),__line=34),__line=35),__line=36;return __output.join("")}catch(e){rethrow(e,'<% if (page === 2) { -%>\n  <% if (level < 4) { -%>\n    <block type="maze_moveForward" x="70" y="70"></block>\n  <% } else if (level === 8) { -%>\n    <block type="controls_repeat" x="70" y="70" editable="false"\n      deletable="false">\n      <title name="TIMES">3</title>\n    </block>\n  <% } else if (level === 13) { -%>\n    <block type="maze_forever" x="20" y="70" editable="false" deletable="false">\n      <statement name="DO">\n        <block type="maze_moveForward" editable="false" deletable="false">\n          <next>\n            <block type="maze_if" editable="false" deletable="false">\n              <title name="DIR">isPathLeft</title>\n            </block>\n          </next>\n        </block>\n      </statement>\n    </block>\n  <% } else if (level === 19) { -%>\n    <block type="maze_forever" x="20" y="70" editable="false" deletable="false">\n      <statement name="DO">\n        <block type="maze_ifElse" editable="false" deletable="false">\n          <title name="DIR">isPathForward</title>\n          <statement name="ELSE">\n            <block type="maze_ifElse" editable="false" deletable="false">\n              <title name="DIR">isPathRight</title>\n            </block>\n          </statement>\n        </block>\n      </statement>\n    </block>\n  <% } -%>\n<% } -%>\n',"src/maze/startBlocks.xml.ejs",__line)}}}},[3116]);