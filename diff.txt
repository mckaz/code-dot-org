diff --git a/Gemfile b/Gemfile
index 86c9a99c306..003bf07758d 100644
--- a/Gemfile
+++ b/Gemfile
@@ -1,6 +1,9 @@
 source 'https://rubygems.org'
 ruby '~> 2.2'
 
+gem 'rdl', path: "~/Documents/works/comp-types/rdl/"
+# git: 'https://github.com/mckaz/code-dot-org-rdl.git'
+
 # Force HTTPS for github-source gems.
 # This is a temporary workaround - remove when bundler version is >=2.0
 # @see https://github.com/bundler/bundler/issues/4978
@@ -10,7 +13,8 @@ git_source(:github) do |repo_name|
 end
 
 # Bundle edge Rails instead: gem 'rails', github: 'rails/rails'
-gem 'rails', '~> 5.0.1'
+#gem 'rails', '~> 5.0.1'
+gem 'rails', '5.0.1'
 gem 'rails-controller-testing'
 
 # Compile Sprockets assets concurrently in `assets:precompile`.
diff --git a/Gemfile.lock b/Gemfile.lock
index c66a9f1e3c1..1a7bd30e059 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -7,11 +7,11 @@ GIT
 
 GIT
   remote: https://github.com/code-dot-org/petit.git
-  revision: 5833ab516d2bab0829693fc9331bebe2a0be8de8
+  revision: d13ef77bc6dc936a55cfbebdeb60a0ac8be07794
   specs:
     petit (0.3.0)
       activesupport
-      aws-sdk (~> 2)
+      aws-sdk (> 2)
       jsonapi-serializers
       rack-parser
       rake
@@ -50,7 +50,7 @@ GIT
 
 GIT
   remote: https://github.com/wjordan/gctools.git
-  revision: a318fede5cb519133a4d6bfa566b800c71c2e42c
+  revision: 729c6bbb32c4bcc2ebfed16543991e4d126f09cc
   ref: ruby-2.5
   specs:
     gctools (0.2.4)
@@ -159,119 +159,125 @@ GIT
       concurrent-ruby (~> 1.0)
       rack (> 1, < 3)
 
+PATH
+  remote: ../../comp-types/rdl
+  specs:
+    rdl (2.1.0)
+      parser (~> 2.3, >= 2.3.1.4)
+
 GEM
   remote: https://rubygems.org/
   specs:
-    Ascii85 (1.0.2)
+    Ascii85 (1.0.3)
     StreetAddress (1.0.6)
-    acme-client (0.3.7)
+    acme-client (0.6.2)
       faraday (~> 0.9, >= 0.9.1)
-      json-jwt (~> 1.2, >= 1.2.3)
-    acmesmith (0.4.1)
+    acmesmith (0.11.0)
       acme-client
       aws-sdk (> 2)
       thor
-    actioncable (5.0.6)
-      actionpack (= 5.0.6)
-      nio4r (>= 1.2, < 3.0)
+    actioncable (5.0.1)
+      actionpack (= 5.0.1)
+      nio4r (~> 1.2)
       websocket-driver (~> 0.6.1)
-    actionmailer (5.0.6)
-      actionpack (= 5.0.6)
-      actionview (= 5.0.6)
-      activejob (= 5.0.6)
+    actionmailer (5.0.1)
+      actionpack (= 5.0.1)
+      actionview (= 5.0.1)
+      activejob (= 5.0.1)
       mail (~> 2.5, >= 2.5.4)
       rails-dom-testing (~> 2.0)
-    actionpack (5.0.6)
-      actionview (= 5.0.6)
-      activesupport (= 5.0.6)
+    actionpack (5.0.1)
+      actionview (= 5.0.1)
+      activesupport (= 5.0.1)
       rack (~> 2.0)
       rack-test (~> 0.6.3)
       rails-dom-testing (~> 2.0)
       rails-html-sanitizer (~> 1.0, >= 1.0.2)
-    actionview (5.0.6)
-      activesupport (= 5.0.6)
+    actionview (5.0.1)
+      activesupport (= 5.0.1)
       builder (~> 3.1)
       erubis (~> 2.7.0)
       rails-dom-testing (~> 2.0)
-      rails-html-sanitizer (~> 1.0, >= 1.0.3)
-    active_record_query_trace (1.5.3)
-    activejob (5.0.6)
-      activesupport (= 5.0.6)
+      rails-html-sanitizer (~> 1.0, >= 1.0.2)
+    active_record_query_trace (1.5.4)
+    activejob (5.0.1)
+      activesupport (= 5.0.1)
       globalid (>= 0.3.6)
-    activemodel (5.0.6)
-      activesupport (= 5.0.6)
-    activerecord (5.0.6)
-      activemodel (= 5.0.6)
-      activesupport (= 5.0.6)
+    activemodel (5.0.1)
+      activesupport (= 5.0.1)
+    activerecord (5.0.1)
+      activemodel (= 5.0.1)
+      activesupport (= 5.0.1)
       arel (~> 7.0)
-    activesupport (5.0.6)
+    activesupport (5.0.1)
       concurrent-ruby (~> 1.0, >= 1.0.2)
       i18n (~> 0.7)
       minitest (~> 5.1)
       tzinfo (~> 1.1)
-    acts_as_list (0.7.6)
+    acts_as_list (0.9.11)
       activerecord (>= 3.0)
     addressable (2.5.2)
       public_suffix (>= 2.0.2, < 4.0)
+    aes_key_wrap (1.0.1)
     afm (0.2.2)
-    annotate (2.7.1)
+    annotate (2.7.2)
       activerecord (>= 3.2, < 6.0)
-      rake (>= 10.4, < 12.0)
+      rake (>= 10.4, < 13.0)
     ansi (1.5.0)
     archive-zip (0.7.0)
       io-like (~> 0.3.0)
     arel (7.1.4)
-    ast (2.3.0)
+    ast (2.4.0)
     attr_required (1.0.1)
-    auto_strip_attributes (2.1.0)
-      activerecord (>= 3.0)
-    aws-sdk (2.10.79)
-      aws-sdk-resources (= 2.10.79)
-    aws-sdk-core (2.10.79)
+    auto_strip_attributes (2.4.0)
+      activerecord (>= 4.0)
+    aws-sdk (2.11.29)
+      aws-sdk-resources (= 2.11.29)
+    aws-sdk-core (2.11.29)
       aws-sigv4 (~> 1.0)
       jmespath (~> 1.0)
-    aws-sdk-resources (2.10.79)
-      aws-sdk-core (= 2.10.79)
+    aws-sdk-resources (2.11.29)
+      aws-sdk-core (= 2.11.29)
     aws-sigv4 (1.0.2)
     bcrypt (3.1.11)
-    better_errors (2.1.1)
+    better_errors (2.4.0)
       coderay (>= 1.0.0)
-      erubis (>= 2.6.6)
+      erubi (>= 1.0.0)
       rack (>= 0.9.0)
-    bindata (2.3.1)
+    bindata (2.4.3)
+    bindex (0.5.0)
     binding_of_caller (0.8.0)
       debug_inspector (>= 0.0.1)
     bootstrap-sass (2.3.2.2)
       sass (~> 3.2)
     builder (3.2.3)
     cancancan (1.15.0)
-    capybara (2.17.0)
+    capybara (2.18.0)
       addressable
       mini_mime (>= 0.1.3)
       nokogiri (>= 1.3.3)
       rack (>= 1.0.0)
       rack-test (>= 0.5.4)
       xpath (>= 2.0, < 4.0)
-    childprocess (0.8.0)
+    childprocess (0.9.0)
       ffi (~> 1.0, >= 1.0.11)
     chromedriver-helper (0.0.9)
       archive-zip (~> 0.7.0)
       nokogiri (~> 1.6)
     chronic (0.10.2)
     chunky_png (1.3.6)
-    climate_control (0.0.3)
-      activesupport (>= 3.0)
-    cocaine (0.5.8)
-      climate_control (>= 0.0.3, < 1.0)
-    codecov (0.1.9)
+    climate_control (0.2.0)
+    cocaine (0.6.0)
+      terrapin (= 0.6.0)
+    codecov (0.1.10)
       json
       simplecov
       url
     codemirror-rails (5.16.0)
       railties (>= 3.0, < 6.0)
-    coderay (1.1.1)
+    coderay (1.1.2)
     colorize (0.8.1)
-    composite_primary_keys (9.0.5)
+    composite_primary_keys (9.0.9)
       activerecord (~> 5.0.0)
     concurrent-ruby (1.0.5)
     connection_pool (2.2.1)
@@ -290,29 +296,30 @@ GEM
       gherkin (~> 4.0)
     cucumber-wire (0.0.1)
     daemons (1.2.6)
-    dalli (2.7.6)
+    dalli (2.7.7)
     dalli-elasticache (0.2.0)
       dalli (>= 1.0.0)
     debug_inspector (0.0.3)
-    declarative (0.0.9)
+    declarative (0.0.10)
     declarative-option (0.1.0)
-    devise (4.4.1)
+    devise (4.4.3)
       bcrypt (~> 3.0)
       orm_adapter (~> 0.1)
-      railties (>= 4.1.0, < 5.2)
+      railties (>= 4.1.0, < 6.0)
       responders
       warden (~> 1.2.3)
-    devise_invitable (1.6.0)
+    devise_invitable (1.6.1)
       actionmailer (>= 3.2.6)
       devise (>= 3.2.0)
-    diff-lcs (1.2.5)
-    docile (1.1.5)
-    domain_name (0.5.20160615)
+    diff-lcs (1.3)
+    docile (1.3.0)
+    domain_name (0.5.20170404)
       unf (>= 0.0.5, < 1.0.0)
+    erubi (1.7.1)
     erubis (2.7.0)
     eventmachine (1.2.5)
     execjs (2.7.0)
-    exifr (1.2.5)
+    exifr (1.3.3)
     eyes_core (3.14.2)
       chunky_png (= 1.3.6)
       faraday
@@ -323,46 +330,46 @@ GEM
       eyes_core (= 3.14.2)
       selenium-webdriver
       watir
-    factory_girl (4.7.0)
+    factory_girl (4.9.0)
       activesupport (>= 3.0.0)
-    factory_girl_rails (4.7.0)
-      factory_girl (~> 4.7.0)
+    factory_girl_rails (4.9.0)
+      factory_girl (~> 4.9.0)
       railties (>= 3.0.0)
-    fake_sqs (0.3.1)
-      builder
-      sinatra
-    fakeredis (0.6.0)
-      redis (~> 3.2)
-    faraday (0.9.2)
+    fake_sqs (0.4.3)
+      builder (~> 3.2)
+      rack (~> 2.0)
+      sinatra (~> 2.0)
+    fakeredis (0.7.0)
+      redis (>= 3.2, < 5.0)
+    faraday (0.12.2)
       multipart-post (>= 1.2, < 3)
     ffi (1.9.23)
-    firebase (0.2.6)
-      httpclient
+    firebase (0.2.8)
+      googleauth
+      httpclient (>= 2.5.3)
       json
     firebase_token_generator (2.0.0)
     font-awesome-rails (4.6.3.1)
       railties (>= 3.2, < 5.1)
     fspath (3.1.0)
-    gemoji (2.1.0)
-    gherkin (4.0.0)
+    gemoji (3.0.0)
+    gherkin (4.1.3)
     globalid (0.4.1)
       activesupport (>= 4.2.0)
-    google-api-client (0.10.3)
-      addressable (~> 2.3)
-      googleauth (~> 0.5)
-      httpclient (~> 2.7)
-      hurley (~> 0.1)
-      memoist (~> 0.11)
-      mime-types (>= 1.6)
+    google-api-client (0.20.0)
+      addressable (~> 2.5, >= 2.5.1)
+      googleauth (>= 0.5, < 0.7.0)
+      httpclient (>= 2.8.1, < 3.0)
+      mime-types (~> 3.0)
       representable (~> 3.0)
       retriable (>= 2.0, < 4.0)
-    google_drive (2.1.2)
-      google-api-client (>= 0.9.0, < 1.0.0)
+    google_drive (2.1.3)
+      google-api-client (>= 0.11.0, < 1.0.0)
       googleauth (>= 0.5.0, < 1.0.0)
       nokogiri (>= 1.5.3, < 2.0.0)
-    googleauth (0.5.1)
-      faraday (~> 0.9)
-      jwt (~> 1.4)
+    googleauth (0.6.2)
+      faraday (~> 0.12)
+      jwt (>= 1.4, < 3.0)
       logging (~> 2.0)
       memoist (~> 0.12)
       multi_json (~> 1.11)
@@ -382,55 +389,62 @@ GEM
       sysexits (~> 1.1)
     hashdiff (0.3.7)
     hashery (2.1.2)
-    hashie (3.4.4)
+    hashie (3.5.7)
     highline (1.6.21)
-    honeybadger (2.6.0)
+    honeybadger (3.3.0)
     html2haml (2.2.0)
       erubis (~> 2.7.0)
       haml (>= 4.0, < 6)
       nokogiri (>= 1.6.0)
       ruby_parser (~> 3.5)
-    http-cookie (1.0.2)
+    http-cookie (1.0.3)
       domain_name (~> 0.5)
-    httparty (0.13.7)
-      json (~> 1.8)
+    httparty (0.16.2)
       multi_xml (>= 0.5.2)
-    httpclient (2.8.2.2)
-    hurley (0.2)
+    httpclient (2.8.3)
     i18n (0.9.5)
       concurrent-ruby (~> 1.0)
     image_size (1.5.0)
-    in_threads (1.4.0)
+    in_threads (1.5.0)
     io-like (0.3.0)
-    jbuilder (2.5.0)
-      activesupport (>= 3.0.0, < 5.1)
-      multi_json (~> 1.2)
-    jmespath (1.3.1)
-    jquery-rails (4.1.1)
+    jbuilder (2.7.0)
+      activesupport (>= 4.2.0)
+      multi_json (>= 1.2)
+    jmespath (1.4.0)
+    jquery-rails (4.3.1)
       rails-dom-testing (>= 1, < 3)
       railties (>= 4.2.0)
       thor (>= 0.14, < 2.0)
     jquery-ui-rails (6.0.1)
       railties (>= 3.2.16)
-    json (1.8.6)
-    json-jwt (1.6.3)
+    json (2.1.0)
+    json-jwt (1.9.2)
       activesupport
+      aes_key_wrap
       bindata
-      multi_json (>= 1.3)
       securecompare
       url_safe_base64
     jsonapi-serializers (1.0.0)
       activesupport
     jumphash (0.1.0)
-    jwt (1.5.4)
-    kaminari (0.17.0)
-      actionpack (>= 3.0.0)
-      activesupport (>= 3.0.0)
-    kgio (2.10.0)
+    jwt (1.5.6)
+    kaminari (1.1.1)
+      activesupport (>= 4.1.0)
+      kaminari-actionview (= 1.1.1)
+      kaminari-activerecord (= 1.1.1)
+      kaminari-core (= 1.1.1)
+    kaminari-actionview (1.1.1)
+      actionview
+      kaminari-core (= 1.1.1)
+    kaminari-activerecord (1.1.1)
+      activerecord
+      kaminari-core (= 1.1.1)
+    kaminari-core (1.1.1)
+    kgio (2.11.2)
     launchy (2.4.3)
       addressable (~> 2.3)
-    le (2.7.2)
-    libv8 (3.16.14.15)
+    le (2.7.6)
+    libv8 (3.16.14.19)
     listen (3.1.5)
       rb-fsevent (~> 0.9, >= 0.9.4)
       rb-inotify (~> 0.9, >= 0.9.7)
@@ -439,66 +453,68 @@ GEM
     logging (2.2.2)
       little-plugger (~> 1.1)
       multi_json (~> 1.10)
-    lograge (0.4.1)
-      actionpack (>= 4, < 5.1)
-      activesupport (>= 4, < 5.1)
-      railties (>= 4, < 5.1)
-    loofah (2.2.0)
+    lograge (0.10.0)
+      actionpack (>= 4)
+      activesupport (>= 4)
+      railties (>= 4)
+      request_store (~> 1.0)
+    loofah (2.2.2)
       crass (~> 1.0.2)
       nokogiri (>= 1.5.9)
     mail (2.7.0)
       mini_mime (>= 0.1.1)
     marked-rails (0.3.2.0)
-    memoist (0.15.0)
+    memoist (0.16.0)
     metaclass (0.0.4)
     method_source (0.9.0)
     mime-types (3.1)
       mime-types-data (~> 3.2015)
     mime-types-data (3.2016.0521)
-    mini_magick (4.5.1)
+    mini_magick (4.8.0)
     mini_mime (1.0.0)
     mini_portile2 (2.3.0)
     minitest (5.11.3)
     minitest-around (0.4.1)
       minitest (~> 5.0)
-    minitest-reporters (1.2.0.beta3)
+    minitest-reporters (1.2.0)
       ansi
       builder
       minitest (>= 5.0)
       ruby-progressbar
-    mocha (1.1.0)
+    mocha (1.4.0)
       metaclass (~> 0.0.1)
-    multi_json (1.12.1)
+    multi_json (1.13.1)
     multi_test (0.1.2)
-    multi_xml (0.5.5)
+    multi_xml (0.6.0)
     multipart-post (2.0.0)
-    mustermann (1.0.1)
+    mustermann (1.0.2)
     mysql2 (0.3.21)
     naturally (2.1.0)
-    net-http-persistent (2.9.4)
+    net-http-persistent (3.0.0)
+      connection_pool (~> 2.2)
     net-scp (1.2.1)
       net-ssh (>= 2.6.5)
-    net-ssh (3.2.0)
+    net-ssh (4.2.0)
     netrc (0.11.0)
     newrelic_rpm (4.8.0.341)
-    nio4r (2.2.0)
+    nio4r (1.2.1)
     nokogiri (1.8.2)
       mini_portile2 (~> 2.3.0)
-    oauth (0.5.1)
-    oauth2 (1.2.0)
-      faraday (>= 0.8, < 0.10)
+    oauth (0.5.4)
+    oauth2 (1.4.0)
+      faraday (>= 0.8, < 0.13)
       jwt (~> 1.0)
       multi_json (~> 1.3)
       multi_xml (~> 0.5)
       rack (>= 1.2, < 3)
-    octokit (4.7.0)
+    octokit (4.8.0)
       sawyer (~> 0.8.0, >= 0.5.3)
     oily_png (1.2.0)
       chunky_png (~> 1.3.1)
-    oj (3.3.10)
-    omniauth (1.3.1)
-      hashie (>= 1.2, < 4)
-      rack (>= 1.0, < 3)
+    oj (3.5.0)
+    omniauth (1.8.1)
+      hashie (>= 3.4.6, < 3.6.0)
+      rack (>= 1.6.2, < 3)
     omniauth-facebook (4.0.0)
       omniauth-oauth2 (~> 1.2)
     omniauth-google-oauth2 (0.3.1)
@@ -506,16 +522,15 @@ GEM
       multi_json (~> 1.3)
       omniauth (>= 1.1.1)
       omniauth-oauth2 (>= 1.3.1)
-    omniauth-oauth2 (1.4.0)
-      oauth2 (~> 1.0)
+    omniauth-oauth2 (1.5.0)
+      oauth2 (~> 1.1)
       omniauth (~> 1.2)
     open_uri_redirections (0.2.1)
-    openid_connect (1.0.3)
+    openid_connect (1.1.5)
       activemodel
       attr_required (>= 1.0.0)
-      json (>= 1.4.3)
       json-jwt (>= 1.5.0)
-      rack-oauth2 (>= 1.3.1)
+      rack-oauth2 (>= 1.6.1)
       swd (>= 1.0.0)
       tzinfo
       validate_email
@@ -524,13 +539,13 @@ GEM
     orm_adapter (0.5.0)
     os (0.9.6)
     parallel (1.12.1)
-    parallel_tests (2.13.0)
+    parallel_tests (2.21.3)
       parallel
-    paranoia (2.3.1)
+    paranoia (2.4.0)
       activerecord (>= 4.0, < 5.2)
-    parser (2.4.0.2)
-      ast (~> 2.3)
-    pdf-reader (1.4.0)
+    parser (2.5.0.5)
+      ast (~> 2.4.0)
+    pdf-reader (2.1.0)
       Ascii85 (~> 1.0.0)
       afm (~> 0.2.1)
       hashery (~> 2.0)
@@ -539,7 +554,7 @@ GEM
     pg (1.0.0)
     phantomjs (1.9.7.1)
     powerpack (0.1.1)
-    progress (3.3.1)
+    progress (3.4.0)
     public_suffix (3.0.2)
     pusher (1.3.1)
       httpclient (~> 2.7)
@@ -547,104 +562,105 @@ GEM
       pusher-signature (~> 0.1.8)
     pusher-signature (0.1.8)
     rack (2.0.4)
-    rack-cache (1.6.1)
+    rack-cache (1.7.1)
       rack (>= 0.4)
-    rack-mini-profiler (0.10.1)
+    rack-mini-profiler (1.0.0)
       rack (>= 1.2.0)
-    rack-oauth2 (1.5.1)
-      activesupport (>= 2.3)
-      attr_required (>= 0.0.5)
-      httpclient (>= 2.4)
-      multi_json (>= 1.3.6)
-      rack (>= 1.1)
+    rack-oauth2 (1.9.1)
+      activesupport
+      attr_required
+      httpclient
+      json-jwt (>= 1.9.0)
+      rack
     rack-parser (0.7.0)
       rack
-    rack-protection (2.0.1.rc1)
+    rack-protection (2.0.1)
       rack
     rack-ssl-enforcer (0.2.9)
     rack-test (0.6.3)
       rack (>= 1.0)
-    rack_csrf (2.5.0)
+    rack_csrf (2.6.0)
       rack (>= 1.1.0)
-    rails (5.0.6)
-      actioncable (= 5.0.6)
-      actionmailer (= 5.0.6)
-      actionpack (= 5.0.6)
-      actionview (= 5.0.6)
-      activejob (= 5.0.6)
-      activemodel (= 5.0.6)
-      activerecord (= 5.0.6)
-      activesupport (= 5.0.6)
-      bundler (>= 1.3.0)
-      railties (= 5.0.6)
+    rails (5.0.1)
+      actioncable (= 5.0.1)
+      actionmailer (= 5.0.1)
+      actionpack (= 5.0.1)
+      actionview (= 5.0.1)
+      activejob (= 5.0.1)
+      activemodel (= 5.0.1)
+      activerecord (= 5.0.1)
+      activesupport (= 5.0.1)
+      bundler (>= 1.3.0, < 2.0)
+      railties (= 5.0.1)
       sprockets-rails (>= 2.0.0)
-    rails-controller-testing (0.1.1)
-      actionpack (~> 5.x)
-      actionview (~> 5.x)
+    rails-controller-testing (1.0.2)
+      actionpack (~> 5.x, >= 5.0.1)
+      actionview (~> 5.x, >= 5.0.1)
       activesupport (~> 5.x)
     rails-dom-testing (2.0.3)
       activesupport (>= 4.2.0)
       nokogiri (>= 1.6)
-    rails-html-sanitizer (1.0.3)
-      loofah (~> 2.0)
-    railties (5.0.6)
-      actionpack (= 5.0.6)
-      activesupport (= 5.0.6)
+    rails-html-sanitizer (1.0.4)
+      loofah (~> 2.2, >= 2.2.2)
+    railties (5.0.1)
+      actionpack (= 5.0.1)
+      activesupport (= 5.0.1)
       method_source
       rake (>= 0.8.7)
       thor (>= 0.18.1, < 2.0)
     rainbow (3.0.0)
     raindrops (0.19.0)
-    rake (11.3.0)
-    rambling-trie (1.0.0)
-    rb-fsevent (0.10.2)
+    rake (12.3.1)
+    rambling-trie (1.0.2)
+    rb-fsevent (0.10.3)
     rb-inotify (0.9.10)
       ffi (>= 0.5.0, < 2)
-    rdoc (4.2.2)
-      json (~> 1.4)
-    recaptcha (4.6.3)
+    rdoc (6.0.3)
+    recaptcha (4.7.0)
       json
     redcarpet (3.3.4)
-    redis (3.3.3)
+    redis (3.3.5)
     ref (2.0.0)
     representable (3.0.4)
       declarative (< 0.1.0)
       declarative-option (< 0.2.0)
       uber (< 0.2.0)
+    request_store (1.4.1)
+      rack (>= 1.4)
     rerun (0.13.0)
       listen (~> 3.0)
     responders (2.4.0)
       actionpack (>= 4.2.0, < 5.3)
       railties (>= 4.2.0, < 5.3)
-    rest-client (2.0.0)
+    rest-client (2.0.2)
       http-cookie (>= 1.0.2, < 2.0)
       mime-types (>= 1.16, < 4.0)
       netrc (~> 0.8)
-    retriable (3.0.2)
-    retryable (2.0.4)
+    retriable (3.1.1)
+    retryable (3.0.0)
     rinku (2.0.4)
     rmagick (2.16.0)
-    rspec (3.5.0)
-      rspec-core (~> 3.5.0)
-      rspec-expectations (~> 3.5.0)
-      rspec-mocks (~> 3.5.0)
-    rspec-core (3.5.1)
-      rspec-support (~> 3.5.0)
-    rspec-expectations (3.5.0)
+    rspec (3.7.0)
+      rspec-core (~> 3.7.0)
+      rspec-expectations (~> 3.7.0)
+      rspec-mocks (~> 3.7.0)
+    rspec-core (3.7.1)
+      rspec-support (~> 3.7.0)
+    rspec-expectations (3.7.0)
       diff-lcs (>= 1.2.0, < 2.0)
-      rspec-support (~> 3.5.0)
-    rspec-mocks (3.5.0)
+      rspec-support (~> 3.7.0)
+    rspec-mocks (3.7.0)
       diff-lcs (>= 1.2.0, < 2.0)
-      rspec-support (~> 3.5.0)
-    rspec-support (3.5.0)
-    rubocop (0.52.1)
+      rspec-support (~> 3.7.0)
+    rspec-support (3.7.1)
+    rubocop (0.54.0)
       parallel (~> 1.10)
-      parser (>= 2.4.0.2, < 3.0)
+      parser (>= 2.5)
       powerpack (~> 0.1)
       rainbow (>= 2.2.2, < 4.0)
       ruby-progressbar (~> 1.7)
       unicode-display_width (~> 1.0, >= 1.0.1)
-    ruby-prof (0.15.9)
+    ruby-prof (0.17.0)
     ruby-progressbar (1.9.0)
     ruby-rc4 (0.1.5)
     ruby_dep (1.3.1)
@@ -652,40 +668,43 @@ GEM
       sexp_processor (~> 4.9)
     rubyzip (1.2.1)
     safe_yaml (1.0.4)
-    sass (3.4.22)
+    sass (3.5.6)
+      sass-listen (~> 4.0.0)
+    sass-listen (4.0.0)
+      rb-fsevent (~> 0.9, >= 0.9.4)
+      rb-inotify (~> 0.9, >= 0.9.7)
     sawyer (0.8.1)
       addressable (>= 2.3.5, < 2.6)
       faraday (~> 0.8, < 1.0)
-    scss_lint (0.49.0)
-      rake (>= 0.9, < 12)
-      sass (~> 3.4.20)
-    sdoc (0.4.1)
-      json (~> 1.7, >= 1.7.7)
-      rdoc (~> 4.0)
+    scss_lint (0.57.0)
+      rake (>= 0.9, < 13)
+      sass (~> 3.5.5)
+    sdoc (1.0.0)
+      rdoc (>= 5.0)
     securecompare (1.0.0)
     selenium-webdriver (3.8.0)
       childprocess (~> 0.5)
       rubyzip (~> 1.0)
-    sequel (4.45.0)
+    sequel (4.49.0)
     sexp_processor (4.10.1)
-    shotgun (0.9.1)
+    shotgun (0.9.2)
       rack (>= 1.0)
-    signet (0.7.3)
+    signet (0.8.1)
       addressable (~> 2.3)
       faraday (~> 0.9)
-      jwt (~> 1.5)
+      jwt (>= 1.5, < 3.0)
       multi_json (~> 1.10)
-    simplecov (0.15.1)
-      docile (~> 1.1.0)
+    simplecov (0.16.1)
+      docile (~> 1.1)
       json (>= 1.8, < 3)
       simplecov-html (~> 0.10.0)
     simplecov-html (0.10.2)
-    sinatra (2.0.1.rc1)
+    sinatra (2.0.1)
       mustermann (~> 1.0)
       rack (~> 2.0)
-      rack-protection (= 2.0.1.rc1)
+      rack-protection (= 2.0.1)
       tilt (~> 2.0)
-    spring (2.0.1)
+    spring (2.0.2)
       activesupport (>= 4.2)
     spring-commands-testunit (1.0.1)
       spring (>= 0.9.1)
@@ -693,19 +712,19 @@ GEM
       actionpack (>= 4.0)
       activesupport (>= 4.0)
       sprockets (>= 3.0.0)
-    sqlite3 (1.3.11)
-    sshkit (1.11.4)
+    sqlite3 (1.3.13)
+    sshkit (1.16.0)
       net-scp (>= 1.1.2)
       net-ssh (>= 2.8.0)
     stringex (2.5.2)
-    swd (1.0.1)
+    swd (1.1.2)
       activesupport (>= 3)
       attr_required (>= 0.0.5)
       httpclient (>= 2.4)
-      i18n
-      json (>= 1.4.3)
     sysexits (1.2.0)
     temple (0.8.0)
+    terrapin (0.6.0)
+      climate_control (>= 0.0.3, < 1.0)
     therubyracer (0.12.3)
       libv8 (~> 3.16.14.15)
       ref
@@ -716,20 +735,20 @@ GEM
     thor (0.20.0)
     thread_safe (0.3.6)
     tilt (2.0.8)
-    timecop (0.8.1)
-    ttfunk (1.4.0)
-    twilio-ruby (4.11.1)
-      builder (>= 2.1.2)
-      jwt (~> 1.0)
-      multi_json (>= 1.3.0)
+    timecop (0.9.1)
+    ttfunk (1.5.1)
+    twilio-ruby (5.7.2)
+      faraday (~> 0.9)
+      jwt (>= 1.5, <= 2.5)
+      nokogiri (>= 1.6, < 2.0)
     tzinfo (1.2.5)
       thread_safe (~> 0.1)
     uber (0.1.0)
-    uglifier (3.0.0)
+    uglifier (4.1.8)
       execjs (>= 0.3.0, < 3)
     unf (0.1.4)
       unf_ext
-    unf_ext (0.0.7.2)
+    unf_ext (0.0.7.5)
     unicode-display_width (1.3.0)
     unicode_utils (1.4.0)
     unicorn (5.1.0)
@@ -737,7 +756,7 @@ GEM
       raindrops (~> 0.7)
     url (0.3.2)
     url_safe_base64 (0.2.2)
-    user_agent_parser (2.3.0)
+    user_agent_parser (2.4.1)
     validate_email (0.1.6)
       activemodel (>= 3.0)
       mail (>= 2.2.5)
@@ -746,20 +765,19 @@ GEM
       addressable
     validates_email_format_of (1.6.3)
       i18n
-    vcr (3.0.3)
+    vcr (4.0.0)
     warden (1.2.7)
       rack (>= 1.0)
     watir (6.10.3)
       selenium-webdriver (~> 3.4, >= 3.4.1)
-    web-console (3.3.1)
+    web-console (3.5.1)
       actionview (>= 5.0)
       activemodel (>= 5.0)
-      debug_inspector
+      bindex (>= 0.4.0)
       railties (>= 5.0)
-    webfinger (1.0.2)
+    webfinger (1.1.0)
       activesupport
       httpclient (>= 2.4)
-      multi_json
     webmock (3.3.0)
       addressable (>= 2.3.6)
       crack (>= 0.3.2)
@@ -767,10 +785,10 @@ GEM
     websocket-driver (0.6.5)
       websocket-extensions (>= 0.1.0)
     websocket-extensions (0.1.3)
-    xpath (2.1.0)
-      nokogiri (~> 1.3)
+    xpath (3.0.0)
+      nokogiri (~> 1.8)
     xxhash (0.4.0)
-    youtube-dl.rb (0.3.1.2016.08.19)
+    youtube-dl.rb (0.3.1.2016.09.11.1)
       cocaine (>= 0.5.4)
 
 PLATFORMS
@@ -871,9 +889,10 @@ DEPENDENCIES
   rack-mini-profiler
   rack-ssl-enforcer
   rack_csrf
-  rails (~> 5.0.1)
+  rails (= 5.0.1)
   rails-controller-testing
   rambling-trie
+  rdl!
   recaptcha
   redcarpet (~> 3.3.4)
   redis (~> 3.3.3)
diff --git a/dashboard/app/models/activity.rb b/dashboard/app/models/activity.rb
index a38d2c8327b..954e1ad40bd 100644
--- a/dashboard/app/models/activity.rb
+++ b/dashboard/app/models/activity.rb
@@ -2,22 +2,20 @@
 #
 # Table name: activities
 #
-#  id              :integer          not null, primary key
-#  user_id         :integer
-#  level_id        :integer
-#  action          :string(255)
-#  url             :string(255)
-#  created_at      :datetime
-#  updated_at      :datetime
-#  attempt         :integer
-#  time            :integer
-#  test_result     :integer
-#  level_source_id :integer
-#  lines           :integer          default(0), not null
+#  id          :integer          not null, primary key
+#  user_id     :integer
+#  level_id    :integer
+#  action      :string(255)
+#  data        :string(20000)
+#  url         :string(255)
+#  created_at  :datetime
+#  updated_at  :datetime
+#  attempt     :integer
+#  time        :integer
+#  test_result :integer
 #
 # Indexes
 #
-#  index_activities_on_level_source_id       (level_source_id)
 #  index_activities_on_user_id_and_level_id  (user_id,level_id)
 #
 
diff --git a/dashboard/app/models/callout.rb b/dashboard/app/models/callout.rb
index 73197c0f6d9..281cedbdcd3 100644
--- a/dashboard/app/models/callout.rb
+++ b/dashboard/app/models/callout.rb
@@ -2,15 +2,11 @@
 #
 # Table name: callouts
 #
-#  id               :integer          not null, primary key
-#  element_id       :string(1024)     not null
-#  localization_key :string(1024)     not null
-#  created_at       :datetime
-#  updated_at       :datetime
-#  script_level_id  :integer
-#  qtip_config      :text(65535)
-#  on               :string(255)
-#  callout_text     :string(255)
+#  id         :integer          not null, primary key
+#  element_id :string(1024)     not null
+#  text       :string(1024)     not null
+#  created_at :datetime
+#  updated_at :datetime
 #
 
 class Callout < ActiveRecord::Base
diff --git a/dashboard/app/models/channel_token.rb b/dashboard/app/models/channel_token.rb
index af24b0cfc31..87630c81125 100644
--- a/dashboard/app/models/channel_token.rb
+++ b/dashboard/app/models/channel_token.rb
@@ -3,17 +3,19 @@
 # Table name: channel_tokens
 #
 #  id             :integer          not null, primary key
-#  storage_app_id :integer          not null
+#  channel        :string(255)      not null
+#  storage_app_id :integer
+#  user_id        :integer          not null
 #  level_id       :integer          not null
 #  created_at     :datetime
 #  updated_at     :datetime
-#  storage_id     :integer          not null
+#  storage_id     :integer
 #
 # Indexes
 #
-#  index_channel_tokens_on_storage_app_id           (storage_app_id)
-#  index_channel_tokens_on_storage_id               (storage_id)
-#  index_channel_tokens_on_storage_id_and_level_id  (storage_id,level_id) UNIQUE
+#  index_channel_tokens_on_storage_app_id        (storage_app_id)
+#  index_channel_tokens_on_storage_id            (storage_id)
+#  index_channel_tokens_on_user_id_and_level_id  (user_id,level_id) UNIQUE
 #
 
 class ChannelToken < ActiveRecord::Base
diff --git a/dashboard/app/models/concept.rb b/dashboard/app/models/concept.rb
index 5acfdda506a..c29ad0f807f 100644
--- a/dashboard/app/models/concept.rb
+++ b/dashboard/app/models/concept.rb
@@ -2,15 +2,12 @@
 #
 # Table name: concepts
 #
-#  id         :integer          not null, primary key
-#  name       :string(255)
-#  created_at :datetime
-#  updated_at :datetime
-#  video_id   :integer
-#
-# Indexes
-#
-#  index_concepts_on_video_id  (video_id)
+#  id          :integer          not null, primary key
+#  name        :string(255)
+#  description :string(1024)
+#  created_at  :datetime
+#  updated_at  :datetime
+#  video_id    :integer
 #
 
 # A Concept contains a set of Levels
diff --git a/dashboard/app/models/course_script.rb b/dashboard/app/models/course_script.rb
index 762c59089da..a6b9f3e89db 100644
--- a/dashboard/app/models/course_script.rb
+++ b/dashboard/app/models/course_script.rb
@@ -2,18 +2,16 @@
 #
 # Table name: course_scripts
 #
-#  id                :integer          not null, primary key
-#  course_id         :integer          not null
-#  script_id         :integer          not null
-#  position          :integer          not null
-#  experiment_name   :string(255)
-#  default_script_id :integer
+#  id              :integer          not null, primary key
+#  course_id       :integer          not null
+#  script_id       :integer          not null
+#  position        :integer          not null
+#  experiment_name :string(255)
 #
 # Indexes
 #
-#  index_course_scripts_on_course_id          (course_id)
-#  index_course_scripts_on_default_script_id  (default_script_id)
-#  index_course_scripts_on_script_id          (script_id)
+#  index_course_scripts_on_course_id  (course_id)
+#  index_course_scripts_on_script_id  (script_id)
 #
 
 class CourseScript < ApplicationRecord
diff --git a/dashboard/app/models/featured_project.rb b/dashboard/app/models/featured_project.rb
index 827a9b7860f..16a21ca7907 100644
--- a/dashboard/app/models/featured_project.rb
+++ b/dashboard/app/models/featured_project.rb
@@ -2,14 +2,14 @@
 #
 # Table name: featured_projects
 #
-#  id             :integer          not null, primary key
-#  storage_app_id :integer
-#  featured_at    :datetime
-#  unfeatured_at  :datetime
+#  id                   :integer          not null, primary key
+#  storage_app_id       :integer
+#  who_featured_user_id :integer
+#  created_at           :datetime
 #
 # Indexes
 #
-#  index_featured_projects_on_storage_app_id  (storage_app_id) UNIQUE
+#  index_featured_projects_on_storage_app_id  (storage_app_id)
 #
 
 class FeaturedProject < ApplicationRecord
diff --git a/dashboard/app/models/follower.rb b/dashboard/app/models/follower.rb
index 4f9f27d3e31..67fb4645d67 100644
--- a/dashboard/app/models/follower.rb
+++ b/dashboard/app/models/follower.rb
@@ -3,6 +3,7 @@
 # Table name: followers
 #
 #  id              :integer          not null, primary key
+#  user_id         :integer          not null
 #  student_user_id :integer          not null
 #  created_at      :datetime
 #  updated_at      :datetime
@@ -11,8 +12,8 @@
 #
 # Indexes
 #
-#  index_followers_on_section_id_and_student_user_id  (section_id,student_user_id)
-#  index_followers_on_student_user_id                 (student_user_id)
+#  index_followers_on_student_user_id              (student_user_id)
+#  index_followers_on_user_id_and_student_user_id  (user_id,student_user_id) UNIQUE
 #
 
 # Join table defining student-teacher relationships for Users
diff --git a/dashboard/app/models/game.rb b/dashboard/app/models/game.rb
index 30053109630..1bcfbfdfcac 100644
--- a/dashboard/app/models/game.rb
+++ b/dashboard/app/models/game.rb
@@ -6,13 +6,10 @@
 #  name           :string(255)
 #  created_at     :datetime
 #  updated_at     :datetime
+#  base_url       :string(255)
 #  app            :string(255)
 #  intro_video_id :integer
 #
-# Indexes
-#
-#  index_games_on_intro_video_id  (intro_video_id)
-#
 
 # An ordered set of levels associated with a single app, e.g. Farmer2
 # also associates an intro video
diff --git a/dashboard/app/models/levels/applab.rb b/dashboard/app/models/levels/applab.rb
index 6656cc9b4e7..73141ae2c56 100644
--- a/dashboard/app/models/levels/applab.rb
+++ b/dashboard/app/models/levels/applab.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 require 'cdo/shared_constants'
diff --git a/dashboard/app/models/levels/artist.rb b/dashboard/app/models/levels/artist.rb
index 7a1138b27c6..c894465225b 100644
--- a/dashboard/app/models/levels/artist.rb
+++ b/dashboard/app/models/levels/artist.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Artist < Blockly
diff --git a/dashboard/app/models/levels/blockly.rb b/dashboard/app/models/levels/blockly.rb
index 4db8dea8445..a5fd1528dbe 100644
--- a/dashboard/app/models/levels/blockly.rb
+++ b/dashboard/app/models/levels/blockly.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 require 'nokogiri'
diff --git a/dashboard/app/models/levels/bounce.rb b/dashboard/app/models/levels/bounce.rb
index 54cce77dd4f..3ac808c1c1f 100644
--- a/dashboard/app/models/levels/bounce.rb
+++ b/dashboard/app/models/levels/bounce.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Bounce < Grid
diff --git a/dashboard/app/models/levels/calc.rb b/dashboard/app/models/levels/calc.rb
index ad10d4f124c..7e71f8cd3dc 100644
--- a/dashboard/app/models/levels/calc.rb
+++ b/dashboard/app/models/levels/calc.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Calc < Blockly
diff --git a/dashboard/app/models/levels/contract_match.rb b/dashboard/app/models/levels/contract_match.rb
index e4e21086fde..c8ced2944f9 100644
--- a/dashboard/app/models/levels/contract_match.rb
+++ b/dashboard/app/models/levels/contract_match.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 # Contract Match type.
diff --git a/dashboard/app/models/levels/craft.rb b/dashboard/app/models/levels/craft.rb
index 7e7695ea061..0dfda49fe6f 100644
--- a/dashboard/app/models/levels/craft.rb
+++ b/dashboard/app/models/levels/craft.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 require "csv"
diff --git a/dashboard/app/models/levels/curriculum_reference.rb b/dashboard/app/models/levels/curriculum_reference.rb
index 38546c49bf5..5827027fd37 100644
--- a/dashboard/app/models/levels/curriculum_reference.rb
+++ b/dashboard/app/models/levels/curriculum_reference.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class CurriculumReference < Level
diff --git a/dashboard/app/models/levels/dsl_defined.rb b/dashboard/app/models/levels/dsl_defined.rb
index 5dfd2372f5b..b73a61c938a 100644
--- a/dashboard/app/models/levels/dsl_defined.rb
+++ b/dashboard/app/models/levels/dsl_defined.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 # Levels defined using a text-based ruby DSL syntax.
diff --git a/dashboard/app/models/levels/eval.rb b/dashboard/app/models/levels/eval.rb
index 81ba2ce88de..f3cde518c6a 100644
--- a/dashboard/app/models/levels/eval.rb
+++ b/dashboard/app/models/levels/eval.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Eval < Blockly
diff --git a/dashboard/app/models/levels/evaluation_multi.rb b/dashboard/app/models/levels/evaluation_multi.rb
index 3caf9ef3a08..6e98dae7f68 100644
--- a/dashboard/app/models/levels/evaluation_multi.rb
+++ b/dashboard/app/models/levels/evaluation_multi.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class EvaluationMulti < Multi
diff --git a/dashboard/app/models/levels/external.rb b/dashboard/app/models/levels/external.rb
index a2fb9f4768c..1db7c6af4cd 100644
--- a/dashboard/app/models/levels/external.rb
+++ b/dashboard/app/models/levels/external.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class External < DSLDefined
diff --git a/dashboard/app/models/levels/external_link.rb b/dashboard/app/models/levels/external_link.rb
index f18a4a5776c..6aea4896bc7 100644
--- a/dashboard/app/models/levels/external_link.rb
+++ b/dashboard/app/models/levels/external_link.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class ExternalLink < Level
diff --git a/dashboard/app/models/levels/flappy.rb b/dashboard/app/models/levels/flappy.rb
index 97472592e19..1ca9c34e761 100644
--- a/dashboard/app/models/levels/flappy.rb
+++ b/dashboard/app/models/levels/flappy.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Flappy < Blockly
diff --git a/dashboard/app/models/levels/free_response.rb b/dashboard/app/models/levels/free_response.rb
index 50c446339cd..257be2495c2 100644
--- a/dashboard/app/models/levels/free_response.rb
+++ b/dashboard/app/models/levels/free_response.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class FreeResponse < Level
diff --git a/dashboard/app/models/levels/frequency_analysis.rb b/dashboard/app/models/levels/frequency_analysis.rb
index 2fd867a7bef..2048a4a5d9c 100644
--- a/dashboard/app/models/levels/frequency_analysis.rb
+++ b/dashboard/app/models/levels/frequency_analysis.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class FrequencyAnalysis < Widget
diff --git a/dashboard/app/models/levels/gamelab.rb b/dashboard/app/models/levels/gamelab.rb
index 197f053f88a..0e664fd5af3 100644
--- a/dashboard/app/models/levels/gamelab.rb
+++ b/dashboard/app/models/levels/gamelab.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 require 'cdo/shared_constants'
diff --git a/dashboard/app/models/levels/gamelab_jr.rb b/dashboard/app/models/levels/gamelab_jr.rb
index 172ef5a0b0e..1ed3880a700 100644
--- a/dashboard/app/models/levels/gamelab_jr.rb
+++ b/dashboard/app/models/levels/gamelab_jr.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class GamelabJr < Gamelab
diff --git a/dashboard/app/models/levels/go_beyond.rb b/dashboard/app/models/levels/go_beyond.rb
index 067802ee4f0..02ae446a347 100644
--- a/dashboard/app/models/levels/go_beyond.rb
+++ b/dashboard/app/models/levels/go_beyond.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class GoBeyond < Level
diff --git a/dashboard/app/models/levels/grid.rb b/dashboard/app/models/levels/grid.rb
index dfb2ac20935..f57884e2585 100644
--- a/dashboard/app/models/levels/grid.rb
+++ b/dashboard/app/models/levels/grid.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 require "csv"
diff --git a/dashboard/app/models/levels/karel.rb b/dashboard/app/models/levels/karel.rb
index 22c167d6430..5359cbdc88f 100644
--- a/dashboard/app/models/levels/karel.rb
+++ b/dashboard/app/models/levels/karel.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Karel < Maze
diff --git a/dashboard/app/models/levels/level.rb b/dashboard/app/models/levels/level.rb
index c5939271e83..604196a025b 100644
--- a/dashboard/app/models/levels/level.rb
+++ b/dashboard/app/models/levels/level.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Level < ActiveRecord::Base
diff --git a/dashboard/app/models/levels/level_group.rb b/dashboard/app/models/levels/level_group.rb
index 53d9475a237..885e44d465c 100644
--- a/dashboard/app/models/levels/level_group.rb
+++ b/dashboard/app/models/levels/level_group.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class LevelGroup < DSLDefined
diff --git a/dashboard/app/models/levels/map.rb b/dashboard/app/models/levels/map.rb
index 9fd8e0a3f54..0af0b2a0ff9 100644
--- a/dashboard/app/models/levels/map.rb
+++ b/dashboard/app/models/levels/map.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Map < CurriculumReference
diff --git a/dashboard/app/models/levels/match.rb b/dashboard/app/models/levels/match.rb
index 82dbe0dcbe2..241f677ea05 100644
--- a/dashboard/app/models/levels/match.rb
+++ b/dashboard/app/models/levels/match.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 require "csv"
diff --git a/dashboard/app/models/levels/maze.rb b/dashboard/app/models/levels/maze.rb
index 98c77a8a04d..f3a06cc3d4d 100644
--- a/dashboard/app/models/levels/maze.rb
+++ b/dashboard/app/models/levels/maze.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Maze < Grid
diff --git a/dashboard/app/models/levels/multi.rb b/dashboard/app/models/levels/multi.rb
index 3d5c37d6b07..a8cdae4970c 100644
--- a/dashboard/app/models/levels/multi.rb
+++ b/dashboard/app/models/levels/multi.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 require "csv"
diff --git a/dashboard/app/models/levels/net_sim.rb b/dashboard/app/models/levels/net_sim.rb
index f8536c670f2..d20b76d1a70 100644
--- a/dashboard/app/models/levels/net_sim.rb
+++ b/dashboard/app/models/levels/net_sim.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class NetSim < Blockly
diff --git a/dashboard/app/models/levels/odometer.rb b/dashboard/app/models/levels/odometer.rb
index 4dbfda1b611..074669c88ce 100644
--- a/dashboard/app/models/levels/odometer.rb
+++ b/dashboard/app/models/levels/odometer.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Odometer < Widget
diff --git a/dashboard/app/models/levels/pixelation.rb b/dashboard/app/models/levels/pixelation.rb
index 27a6fa1edeb..b6b9c8158c9 100644
--- a/dashboard/app/models/levels/pixelation.rb
+++ b/dashboard/app/models/levels/pixelation.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Pixelation < Widget
diff --git a/dashboard/app/models/levels/public_key_cryptography.rb b/dashboard/app/models/levels/public_key_cryptography.rb
index 7d98ae3d43a..4459d02781b 100644
--- a/dashboard/app/models/levels/public_key_cryptography.rb
+++ b/dashboard/app/models/levels/public_key_cryptography.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 # Level type for standalone widget teaching public key cryptography
diff --git a/dashboard/app/models/levels/scratch.rb b/dashboard/app/models/levels/scratch.rb
index b5fba92d799..3d2656ca6a8 100644
--- a/dashboard/app/models/levels/scratch.rb
+++ b/dashboard/app/models/levels/scratch.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Scratch < Level
diff --git a/dashboard/app/models/levels/script_completion.rb b/dashboard/app/models/levels/script_completion.rb
index 08f84143e53..22155b14932 100644
--- a/dashboard/app/models/levels/script_completion.rb
+++ b/dashboard/app/models/levels/script_completion.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class ScriptCompletion < Level
diff --git a/dashboard/app/models/levels/standalone_video.rb b/dashboard/app/models/levels/standalone_video.rb
index 783df975097..fbc6536d0c2 100644
--- a/dashboard/app/models/levels/standalone_video.rb
+++ b/dashboard/app/models/levels/standalone_video.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class StandaloneVideo < Level
diff --git a/dashboard/app/models/levels/star_wars_grid.rb b/dashboard/app/models/levels/star_wars_grid.rb
index fb5d8f9303c..4f0f507bf43 100644
--- a/dashboard/app/models/levels/star_wars_grid.rb
+++ b/dashboard/app/models/levels/star_wars_grid.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class StarWarsGrid < Studio
diff --git a/dashboard/app/models/levels/studio.rb b/dashboard/app/models/levels/studio.rb
index fcfd6773c39..e91eab88450 100644
--- a/dashboard/app/models/levels/studio.rb
+++ b/dashboard/app/models/levels/studio.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Studio < Grid
diff --git a/dashboard/app/models/levels/studio_ec.rb b/dashboard/app/models/levels/studio_ec.rb
index 51093929d32..49757501d6b 100644
--- a/dashboard/app/models/levels/studio_ec.rb
+++ b/dashboard/app/models/levels/studio_ec.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class StudioEC < Studio
diff --git a/dashboard/app/models/levels/text_compression.rb b/dashboard/app/models/levels/text_compression.rb
index a1ec5d523df..16843abe3e7 100644
--- a/dashboard/app/models/levels/text_compression.rb
+++ b/dashboard/app/models/levels/text_compression.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class TextCompression < Widget
diff --git a/dashboard/app/models/levels/text_match.rb b/dashboard/app/models/levels/text_match.rb
index 0be0a87fdf6..92a75c8d4d9 100644
--- a/dashboard/app/models/levels/text_match.rb
+++ b/dashboard/app/models/levels/text_match.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 # Text Match type.
diff --git a/dashboard/app/models/levels/unplugged.rb b/dashboard/app/models/levels/unplugged.rb
index 53354feb787..f2e5ad72494 100644
--- a/dashboard/app/models/levels/unplugged.rb
+++ b/dashboard/app/models/levels/unplugged.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Unplugged < Level
diff --git a/dashboard/app/models/levels/vigenere.rb b/dashboard/app/models/levels/vigenere.rb
index ea64b4f766d..0855f9ae1ae 100644
--- a/dashboard/app/models/levels/vigenere.rb
+++ b/dashboard/app/models/levels/vigenere.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Vigenere < Widget
diff --git a/dashboard/app/models/levels/weblab.rb b/dashboard/app/models/levels/weblab.rb
index a8adf33d802..68d99493132 100644
--- a/dashboard/app/models/levels/weblab.rb
+++ b/dashboard/app/models/levels/weblab.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Weblab < Level
diff --git a/dashboard/app/models/levels/widget.rb b/dashboard/app/models/levels/widget.rb
index 64aa7efd470..dbfcecd48e0 100644
--- a/dashboard/app/models/levels/widget.rb
+++ b/dashboard/app/models/levels/widget.rb
@@ -2,25 +2,15 @@
 #
 # Table name: levels
 #
-#  id                    :integer          not null, primary key
-#  game_id               :integer
-#  name                  :string(255)      not null
-#  created_at            :datetime
-#  updated_at            :datetime
-#  level_num             :string(255)
-#  ideal_level_source_id :integer
-#  user_id               :integer
-#  properties            :text(65535)
-#  type                  :string(255)
-#  md5                   :string(255)
-#  published             :boolean          default(FALSE), not null
-#  notes                 :text(65535)
-#  audit_log             :text(65535)
-#
-# Indexes
-#
-#  index_levels_on_game_id  (game_id)
-#  index_levels_on_name     (name)
+#  id           :integer          not null, primary key
+#  game_id      :integer
+#  name         :string(255)
+#  level_url    :string(255)
+#  created_at   :datetime
+#  updated_at   :datetime
+#  level_num    :string(255)
+#  instructions :string(255)
+#  skin         :string(255)
 #
 
 class Widget < Level
diff --git a/dashboard/app/models/script.rb b/dashboard/app/models/script.rb
index 69c2409ee14..7859f42285c 100644
--- a/dashboard/app/models/script.rb
+++ b/dashboard/app/models/script.rb
@@ -3,19 +3,12 @@
 # Table name: scripts
 #
 #  id              :integer          not null, primary key
-#  name            :string(255)      not null
+#  name            :string(255)
 #  created_at      :datetime
 #  updated_at      :datetime
 #  wrapup_video_id :integer
+#  trophies        :boolean          default(FALSE), not null
 #  hidden          :boolean          default(FALSE), not null
-#  user_id         :integer
-#  login_required  :boolean          default(FALSE), not null
-#  properties      :text(65535)
-#
-# Indexes
-#
-#  index_scripts_on_name             (name) UNIQUE
-#  index_scripts_on_wrapup_video_id  (wrapup_video_id)
 #
 
 require 'cdo/script_constants'
diff --git a/dashboard/app/models/script_level.rb b/dashboard/app/models/script_level.rb
index 5eff38315be..b88f5a9ec84 100644
--- a/dashboard/app/models/script_level.rb
+++ b/dashboard/app/models/script_level.rb
@@ -2,22 +2,13 @@
 #
 # Table name: script_levels
 #
-#  id          :integer          not null, primary key
-#  script_id   :integer          not null
-#  chapter     :integer
-#  created_at  :datetime
-#  updated_at  :datetime
-#  stage_id    :integer
-#  position    :integer
-#  assessment  :boolean
-#  properties  :text(65535)
-#  named_level :boolean
-#  bonus       :boolean
-#
-# Indexes
-#
-#  index_script_levels_on_script_id  (script_id)
-#  index_script_levels_on_stage_id   (stage_id)
+#  id           :integer          not null, primary key
+#  level_id     :integer          not null
+#  script_id    :integer          not null
+#  chapter      :integer
+#  created_at   :datetime
+#  updated_at   :datetime
+#  game_chapter :integer
 #
 
 require 'cdo/shared_constants'
diff --git a/dashboard/app/models/sections/clever_section.rb b/dashboard/app/models/sections/clever_section.rb
index f379e23cbbd..6b2115d4fd7 100644
--- a/dashboard/app/models/sections/clever_section.rb
+++ b/dashboard/app/models/sections/clever_section.rb
@@ -2,29 +2,27 @@
 #
 # Table name: sections
 #
-#  id                :integer          not null, primary key
-#  user_id           :integer          not null
-#  name              :string(255)
-#  created_at        :datetime
-#  updated_at        :datetime
-#  code              :string(255)
-#  script_id         :integer
-#  course_id         :integer
-#  grade             :string(255)
-#  login_type        :string(255)      default("email"), not null
-#  deleted_at        :datetime
-#  stage_extras      :boolean          default(FALSE), not null
-#  section_type      :string(255)
-#  first_activity_at :datetime
-#  pairing_allowed   :boolean          default(TRUE), not null
-#  sharing_disabled  :boolean          default(FALSE), not null
-#  hidden            :boolean          default(FALSE), not null
+#  id               :integer          not null, primary key
+#  user_id          :integer          not null
+#  name             :string(255)
+#  created_at       :datetime
+#  updated_at       :datetime
+#  code             :string(255)
+#  deleted_at       :datetime
+#  login_type       :string(255)
+#  script_id        :integer
+#  login_method     :integer          default(0)
+#  grade            :string(255)
+#  admin_code       :string(255)
+#  stage_extras     :boolean          default(FALSE), not null
+#  pairing_allowed  :boolean          default(TRUE), not null
+#  hidden           :boolean          default(FALSE), not null
+#  course_id        :integer
+#  sharing_disabled :boolean          default(FALSE), not null
 #
 # Indexes
 #
-#  fk_rails_20b1e5de46        (course_id)
-#  index_sections_on_code     (code) UNIQUE
-#  index_sections_on_user_id  (user_id)
+#  index_sections_on_user_id_and_name  (user_id,name) UNIQUE
 #
 
 class CleverSection < OmniAuthSection
diff --git a/dashboard/app/models/sections/email_section.rb b/dashboard/app/models/sections/email_section.rb
index 461e271c07a..eb6871f6362 100644
--- a/dashboard/app/models/sections/email_section.rb
+++ b/dashboard/app/models/sections/email_section.rb
@@ -2,29 +2,27 @@
 #
 # Table name: sections
 #
-#  id                :integer          not null, primary key
-#  user_id           :integer          not null
-#  name              :string(255)
-#  created_at        :datetime
-#  updated_at        :datetime
-#  code              :string(255)
-#  script_id         :integer
-#  course_id         :integer
-#  grade             :string(255)
-#  login_type        :string(255)      default("email"), not null
-#  deleted_at        :datetime
-#  stage_extras      :boolean          default(FALSE), not null
-#  section_type      :string(255)
-#  first_activity_at :datetime
-#  pairing_allowed   :boolean          default(TRUE), not null
-#  sharing_disabled  :boolean          default(FALSE), not null
-#  hidden            :boolean          default(FALSE), not null
+#  id               :integer          not null, primary key
+#  user_id          :integer          not null
+#  name             :string(255)
+#  created_at       :datetime
+#  updated_at       :datetime
+#  code             :string(255)
+#  deleted_at       :datetime
+#  login_type       :string(255)
+#  script_id        :integer
+#  login_method     :integer          default(0)
+#  grade            :string(255)
+#  admin_code       :string(255)
+#  stage_extras     :boolean          default(FALSE), not null
+#  pairing_allowed  :boolean          default(TRUE), not null
+#  hidden           :boolean          default(FALSE), not null
+#  course_id        :integer
+#  sharing_disabled :boolean          default(FALSE), not null
 #
 # Indexes
 #
-#  fk_rails_20b1e5de46        (course_id)
-#  index_sections_on_code     (code) UNIQUE
-#  index_sections_on_user_id  (user_id)
+#  index_sections_on_user_id_and_name  (user_id,name) UNIQUE
 #
 
 class EmailSection < Section
diff --git a/dashboard/app/models/sections/google_classroom_section.rb b/dashboard/app/models/sections/google_classroom_section.rb
index 8ec17465d1d..bc2aa9a48ab 100644
--- a/dashboard/app/models/sections/google_classroom_section.rb
+++ b/dashboard/app/models/sections/google_classroom_section.rb
@@ -2,29 +2,27 @@
 #
 # Table name: sections
 #
-#  id                :integer          not null, primary key
-#  user_id           :integer          not null
-#  name              :string(255)
-#  created_at        :datetime
-#  updated_at        :datetime
-#  code              :string(255)
-#  script_id         :integer
-#  course_id         :integer
-#  grade             :string(255)
-#  login_type        :string(255)      default("email"), not null
-#  deleted_at        :datetime
-#  stage_extras      :boolean          default(FALSE), not null
-#  section_type      :string(255)
-#  first_activity_at :datetime
-#  pairing_allowed   :boolean          default(TRUE), not null
-#  sharing_disabled  :boolean          default(FALSE), not null
-#  hidden            :boolean          default(FALSE), not null
+#  id               :integer          not null, primary key
+#  user_id          :integer          not null
+#  name             :string(255)
+#  created_at       :datetime
+#  updated_at       :datetime
+#  code             :string(255)
+#  deleted_at       :datetime
+#  login_type       :string(255)
+#  script_id        :integer
+#  login_method     :integer          default(0)
+#  grade            :string(255)
+#  admin_code       :string(255)
+#  stage_extras     :boolean          default(FALSE), not null
+#  pairing_allowed  :boolean          default(TRUE), not null
+#  hidden           :boolean          default(FALSE), not null
+#  course_id        :integer
+#  sharing_disabled :boolean          default(FALSE), not null
 #
 # Indexes
 #
-#  fk_rails_20b1e5de46        (course_id)
-#  index_sections_on_code     (code) UNIQUE
-#  index_sections_on_user_id  (user_id)
+#  index_sections_on_user_id_and_name  (user_id,name) UNIQUE
 #
 
 class GoogleClassroomSection < OmniAuthSection
diff --git a/dashboard/app/models/sections/omni_auth_section.rb b/dashboard/app/models/sections/omni_auth_section.rb
index 7c74136197f..73aef508a64 100644
--- a/dashboard/app/models/sections/omni_auth_section.rb
+++ b/dashboard/app/models/sections/omni_auth_section.rb
@@ -2,29 +2,27 @@
 #
 # Table name: sections
 #
-#  id                :integer          not null, primary key
-#  user_id           :integer          not null
-#  name              :string(255)
-#  created_at        :datetime
-#  updated_at        :datetime
-#  code              :string(255)
-#  script_id         :integer
-#  course_id         :integer
-#  grade             :string(255)
-#  login_type        :string(255)      default("email"), not null
-#  deleted_at        :datetime
-#  stage_extras      :boolean          default(FALSE), not null
-#  section_type      :string(255)
-#  first_activity_at :datetime
-#  pairing_allowed   :boolean          default(TRUE), not null
-#  sharing_disabled  :boolean          default(FALSE), not null
-#  hidden            :boolean          default(FALSE), not null
+#  id               :integer          not null, primary key
+#  user_id          :integer          not null
+#  name             :string(255)
+#  created_at       :datetime
+#  updated_at       :datetime
+#  code             :string(255)
+#  deleted_at       :datetime
+#  login_type       :string(255)
+#  script_id        :integer
+#  login_method     :integer          default(0)
+#  grade            :string(255)
+#  admin_code       :string(255)
+#  stage_extras     :boolean          default(FALSE), not null
+#  pairing_allowed  :boolean          default(TRUE), not null
+#  hidden           :boolean          default(FALSE), not null
+#  course_id        :integer
+#  sharing_disabled :boolean          default(FALSE), not null
 #
 # Indexes
 #
-#  fk_rails_20b1e5de46        (course_id)
-#  index_sections_on_code     (code) UNIQUE
-#  index_sections_on_user_id  (user_id)
+#  index_sections_on_user_id_and_name  (user_id,name) UNIQUE
 #
 
 class OmniAuthSection < Section
diff --git a/dashboard/app/models/sections/picture_section.rb b/dashboard/app/models/sections/picture_section.rb
index 99bb57e4bc9..b785a466441 100644
--- a/dashboard/app/models/sections/picture_section.rb
+++ b/dashboard/app/models/sections/picture_section.rb
@@ -2,29 +2,27 @@
 #
 # Table name: sections
 #
-#  id                :integer          not null, primary key
-#  user_id           :integer          not null
-#  name              :string(255)
-#  created_at        :datetime
-#  updated_at        :datetime
-#  code              :string(255)
-#  script_id         :integer
-#  course_id         :integer
-#  grade             :string(255)
-#  login_type        :string(255)      default("email"), not null
-#  deleted_at        :datetime
-#  stage_extras      :boolean          default(FALSE), not null
-#  section_type      :string(255)
-#  first_activity_at :datetime
-#  pairing_allowed   :boolean          default(TRUE), not null
-#  sharing_disabled  :boolean          default(FALSE), not null
-#  hidden            :boolean          default(FALSE), not null
+#  id               :integer          not null, primary key
+#  user_id          :integer          not null
+#  name             :string(255)
+#  created_at       :datetime
+#  updated_at       :datetime
+#  code             :string(255)
+#  deleted_at       :datetime
+#  login_type       :string(255)
+#  script_id        :integer
+#  login_method     :integer          default(0)
+#  grade            :string(255)
+#  admin_code       :string(255)
+#  stage_extras     :boolean          default(FALSE), not null
+#  pairing_allowed  :boolean          default(TRUE), not null
+#  hidden           :boolean          default(FALSE), not null
+#  course_id        :integer
+#  sharing_disabled :boolean          default(FALSE), not null
 #
 # Indexes
 #
-#  fk_rails_20b1e5de46        (course_id)
-#  index_sections_on_code     (code) UNIQUE
-#  index_sections_on_user_id  (user_id)
+#  index_sections_on_user_id_and_name  (user_id,name) UNIQUE
 #
 
 class PictureSection < Section
diff --git a/dashboard/app/models/sections/section.rb b/dashboard/app/models/sections/section.rb
index 50ce9a23404..ebc130e3e14 100644
--- a/dashboard/app/models/sections/section.rb
+++ b/dashboard/app/models/sections/section.rb
@@ -2,29 +2,27 @@
 #
 # Table name: sections
 #
-#  id                :integer          not null, primary key
-#  user_id           :integer          not null
-#  name              :string(255)
-#  created_at        :datetime
-#  updated_at        :datetime
-#  code              :string(255)
-#  script_id         :integer
-#  course_id         :integer
-#  grade             :string(255)
-#  login_type        :string(255)      default("email"), not null
-#  deleted_at        :datetime
-#  stage_extras      :boolean          default(FALSE), not null
-#  section_type      :string(255)
-#  first_activity_at :datetime
-#  pairing_allowed   :boolean          default(TRUE), not null
-#  sharing_disabled  :boolean          default(FALSE), not null
-#  hidden            :boolean          default(FALSE), not null
+#  id               :integer          not null, primary key
+#  user_id          :integer          not null
+#  name             :string(255)
+#  created_at       :datetime
+#  updated_at       :datetime
+#  code             :string(255)
+#  deleted_at       :datetime
+#  login_type       :string(255)
+#  script_id        :integer
+#  login_method     :integer          default(0)
+#  grade            :string(255)
+#  admin_code       :string(255)
+#  stage_extras     :boolean          default(FALSE), not null
+#  pairing_allowed  :boolean          default(TRUE), not null
+#  hidden           :boolean          default(FALSE), not null
+#  course_id        :integer
+#  sharing_disabled :boolean          default(FALSE), not null
 #
 # Indexes
 #
-#  fk_rails_20b1e5de46        (course_id)
-#  index_sections_on_code     (code) UNIQUE
-#  index_sections_on_user_id  (user_id)
+#  index_sections_on_user_id_and_name  (user_id,name) UNIQUE
 #
 
 require 'full-name-splitter'
diff --git a/dashboard/app/models/sections/word_section.rb b/dashboard/app/models/sections/word_section.rb
index e18c6188490..c4f2dc053d3 100644
--- a/dashboard/app/models/sections/word_section.rb
+++ b/dashboard/app/models/sections/word_section.rb
@@ -2,29 +2,27 @@
 #
 # Table name: sections
 #
-#  id                :integer          not null, primary key
-#  user_id           :integer          not null
-#  name              :string(255)
-#  created_at        :datetime
-#  updated_at        :datetime
-#  code              :string(255)
-#  script_id         :integer
-#  course_id         :integer
-#  grade             :string(255)
-#  login_type        :string(255)      default("email"), not null
-#  deleted_at        :datetime
-#  stage_extras      :boolean          default(FALSE), not null
-#  section_type      :string(255)
-#  first_activity_at :datetime
-#  pairing_allowed   :boolean          default(TRUE), not null
-#  sharing_disabled  :boolean          default(FALSE), not null
-#  hidden            :boolean          default(FALSE), not null
+#  id               :integer          not null, primary key
+#  user_id          :integer          not null
+#  name             :string(255)
+#  created_at       :datetime
+#  updated_at       :datetime
+#  code             :string(255)
+#  deleted_at       :datetime
+#  login_type       :string(255)
+#  script_id        :integer
+#  login_method     :integer          default(0)
+#  grade            :string(255)
+#  admin_code       :string(255)
+#  stage_extras     :boolean          default(FALSE), not null
+#  pairing_allowed  :boolean          default(TRUE), not null
+#  hidden           :boolean          default(FALSE), not null
+#  course_id        :integer
+#  sharing_disabled :boolean          default(FALSE), not null
 #
 # Indexes
 #
-#  fk_rails_20b1e5de46        (course_id)
-#  index_sections_on_code     (code) UNIQUE
-#  index_sections_on_user_id  (user_id)
+#  index_sections_on_user_id_and_name  (user_id,name) UNIQUE
 #
 
 class WordSection < Section
diff --git a/dashboard/app/models/user.rb b/dashboard/app/models/user.rb
index 28fb482254d..d95297dff01 100644
--- a/dashboard/app/models/user.rb
+++ b/dashboard/app/models/user.rb
@@ -2,70 +2,53 @@
 #
 # Table name: users
 #
-#  id                       :integer          not null, primary key
-#  studio_person_id         :integer
-#  email                    :string(255)      default(""), not null
-#  parent_email             :string(255)
-#  encrypted_password       :string(255)      default("")
-#  reset_password_token     :string(255)
-#  reset_password_sent_at   :datetime
-#  remember_created_at      :datetime
-#  sign_in_count            :integer          default(0)
-#  current_sign_in_at       :datetime
-#  last_sign_in_at          :datetime
-#  current_sign_in_ip       :string(255)
-#  last_sign_in_ip          :string(255)
-#  created_at               :datetime
-#  updated_at               :datetime
-#  username                 :string(255)
-#  provider                 :string(255)
-#  uid                      :string(255)
-#  admin                    :boolean
-#  gender                   :string(1)
-#  name                     :string(255)
-#  locale                   :string(10)       default("en-US"), not null
-#  birthday                 :date
-#  user_type                :string(16)
-#  school                   :string(255)
-#  full_address             :string(1024)
-#  school_info_id           :integer
-#  total_lines              :integer          default(0), not null
-#  secret_picture_id        :integer
-#  active                   :boolean          default(TRUE), not null
-#  hashed_email             :string(255)
-#  deleted_at               :datetime
-#  purged_at                :datetime
-#  secret_words             :string(255)
-#  properties               :text(65535)
-#  invitation_token         :string(255)
-#  invitation_created_at    :datetime
-#  invitation_sent_at       :datetime
-#  invitation_accepted_at   :datetime
-#  invitation_limit         :integer
-#  invited_by_id            :integer
-#  invited_by_type          :string(255)
-#  invitations_count        :integer          default(0)
-#  terms_of_service_version :integer
-#  urm                      :boolean
-#  races                    :string(255)
+#  id                     :integer          not null, primary key
+#  email                  :string(255)      default(""), not null
+#  encrypted_password     :string(255)      default(""), not null
+#  reset_password_token   :string(255)
+#  reset_password_sent_at :datetime
+#  remember_created_at    :datetime
+#  sign_in_count          :integer          default(0)
+#  current_sign_in_at     :datetime
+#  last_sign_in_at        :datetime
+#  current_sign_in_ip     :string(255)
+#  last_sign_in_ip        :string(255)
+#  created_at             :datetime
+#  updated_at             :datetime
+#  username               :string(255)
+#  provider               :string(255)
+#  uid                    :string(255)
+#  admin                  :boolean
+#  gender                 :string(1)
+#  name                   :string(255)
+#  language               :string(2)
+#  birthday               :date
+#  parent_email           :string(255)
+#  deleted_at             :datetime
+#  hashed_email           :string(255)
+#  properties             :text(65535)
+#  user_type              :string(16)       default("student")
+#  school                 :string(255)
+#  full_address           :string(1024)
+#  address                :string(255)
+#  city                   :string(255)
+#  state                  :string(255)
+#  zip                    :string(255)
+#  lat                    :float(24)
+#  lon                    :float(24)
+#  total_lines            :integer          default(0), not null
+#  secret_words           :string(255)
+#  secret_picture_id      :integer
+#  secret_word_1_id       :integer
+#  secret_word_2_id       :integer
 #
 # Indexes
 #
-#  index_users_on_birthday                             (birthday)
-#  index_users_on_current_sign_in_at                   (current_sign_in_at)
-#  index_users_on_deleted_at                           (deleted_at)
-#  index_users_on_email_and_deleted_at                 (email,deleted_at)
-#  index_users_on_hashed_email_and_deleted_at          (hashed_email,deleted_at)
-#  index_users_on_invitation_token                     (invitation_token) UNIQUE
-#  index_users_on_invitations_count                    (invitations_count)
-#  index_users_on_invited_by_id                        (invited_by_id)
-#  index_users_on_parent_email                         (parent_email)
-#  index_users_on_provider_and_uid_and_deleted_at      (provider,uid,deleted_at) UNIQUE
-#  index_users_on_purged_at                            (purged_at)
-#  index_users_on_reset_password_token_and_deleted_at  (reset_password_token,deleted_at) UNIQUE
-#  index_users_on_school_info_id                       (school_info_id)
-#  index_users_on_studio_person_id                     (studio_person_id)
-#  index_users_on_username_and_deleted_at              (username,deleted_at) UNIQUE
+#  index_users_on_deleted_at            (deleted_at)
+#  index_users_on_email                 (email)
+#  index_users_on_hashed_email          (hashed_email)
+#  index_users_on_reset_password_token  (reset_password_token) UNIQUE
+#  index_users_on_username              (username) UNIQUE
 #
 
 require 'digest/md5'
diff --git a/dashboard/app/models/user_level.rb b/dashboard/app/models/user_level.rb
index 6e0e157fda1..14f105256b8 100644
--- a/dashboard/app/models/user_level.rb
+++ b/dashboard/app/models/user_level.rb
@@ -2,22 +2,17 @@
 #
 # Table name: user_levels
 #
-#  id               :integer          not null, primary key
-#  user_id          :integer          not null
-#  level_id         :integer          not null
-#  attempts         :integer          default(0), not null
-#  created_at       :datetime
-#  updated_at       :datetime
-#  best_result      :integer
-#  script_id        :integer
-#  level_source_id  :integer
-#  submitted        :boolean
-#  readonly_answers :boolean
-#  unlocked_at      :datetime
+#  id          :integer          not null, primary key
+#  user_id     :integer          not null
+#  level_id    :integer          not null
+#  attempts    :integer          default(0), not null
+#  created_at  :datetime
+#  updated_at  :datetime
+#  best_result :integer
 #
 # Indexes
 #
-#  index_user_levels_on_user_id_and_level_id_and_script_id  (user_id,level_id,script_id) UNIQUE
+#  index_user_levels_on_user_id_and_level_id  (user_id,level_id) UNIQUE
 #
 
 require 'cdo/activity_constants'
diff --git a/dashboard/app/models/user_script.rb b/dashboard/app/models/user_script.rb
index 2885ea3579f..061a43de7d2 100644
--- a/dashboard/app/models/user_script.rb
+++ b/dashboard/app/models/user_script.rb
@@ -14,7 +14,6 @@
 #
 # Indexes
 #
-#  index_user_scripts_on_script_id              (script_id)
 #  index_user_scripts_on_user_id_and_script_id  (user_id,script_id) UNIQUE
 #
 
diff --git a/dashboard/app/models/video.rb b/dashboard/app/models/video.rb
index 00af90bfd4e..806ca4d0bcc 100644
--- a/dashboard/app/models/video.rb
+++ b/dashboard/app/models/video.rb
@@ -3,11 +3,11 @@
 # Table name: videos
 #
 #  id           :integer          not null, primary key
+#  name         :string(255)
 #  key          :string(255)
 #  youtube_code :string(255)
 #  created_at   :datetime
 #  updated_at   :datetime
-#  download     :string(255)
 #
 
 # Links to a YouTube video
diff --git a/dashboard/app/serializers/user_serializer.rb b/dashboard/app/serializers/user_serializer.rb
index 2c000a1c057..ccf12a37034 100644
--- a/dashboard/app/serializers/user_serializer.rb
+++ b/dashboard/app/serializers/user_serializer.rb
@@ -2,70 +2,53 @@
 #
 # Table name: users
 #
-#  id                       :integer          not null, primary key
-#  studio_person_id         :integer
-#  email                    :string(255)      default(""), not null
-#  parent_email             :string(255)
-#  encrypted_password       :string(255)      default("")
-#  reset_password_token     :string(255)
-#  reset_password_sent_at   :datetime
-#  remember_created_at      :datetime
-#  sign_in_count            :integer          default(0)
-#  current_sign_in_at       :datetime
-#  last_sign_in_at          :datetime
-#  current_sign_in_ip       :string(255)
-#  last_sign_in_ip          :string(255)
-#  created_at               :datetime
-#  updated_at               :datetime
-#  username                 :string(255)
-#  provider                 :string(255)
-#  uid                      :string(255)
-#  admin                    :boolean
-#  gender                   :string(1)
-#  name                     :string(255)
-#  locale                   :string(10)       default("en-US"), not null
-#  birthday                 :date
-#  user_type                :string(16)
-#  school                   :string(255)
-#  full_address             :string(1024)
-#  school_info_id           :integer
-#  total_lines              :integer          default(0), not null
-#  secret_picture_id        :integer
-#  active                   :boolean          default(TRUE), not null
-#  hashed_email             :string(255)
-#  deleted_at               :datetime
-#  purged_at                :datetime
-#  secret_words             :string(255)
-#  properties               :text(65535)
-#  invitation_token         :string(255)
-#  invitation_created_at    :datetime
-#  invitation_sent_at       :datetime
-#  invitation_accepted_at   :datetime
-#  invitation_limit         :integer
-#  invited_by_id            :integer
-#  invited_by_type          :string(255)
-#  invitations_count        :integer          default(0)
-#  terms_of_service_version :integer
-#  urm                      :boolean
-#  races                    :string(255)
+#  id                     :integer          not null, primary key
+#  email                  :string(255)      default(""), not null
+#  encrypted_password     :string(255)      default(""), not null
+#  reset_password_token   :string(255)
+#  reset_password_sent_at :datetime
+#  remember_created_at    :datetime
+#  sign_in_count          :integer          default(0)
+#  current_sign_in_at     :datetime
+#  last_sign_in_at        :datetime
+#  current_sign_in_ip     :string(255)
+#  last_sign_in_ip        :string(255)
+#  created_at             :datetime
+#  updated_at             :datetime
+#  username               :string(255)
+#  provider               :string(255)
+#  uid                    :string(255)
+#  admin                  :boolean
+#  gender                 :string(1)
+#  name                   :string(255)
+#  language               :string(2)
+#  birthday               :date
+#  parent_email           :string(255)
+#  deleted_at             :datetime
+#  hashed_email           :string(255)
+#  properties             :text(65535)
+#  user_type              :string(16)       default("student")
+#  school                 :string(255)
+#  full_address           :string(1024)
+#  address                :string(255)
+#  city                   :string(255)
+#  state                  :string(255)
+#  zip                    :string(255)
+#  lat                    :float(24)
+#  lon                    :float(24)
+#  total_lines            :integer          default(0), not null
+#  secret_words           :string(255)
+#  secret_picture_id      :integer
+#  secret_word_1_id       :integer
+#  secret_word_2_id       :integer
 #
 # Indexes
 #
-#  index_users_on_birthday                             (birthday)
-#  index_users_on_current_sign_in_at                   (current_sign_in_at)
-#  index_users_on_deleted_at                           (deleted_at)
-#  index_users_on_email_and_deleted_at                 (email,deleted_at)
-#  index_users_on_hashed_email_and_deleted_at          (hashed_email,deleted_at)
-#  index_users_on_invitation_token                     (invitation_token) UNIQUE
-#  index_users_on_invitations_count                    (invitations_count)
-#  index_users_on_invited_by_id                        (invited_by_id)
-#  index_users_on_parent_email                         (parent_email)
-#  index_users_on_provider_and_uid_and_deleted_at      (provider,uid,deleted_at) UNIQUE
-#  index_users_on_purged_at                            (purged_at)
-#  index_users_on_reset_password_token_and_deleted_at  (reset_password_token,deleted_at) UNIQUE
-#  index_users_on_school_info_id                       (school_info_id)
-#  index_users_on_studio_person_id                     (studio_person_id)
-#  index_users_on_username_and_deleted_at              (username,deleted_at) UNIQUE
+#  index_users_on_deleted_at            (deleted_at)
+#  index_users_on_email                 (email)
+#  index_users_on_hashed_email          (hashed_email)
+#  index_users_on_reset_password_token  (reset_password_token) UNIQUE
+#  index_users_on_username              (username) UNIQUE
 #
 
 class UserSerializer < ActiveModel::Serializer
diff --git a/dashboard/db/schema.rb b/dashboard/db/schema.rb
index 9173015c852..475462b968d 100644
--- a/dashboard/db/schema.rb
+++ b/dashboard/db/schema.rb
@@ -10,306 +10,64 @@
 #
 # It's strongly recommended that you check this file into your version control system.
 
-ActiveRecord::Schema.define(version: 20180320213236) do
+ActiveRecord::Schema.define(version: 20171206192422) do
 
   create_table "activities", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
     t.integer  "user_id"
     t.integer  "level_id"
     t.string   "action"
+    t.string   "data",        limit: 20000
     t.string   "url"
     t.datetime "created_at"
     t.datetime "updated_at"
     t.integer  "attempt"
     t.integer  "time"
     t.integer  "test_result"
-    t.integer  "level_source_id"
-    t.integer  "lines",           default: 0, null: false
-    t.index ["level_source_id"], name: "index_activities_on_level_source_id", using: :btree
     t.index ["user_id", "level_id"], name: "index_activities_on_user_id_and_level_id", using: :btree
   end
 
-  create_table "ap_cs_offerings", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "school_code", limit: 6, null: false
-    t.string   "course",      limit: 3, null: false
-    t.integer  "school_year", limit: 2, null: false
-    t.datetime "created_at",            null: false
-    t.datetime "updated_at",            null: false
-    t.index ["school_code", "school_year", "course"], name: "index_ap_cs_offerings_on_school_code_and_school_year_and_course", unique: true, using: :btree
-  end
-
-  create_table "ap_school_codes", id: false, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "school_code", limit: 6,  null: false
-    t.string   "school_id",   limit: 12, null: false
-    t.datetime "created_at",             null: false
-    t.datetime "updated_at",             null: false
-    t.index ["school_code"], name: "index_ap_school_codes_on_school_code", unique: true, using: :btree
-    t.index ["school_id"], name: "index_ap_school_codes_on_school_id", unique: true, using: :btree
-  end
-
-  create_table "authored_hint_view_requests", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id",               null: false
-    t.integer  "script_id"
-    t.integer  "level_id"
-    t.string   "hint_id"
-    t.string   "hint_class"
-    t.string   "hint_type"
-    t.integer  "prev_time"
-    t.integer  "prev_attempt"
-    t.integer  "prev_test_result"
-    t.integer  "prev_level_source_id"
-    t.integer  "next_time"
-    t.integer  "next_attempt"
-    t.integer  "next_test_result"
-    t.integer  "next_level_source_id"
-    t.integer  "final_time"
-    t.integer  "final_attempt"
-    t.integer  "final_test_result"
-    t.integer  "final_level_source_id"
-    t.datetime "created_at",            null: false
-    t.datetime "updated_at",            null: false
-    t.index ["level_id"], name: "fk_rails_8f51960e09", using: :btree
-    t.index ["script_id", "level_id"], name: "index_authored_hint_view_requests_on_script_id_and_level_id", using: :btree
-    t.index ["user_id", "script_id", "level_id", "hint_id"], name: "index_authored_hint_view_requests_on_all_related_ids", using: :btree
-  end
-
   create_table "callouts", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "element_id",       limit: 1024,  null: false
-    t.string   "localization_key", limit: 1024,  null: false
+    t.string   "element_id", limit: 1024, null: false
+    t.string   "text",       limit: 1024, null: false
     t.datetime "created_at"
     t.datetime "updated_at"
-    t.integer  "script_level_id"
-    t.text     "qtip_config",      limit: 65535
-    t.string   "on"
-    t.string   "callout_text"
-  end
-
-  create_table "census_inaccuracy_investigations", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id",                            null: false
-    t.text     "notes",                limit: 65535, null: false
-    t.integer  "census_submission_id",               null: false
-    t.integer  "census_override_id"
-    t.datetime "created_at",                         null: false
-    t.datetime "updated_at",                         null: false
-    t.index ["census_override_id"], name: "fk_rails_465d31c61e", using: :btree
-    t.index ["census_submission_id"], name: "fk_rails_18600827a9", using: :btree
-    t.index ["user_id"], name: "fk_rails_9c9f685588", using: :btree
-  end
-
-  create_table "census_overrides", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "school_id",   limit: 12, null: false
-    t.integer  "school_year", limit: 2,  null: false
-    t.string   "teaches_cs",  limit: 2,  null: false
-    t.datetime "created_at",             null: false
-    t.datetime "updated_at",             null: false
-    t.index ["school_id"], name: "fk_rails_06131f8f87", using: :btree
-  end
-
-  create_table "census_submission_form_maps", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "census_submission_id", null: false
-    t.integer  "form_id",              null: false
-    t.datetime "created_at",           null: false
-    t.datetime "updated_at",           null: false
-    t.index ["census_submission_id"], name: "index_census_submission_form_maps_on_census_submission_id", using: :btree
-    t.index ["form_id"], name: "index_census_submission_form_maps_on_form_id", using: :btree
-  end
-
-  create_table "census_submissions", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "type",                                       null: false
-    t.string   "submitter_email_address"
-    t.string   "submitter_name"
-    t.string   "submitter_role"
-    t.integer  "school_year",                                null: false
-    t.string   "how_many_do_hoc"
-    t.string   "how_many_after_school"
-    t.string   "how_many_10_hours"
-    t.string   "how_many_20_hours"
-    t.boolean  "other_classes_under_20_hours"
-    t.boolean  "topic_blocks"
-    t.boolean  "topic_text"
-    t.boolean  "topic_robots"
-    t.boolean  "topic_internet"
-    t.boolean  "topic_security"
-    t.boolean  "topic_data"
-    t.boolean  "topic_web_design"
-    t.boolean  "topic_game_design"
-    t.boolean  "topic_other"
-    t.string   "topic_other_description"
-    t.boolean  "topic_do_not_know"
-    t.string   "class_frequency"
-    t.text     "tell_us_more",                 limit: 65535
-    t.boolean  "pledged"
-    t.datetime "created_at",                                 null: false
-    t.datetime "updated_at",                                 null: false
-    t.boolean  "share_with_regional_partners"
-    t.boolean  "topic_ethical_social",                                    comment: "Survey option for school courses including ethical and social issues"
-    t.boolean  "inaccuracy_reported"
-    t.text     "inaccuracy_comment",           limit: 65535
-    t.index ["school_year", "id"], name: "index_census_submissions_on_school_year_and_id", using: :btree
-  end
-
-  create_table "census_submissions_school_infos", id: false, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "census_submission_id", null: false
-    t.integer  "school_info_id",       null: false
-    t.datetime "created_at",           null: false
-    t.datetime "updated_at",           null: false
-    t.index ["census_submission_id", "school_info_id"], name: "census_submission_school_info_id", unique: true, using: :btree
-    t.index ["school_info_id", "census_submission_id"], name: "school_info_id_census_submission", unique: true, using: :btree
-  end
-
-  create_table "census_summaries", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "school_id",   limit: 12,    null: false
-    t.integer  "school_year", limit: 2,     null: false
-    t.string   "teaches_cs",  limit: 2
-    t.text     "audit_data",  limit: 65535, null: false
-    t.datetime "created_at",                null: false
-    t.datetime "updated_at",                null: false
-    t.index ["school_id", "school_year"], name: "index_census_summaries_on_school_id_and_school_year", unique: true, using: :btree
   end
 
   create_table "channel_tokens", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "storage_app_id", null: false
+    t.string   "channel",        null: false
+    t.integer  "storage_app_id"
+    t.integer  "user_id",        null: false
     t.integer  "level_id",       null: false
     t.datetime "created_at"
     t.datetime "updated_at"
-    t.integer  "storage_id",     null: false
+    t.integer  "storage_id"
     t.index ["storage_app_id"], name: "index_channel_tokens_on_storage_app_id", using: :btree
-    t.index ["storage_id", "level_id"], name: "index_channel_tokens_on_storage_id_and_level_id", unique: true, using: :btree
     t.index ["storage_id"], name: "index_channel_tokens_on_storage_id", using: :btree
-  end
-
-  create_table "circuit_playground_discount_applications", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id",                                             null: false
-    t.integer  "unit_6_intention"
-    t.boolean  "full_discount"
-    t.boolean  "admin_set_status",                    default: false, null: false
-    t.string   "signature"
-    t.datetime "signed_at"
-    t.integer  "circuit_playground_discount_code_id"
-    t.datetime "created_at",                                          null: false
-    t.datetime "updated_at",                                          null: false
-    t.string   "school_id"
-    t.index ["circuit_playground_discount_code_id"], name: "index_circuit_playground_applications_on_code_id", using: :btree
-    t.index ["school_id"], name: "index_circuit_playground_discount_applications_on_school_id", using: :btree
-    t.index ["user_id"], name: "index_circuit_playground_discount_applications_on_user_id", unique: true, using: :btree
-  end
-
-  create_table "circuit_playground_discount_codes", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "code",          null: false
-    t.boolean  "full_discount", null: false
-    t.datetime "expiration",    null: false
-    t.datetime "claimed_at"
-    t.datetime "voided_at"
-    t.datetime "created_at",    null: false
-    t.datetime "updated_at",    null: false
-  end
-
-  create_table "cohorts", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.datetime "created_at"
-    t.datetime "updated_at"
-    t.string   "name"
-    t.string   "program_type"
-    t.datetime "cutoff_date"
-    t.integer  "script_id"
-    t.index ["name"], name: "index_cohorts_on_name", using: :btree
-    t.index ["program_type"], name: "index_cohorts_on_program_type", using: :btree
-  end
-
-  create_table "cohorts_deleted_users", id: false, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "user_id",   null: false
-    t.integer "cohort_id", null: false
-    t.index ["cohort_id", "user_id"], name: "index_cohorts_deleted_users_on_cohort_id_and_user_id", using: :btree
-    t.index ["user_id", "cohort_id"], name: "index_cohorts_deleted_users_on_user_id_and_cohort_id", using: :btree
-  end
-
-  create_table "cohorts_districts", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "cohort_id",    null: false
-    t.integer "district_id",  null: false
-    t.integer "max_teachers"
-    t.index ["cohort_id", "district_id"], name: "index_cohorts_districts_on_cohort_id_and_district_id", using: :btree
-    t.index ["district_id", "cohort_id"], name: "index_cohorts_districts_on_district_id_and_cohort_id", using: :btree
-  end
-
-  create_table "cohorts_users", id: false, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "user_id",   null: false
-    t.integer "cohort_id", null: false
-    t.index ["cohort_id", "user_id"], name: "index_cohorts_users_on_cohort_id_and_user_id", using: :btree
-    t.index ["user_id", "cohort_id"], name: "index_cohorts_users_on_user_id_and_cohort_id", using: :btree
+    t.index ["user_id", "level_id"], name: "index_channel_tokens_on_user_id_and_level_id", unique: true, using: :btree
   end
 
   create_table "concepts", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
     t.string   "name"
+    t.string   "description", limit: 1024
     t.datetime "created_at"
     t.datetime "updated_at"
     t.integer  "video_id"
-    t.index ["video_id"], name: "index_concepts_on_video_id", using: :btree
   end
 
   create_table "concepts_levels", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
     t.integer "concept_id"
     t.integer "level_id"
-    t.index ["concept_id"], name: "index_concepts_levels_on_concept_id", using: :btree
-    t.index ["level_id"], name: "index_concepts_levels_on_level_id", using: :btree
-  end
-
-  create_table "contained_level_answers", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.datetime "created_at",                  null: false
-    t.datetime "updated_at",                  null: false
-    t.integer  "level_id",                    null: false
-    t.integer  "answer_number",               null: false
-    t.text     "answer_text",   limit: 65535
-    t.boolean  "correct"
-    t.index ["level_id"], name: "index_contained_level_answers_on_level_id", using: :btree
-  end
-
-  create_table "contained_levels", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.datetime "created_at",                             null: false
-    t.datetime "updated_at",                             null: false
-    t.integer  "level_group_level_id",                   null: false
-    t.integer  "contained_level_id",                     null: false
-    t.string   "contained_level_type",                   null: false
-    t.integer  "contained_level_page",                   null: false
-    t.integer  "contained_level_position",               null: false
-    t.text     "contained_level_text",     limit: 65535
-    t.index ["contained_level_id"], name: "index_contained_levels_on_contained_level_id", using: :btree
-    t.index ["level_group_level_id"], name: "index_contained_levels_on_level_group_level_id", using: :btree
   end
 
   create_table "course_scripts", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "course_id",         null: false
-    t.integer "script_id",         null: false
-    t.integer "position",          null: false
-    t.string  "experiment_name",                comment: "If present, the SingleTeacherExperiment with this name must be enabled in order for a teacher or their students to see this script."
-    t.integer "default_script_id",              comment: "If present, indicates the default script which this script will replace when the corresponding experiment is enabled. Should be null for default scripts (those that show up without experiments)."
+    t.integer "course_id",       null: false
+    t.integer "script_id",       null: false
+    t.integer "position",        null: false
+    t.string  "experiment_name",              comment: "If present, the SingleTeacherExperiment with this name must be enabled in order for a teacher or their students to see this script."
     t.index ["course_id"], name: "index_course_scripts_on_course_id", using: :btree
-    t.index ["default_script_id"], name: "index_course_scripts_on_default_script_id", using: :btree
     t.index ["script_id"], name: "index_course_scripts_on_script_id", using: :btree
   end
 
-  create_table "courses", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "name"
-    t.text     "properties", limit: 65535
-    t.datetime "created_at",               null: false
-    t.datetime "updated_at",               null: false
-    t.index ["name"], name: "index_courses_on_name", using: :btree
-  end
-
-  create_table "districts", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "name",       null: false
-    t.string   "location"
-    t.integer  "contact_id"
-    t.datetime "created_at"
-    t.datetime "updated_at"
-    t.index ["contact_id"], name: "index_districts_on_contact_id", using: :btree
-    t.index ["name"], name: "index_districts_on_name", using: :btree
-  end
-
-  create_table "districts_users", id: false, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "user_id",     null: false
-    t.integer "district_id", null: false
-    t.index ["district_id", "user_id"], name: "index_districts_users_on_district_id_and_user_id", using: :btree
-    t.index ["user_id", "district_id"], name: "index_districts_users_on_user_id_and_district_id", using: :btree
-  end
-
   create_table "experiments", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
     t.datetime "created_at",           null: false
     t.datetime "updated_at",           null: false
@@ -330,162 +88,42 @@ ActiveRecord::Schema.define(version: 20180320213236) do
     t.index ["section_id"], name: "index_experiments_on_section_id", using: :btree
   end
 
-  create_table "facilitators_workshops", id: false, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "workshop_id",    null: false
-    t.integer "facilitator_id", null: false
-  end
-
   create_table "featured_projects", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
     t.integer  "storage_app_id"
-    t.datetime "featured_at"
-    t.datetime "unfeatured_at"
-    t.index ["storage_app_id"], name: "index_featured_projects_on_storage_app_id", unique: true, using: :btree
+    t.integer  "who_featured_user_id"
+    t.datetime "created_at"
+    t.index ["storage_app_id"], name: "index_featured_projects_on_storage_app_id", using: :btree
   end
 
   create_table "followers", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
+    t.integer  "user_id",         null: false
     t.integer  "student_user_id", null: false
     t.datetime "created_at"
     t.datetime "updated_at"
     t.integer  "section_id"
     t.datetime "deleted_at"
-    t.index ["section_id", "student_user_id"], name: "index_followers_on_section_id_and_student_user_id", using: :btree
     t.index ["student_user_id"], name: "index_followers_on_student_user_id", using: :btree
-  end
-
-  create_table "gallery_activities", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id",                            null: false
-    t.integer  "user_level_id"
-    t.integer  "level_source_id"
-    t.datetime "created_at"
-    t.datetime "updated_at"
-    t.boolean  "autosaved"
-    t.string   "app",             default: "turtle", null: false
-    t.index ["app", "autosaved"], name: "index_gallery_activities_on_app_and_autosaved", using: :btree
-    t.index ["level_source_id"], name: "index_gallery_activities_on_level_source_id", using: :btree
-    t.index ["user_id", "level_source_id"], name: "index_gallery_activities_on_user_id_and_level_source_id", using: :btree
-    t.index ["user_level_id"], name: "index_gallery_activities_on_user_level_id", using: :btree
+    t.index ["user_id", "student_user_id"], name: "index_followers_on_user_id_and_student_user_id", unique: true, using: :btree
   end
 
   create_table "games", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
     t.string   "name"
     t.datetime "created_at"
     t.datetime "updated_at"
+    t.string   "base_url"
     t.string   "app"
     t.integer  "intro_video_id"
-    t.index ["intro_video_id"], name: "index_games_on_intro_video_id", using: :btree
-  end
-
-  create_table "hint_view_requests", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id"
-    t.integer  "script_id"
-    t.integer  "level_id"
-    t.integer  "feedback_type"
-    t.text     "feedback_xml",  limit: 65535
-    t.datetime "created_at",                  null: false
-    t.datetime "updated_at",                  null: false
-    t.index ["script_id", "level_id"], name: "index_hint_view_requests_on_script_id_and_level_id", using: :btree
-    t.index ["user_id"], name: "index_hint_view_requests_on_user_id", using: :btree
-  end
-
-  create_table "ib_cs_offerings", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "school_code", limit: 6, null: false
-    t.string   "level",       limit: 2, null: false
-    t.integer  "school_year", limit: 2, null: false
-    t.datetime "created_at",            null: false
-    t.datetime "updated_at",            null: false
-    t.index ["school_code", "school_year", "level"], name: "index_ib_cs_offerings_on_school_code_and_school_year_and_level", unique: true, using: :btree
-  end
-
-  create_table "ib_school_codes", id: false, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "school_code", limit: 6,  null: false
-    t.string   "school_id",   limit: 12, null: false
-    t.datetime "created_at",             null: false
-    t.datetime "updated_at",             null: false
-    t.index ["school_code"], name: "index_ib_school_codes_on_school_code", unique: true, using: :btree
-    t.index ["school_id"], name: "index_ib_school_codes_on_school_id", unique: true, using: :btree
-  end
-
-  create_table "level_concept_difficulties", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "level_id"
-    t.datetime "created_at",            null: false
-    t.datetime "updated_at",            null: false
-    t.integer  "sequencing"
-    t.integer  "debugging"
-    t.integer  "repeat_loops"
-    t.integer  "repeat_until_while"
-    t.integer  "for_loops"
-    t.integer  "events"
-    t.integer  "variables"
-    t.integer  "functions"
-    t.integer  "functions_with_params"
-    t.integer  "conditionals"
-    t.index ["level_id"], name: "index_level_concept_difficulties_on_level_id", using: :btree
-  end
-
-  create_table "level_source_images", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "level_source_id"
-    t.binary   "image",           limit: 16777215
-    t.datetime "created_at"
-    t.datetime "updated_at"
-    t.index ["level_source_id"], name: "index_level_source_images_on_level_source_id", using: :btree
-  end
-
-  create_table "level_sources", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "level_id"
-    t.string   "md5",        limit: 32,                    null: false
-    t.string   "data",       limit: 20000,                 null: false
-    t.datetime "created_at"
-    t.datetime "updated_at"
-    t.boolean  "hidden",                   default: false
-    t.index ["level_id", "md5"], name: "index_level_sources_on_level_id_and_md5", using: :btree
-  end
-
-  create_table "level_sources_multi_types", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "level_source_id",               null: false
-    t.integer "level_id",                      null: false
-    t.text    "data",            limit: 65535
-    t.string  "md5",                           null: false
-    t.boolean "hidden"
-    t.index ["level_id"], name: "index_level_sources_multi_types_on_level_id", using: :btree
-    t.index ["level_source_id"], name: "index_level_sources_multi_types_on_level_source_id", using: :btree
   end
 
   create_table "levels", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
     t.integer  "game_id"
-    t.string   "name",                                                null: false
+    t.string   "name"
+    t.string   "level_url"
     t.datetime "created_at"
     t.datetime "updated_at"
     t.string   "level_num"
-    t.integer  "ideal_level_source_id"
-    t.integer  "user_id"
-    t.text     "properties",            limit: 65535
-    t.string   "type"
-    t.string   "md5"
-    t.boolean  "published",                           default: false, null: false
-    t.text     "notes",                 limit: 65535
-    t.text     "audit_log",             limit: 65535
-    t.index ["game_id"], name: "index_levels_on_game_id", using: :btree
-    t.index ["name"], name: "index_levels_on_name", using: :btree
-  end
-
-  create_table "levels_script_levels", id: false, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "level_id",        null: false
-    t.integer "script_level_id", null: false
-    t.index ["level_id"], name: "index_levels_script_levels_on_level_id", using: :btree
-    t.index ["script_level_id"], name: "index_levels_script_levels_on_script_level_id", using: :btree
-  end
-
-  create_table "metrics", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.datetime "created_at",             null: false
-    t.datetime "updated_at",             null: false
-    t.date     "computed_on",            null: false
-    t.string   "computed_by",            null: false
-    t.date     "metric_on",              null: false
-    t.string   "course"
-    t.string   "breakdown"
-    t.string   "metric",                 null: false
-    t.string   "submetric",              null: false
-    t.float    "value",       limit: 24, null: false
+    t.string   "instructions"
+    t.string   "skin"
   end
 
   create_table "paired_user_levels", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
@@ -497,580 +135,22 @@ ActiveRecord::Schema.define(version: 20180320213236) do
     t.index ["navigator_user_level_id"], name: "index_paired_user_levels_on_navigator_user_level_id", using: :btree
   end
 
-  create_table "pd_accepted_programs", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.datetime "created_at",             null: false
-    t.datetime "updated_at",             null: false
-    t.string   "workshop_name",          null: false
-    t.string   "course",                 null: false
-    t.integer  "user_id",                null: false
-    t.integer  "teacher_application_id"
-  end
-
-  create_table "pd_applications", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id"
-    t.string   "type",                                              null: false
-    t.string   "application_year",                                  null: false
-    t.string   "application_type",                                  null: false
-    t.integer  "regional_partner_id"
-    t.string   "status"
-    t.datetime "locked_at"
-    t.text     "notes",                               limit: 65535
-    t.text     "form_data",                           limit: 65535, null: false
-    t.datetime "created_at",                                        null: false
-    t.datetime "updated_at",                                        null: false
-    t.string   "course"
-    t.text     "response_scores",                     limit: 65535,              comment: "Scores given to certain responses"
-    t.string   "application_guid"
-    t.datetime "decision_notification_email_sent_at"
-    t.datetime "accepted_at"
-    t.text     "properties",                          limit: 65535
-    t.index ["application_guid"], name: "index_pd_applications_on_application_guid", using: :btree
-    t.index ["application_type"], name: "index_pd_applications_on_application_type", using: :btree
-    t.index ["application_year"], name: "index_pd_applications_on_application_year", using: :btree
-    t.index ["course"], name: "index_pd_applications_on_course", using: :btree
-    t.index ["regional_partner_id"], name: "index_pd_applications_on_regional_partner_id", using: :btree
-    t.index ["status"], name: "index_pd_applications_on_status", using: :btree
-    t.index ["type"], name: "index_pd_applications_on_type", using: :btree
-    t.index ["user_id"], name: "index_pd_applications_on_user_id", using: :btree
-  end
-
-  create_table "pd_attendances", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "pd_session_id",     null: false
-    t.integer  "teacher_id"
-    t.datetime "created_at"
-    t.datetime "updated_at"
-    t.datetime "deleted_at"
-    t.integer  "pd_enrollment_id"
-    t.integer  "marked_by_user_id",              comment: "User id for the partner or admin who marked this teacher in attendance, or nil if the teacher self-attended."
-    t.index ["pd_enrollment_id"], name: "index_pd_attendances_on_pd_enrollment_id", using: :btree
-    t.index ["pd_session_id", "teacher_id"], name: "index_pd_attendances_on_pd_session_id_and_teacher_id", unique: true, using: :btree
-  end
-
-  create_table "pd_course_facilitators", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "facilitator_id", null: false
-    t.string  "course",         null: false
-    t.index ["course"], name: "index_pd_course_facilitators_on_course", using: :btree
-    t.index ["facilitator_id", "course"], name: "index_pd_course_facilitators_on_facilitator_id_and_course", unique: true, using: :btree
-  end
-
-  create_table "pd_district_payment_terms", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "school_district_id"
-    t.string  "course",                                     null: false
-    t.string  "rate_type",                                  null: false
-    t.decimal "rate",               precision: 8, scale: 2, null: false
-    t.index ["school_district_id", "course"], name: "index_pd_district_payment_terms_school_district_course", using: :btree
-  end
-
-  create_table "pd_enrollment_notifications", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.datetime "created_at",       null: false
-    t.datetime "updated_at",       null: false
-    t.integer  "pd_enrollment_id", null: false
-    t.string   "name"
-    t.index ["pd_enrollment_id"], name: "index_pd_enrollment_notifications_on_pd_enrollment_id", using: :btree
-  end
-
-  create_table "pd_enrollments", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "pd_workshop_id",      null: false
-    t.string   "name"
-    t.string   "first_name"
-    t.string   "last_name"
-    t.string   "email",               null: false
-    t.datetime "created_at"
-    t.datetime "updated_at"
-    t.string   "school"
-    t.string   "code"
-    t.integer  "user_id"
-    t.datetime "survey_sent_at"
-    t.integer  "completed_survey_id"
-    t.integer  "school_info_id"
-    t.datetime "deleted_at"
-    t.index ["code"], name: "index_pd_enrollments_on_code", unique: true, using: :btree
-    t.index ["email"], name: "index_pd_enrollments_on_email", using: :btree
-    t.index ["pd_workshop_id"], name: "index_pd_enrollments_on_pd_workshop_id", using: :btree
-  end
-
-  create_table "pd_facilitator_program_registrations", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id",                  null: false
-    t.text     "form_data",  limit: 65535
-    t.datetime "created_at",               null: false
-    t.datetime "updated_at",               null: false
-    t.integer  "teachercon"
-    t.index ["user_id", "teachercon"], name: "index_pd_fac_prog_reg_on_user_id_and_teachercon", unique: true, using: :btree
-  end
-
-  create_table "pd_facilitator_teachercon_attendances", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "user_id",     null: false
-    t.date    "tc1_arrive"
-    t.date    "tc1_depart"
-    t.date    "fit1_arrive"
-    t.date    "fit1_depart"
-    t.string  "fit1_course"
-    t.date    "tc2_arrive"
-    t.date    "tc2_depart"
-    t.date    "fit2_arrive"
-    t.date    "fit2_depart"
-    t.string  "fit2_course"
-    t.date    "tc3_arrive"
-    t.date    "tc3_depart"
-    t.date    "fit3_arrive"
-    t.date    "fit3_depart"
-    t.string  "fit3_course"
-    t.index ["user_id"], name: "index_pd_facilitator_teachercon_attendances_on_user_id", using: :btree
-  end
-
-  create_table "pd_fit_weekend1819_registrations", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "pd_application_id"
-    t.text     "form_data",         limit: 65535
-    t.datetime "created_at",                      null: false
-    t.datetime "updated_at",                      null: false
-    t.index ["pd_application_id"], name: "index_pd_fit_weekend1819_registrations_on_pd_application_id", using: :btree
-  end
-
-  create_table "pd_payment_terms", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "regional_partner_id",               null: false
-    t.date     "start_date",                        null: false
-    t.date     "end_date"
-    t.string   "course"
-    t.string   "subject"
-    t.text     "properties",          limit: 65535
-    t.datetime "created_at",                        null: false
-    t.datetime "updated_at",                        null: false
-    t.index ["regional_partner_id"], name: "index_pd_payment_terms_on_regional_partner_id", using: :btree
-  end
-
-  create_table "pd_pre_workshop_surveys", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "pd_enrollment_id",               null: false
-    t.text     "form_data",        limit: 65535, null: false
-    t.datetime "created_at",                     null: false
-    t.datetime "updated_at",                     null: false
-    t.index ["pd_enrollment_id"], name: "index_pd_pre_workshop_surveys_on_pd_enrollment_id", unique: true, using: :btree
-  end
-
-  create_table "pd_regional_partner_cohorts", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "regional_partner_id"
-    t.integer  "role",                             comment: "teacher or facilitator"
-    t.string   "year",                             comment: "free-form text year range, YYYY-YYYY, e.g. 2016-2017"
-    t.string   "course",              null: false
-    t.string   "name",                             comment: "Human readable name of cohort (not required, used to support large partners with multiple cohorts)"
-    t.integer  "size",                             comment: "Number of people permitted in the cohort"
-    t.integer  "summer_workshop_id"
-    t.datetime "created_at",          null: false
-    t.datetime "updated_at",          null: false
-    t.index ["regional_partner_id"], name: "index_pd_regional_partner_cohorts_on_regional_partner_id", using: :btree
-    t.index ["summer_workshop_id"], name: "index_pd_regional_partner_cohorts_on_summer_workshop_id", using: :btree
-  end
-
-  create_table "pd_regional_partner_cohorts_users", id: false, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "pd_regional_partner_cohort_id", null: false
-    t.integer "user_id",                       null: false
-    t.index ["pd_regional_partner_cohort_id"], name: "index_pd_regional_partner_cohorts_users_on_cohort_id", using: :btree
-    t.index ["user_id"], name: "index_pd_regional_partner_cohorts_users_on_user_id", using: :btree
-  end
-
-  create_table "pd_regional_partner_contacts", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id"
-    t.integer  "regional_partner_id"
-    t.text     "form_data",           limit: 65535
-    t.datetime "created_at",                        null: false
-    t.datetime "updated_at",                        null: false
-    t.index ["regional_partner_id"], name: "index_pd_regional_partner_contacts_on_regional_partner_id", using: :btree
-    t.index ["user_id"], name: "index_pd_regional_partner_contacts_on_user_id", using: :btree
-  end
-
-  create_table "pd_regional_partner_mappings", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "regional_partner_id", null: false
-    t.string   "state"
-    t.string   "zip_code"
-    t.datetime "created_at",          null: false
-    t.datetime "updated_at",          null: false
-    t.index ["regional_partner_id", "state", "zip_code"], name: "index_pd_regional_partner_mappings_on_id_and_state_and_zip_code", unique: true, using: :btree
-    t.index ["regional_partner_id"], name: "index_pd_regional_partner_mappings_on_regional_partner_id", using: :btree
-  end
-
-  create_table "pd_regional_partner_program_registrations", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id",                  null: false
-    t.text     "form_data",  limit: 65535
-    t.integer  "teachercon",               null: false
-    t.datetime "created_at",               null: false
-    t.datetime "updated_at",               null: false
-    t.index ["user_id", "teachercon"], name: "index_pd_reg_part_prog_reg_on_user_id_and_teachercon", using: :btree
-  end
-
-  create_table "pd_sessions", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "pd_workshop_id"
-    t.datetime "start",          null: false
-    t.datetime "end",            null: false
-    t.datetime "created_at"
-    t.datetime "updated_at"
-    t.datetime "deleted_at"
-    t.string   "code"
-    t.index ["code"], name: "index_pd_sessions_on_code", unique: true, using: :btree
-    t.index ["pd_workshop_id"], name: "index_pd_sessions_on_pd_workshop_id", using: :btree
-  end
-
-  create_table "pd_teacher_applications", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.datetime "created_at",                              null: false
-    t.datetime "updated_at",                              null: false
-    t.integer  "user_id",                                 null: false
-    t.string   "primary_email",                           null: false
-    t.string   "secondary_email",                         null: false
-    t.text     "application",               limit: 65535, null: false
-    t.string   "regional_partner_override"
-    t.integer  "program_registration_id",                              comment: "Id in the Pegasus forms table for the associated registration (kind: PdProgramRegistration), populated when that form is processed."
-    t.index ["primary_email"], name: "index_pd_teacher_applications_on_primary_email", using: :btree
-    t.index ["secondary_email"], name: "index_pd_teacher_applications_on_secondary_email", using: :btree
-    t.index ["user_id"], name: "index_pd_teacher_applications_on_user_id", unique: true, using: :btree
-  end
-
-  create_table "pd_teachercon1819_registrations", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "pd_application_id"
-    t.text     "form_data",           limit: 65535
-    t.datetime "created_at",                        null: false
-    t.datetime "updated_at",                        null: false
-    t.integer  "regional_partner_id"
-    t.integer  "user_id"
-    t.index ["pd_application_id"], name: "index_pd_teachercon1819_registrations_on_pd_application_id", using: :btree
-    t.index ["regional_partner_id"], name: "index_pd_teachercon1819_registrations_on_regional_partner_id", using: :btree
-    t.index ["user_id"], name: "index_pd_teachercon1819_registrations_on_user_id", using: :btree
-  end
-
-  create_table "pd_teachercon_surveys", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "pd_enrollment_id",               null: false
-    t.text     "form_data",        limit: 65535, null: false
-    t.datetime "created_at",                     null: false
-    t.datetime "updated_at",                     null: false
-    t.index ["pd_enrollment_id"], name: "index_pd_teachercon_surveys_on_pd_enrollment_id", unique: true, using: :btree
-  end
-
-  create_table "pd_workshop_material_orders", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.datetime "created_at",                                 null: false
-    t.datetime "updated_at",                                 null: false
-    t.integer  "pd_enrollment_id",                           null: false
-    t.integer  "user_id",                                    null: false
-    t.string   "school_or_company"
-    t.string   "street",                                     null: false
-    t.string   "apartment_or_suite"
-    t.string   "city",                                       null: false
-    t.string   "state",                                      null: false
-    t.string   "zip_code",                                   null: false
-    t.string   "phone_number",                               null: false
-    t.datetime "order_attempted_at"
-    t.datetime "ordered_at"
-    t.text     "order_response",               limit: 65535
-    t.text     "order_error",                  limit: 65535
-    t.string   "order_id"
-    t.string   "order_status"
-    t.datetime "order_status_last_checked_at"
-    t.datetime "order_status_changed_at"
-    t.string   "tracking_id"
-    t.string   "tracking_url"
-    t.index ["pd_enrollment_id"], name: "index_pd_workshop_material_orders_on_pd_enrollment_id", unique: true, using: :btree
-    t.index ["user_id"], name: "index_pd_workshop_material_orders_on_user_id", unique: true, using: :btree
-  end
-
-  create_table "pd_workshop_surveys", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "pd_enrollment_id",               null: false
-    t.text     "form_data",        limit: 65535, null: false
-    t.datetime "created_at",                     null: false
-    t.datetime "updated_at",                     null: false
-    t.string   "type"
-    t.index ["pd_enrollment_id"], name: "index_pd_workshop_surveys_on_pd_enrollment_id", unique: true, using: :btree
-  end
-
-  create_table "pd_workshops", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "organizer_id",                      null: false
-    t.string   "location_name"
-    t.string   "location_address"
-    t.text     "processed_location",  limit: 65535
-    t.string   "course",                            null: false
-    t.string   "subject"
-    t.integer  "capacity",                          null: false
-    t.text     "notes",               limit: 65535
-    t.integer  "section_id"
-    t.datetime "started_at"
-    t.datetime "ended_at"
-    t.datetime "created_at"
-    t.datetime "updated_at"
-    t.datetime "processed_at"
-    t.datetime "deleted_at"
-    t.integer  "regional_partner_id"
-    t.boolean  "on_map",                                         comment: "Should this workshop appear on the 'Find a Workshop' map?"
-    t.boolean  "funded",                                         comment: "Should this workshop's attendees be reimbursed?"
-    t.string   "funding_type"
-    t.index ["organizer_id"], name: "index_pd_workshops_on_organizer_id", using: :btree
-    t.index ["regional_partner_id"], name: "index_pd_workshops_on_regional_partner_id", using: :btree
-  end
-
-  create_table "pd_workshops_facilitators", id: false, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "pd_workshop_id", null: false
-    t.integer "user_id",        null: false
-    t.index ["pd_workshop_id"], name: "index_pd_workshops_facilitators_on_pd_workshop_id", using: :btree
-    t.index ["user_id"], name: "index_pd_workshops_facilitators_on_user_id", using: :btree
-  end
-
-  create_table "peer_reviews", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "submitter_id"
-    t.integer  "reviewer_id"
-    t.boolean  "from_instructor",               default: false, null: false
-    t.integer  "script_id",                                     null: false
-    t.integer  "level_id",                                      null: false
-    t.integer  "level_source_id",                               null: false
-    t.text     "data",            limit: 65535
-    t.integer  "status"
-    t.datetime "created_at",                                    null: false
-    t.datetime "updated_at",                                    null: false
-    t.text     "audit_trail",     limit: 65535,                              comment: "Human-readable (never machine-parsed) audit trail of assignments and status changes with timestamps for the life of the peer review."
-    t.index ["level_id"], name: "index_peer_reviews_on_level_id", using: :btree
-    t.index ["level_source_id"], name: "index_peer_reviews_on_level_source_id", using: :btree
-    t.index ["reviewer_id"], name: "index_peer_reviews_on_reviewer_id", using: :btree
-    t.index ["script_id"], name: "index_peer_reviews_on_script_id", using: :btree
-    t.index ["submitter_id"], name: "index_peer_reviews_on_submitter_id", using: :btree
-  end
-
-  create_table "plc_course_units", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "plc_course_id"
-    t.string   "unit_name"
-    t.text     "unit_description", limit: 65535
-    t.integer  "unit_order"
-    t.datetime "created_at",                                     null: false
-    t.datetime "updated_at",                                     null: false
-    t.integer  "script_id"
-    t.boolean  "started",                        default: false, null: false
-    t.index ["plc_course_id"], name: "index_plc_course_units_on_plc_course_id", using: :btree
-    t.index ["script_id"], name: "index_plc_course_units_on_script_id", using: :btree
-  end
-
-  create_table "plc_courses", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.datetime "created_at", null: false
-    t.datetime "updated_at", null: false
-    t.integer  "course_id"
-    t.index ["course_id"], name: "fk_rails_d5fc777f73", using: :btree
-  end
-
-  create_table "plc_enrollment_module_assignments", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "plc_enrollment_unit_assignment_id"
-    t.integer  "plc_learning_module_id"
-    t.datetime "created_at",                        null: false
-    t.datetime "updated_at",                        null: false
-    t.integer  "user_id"
-    t.index ["plc_enrollment_unit_assignment_id"], name: "module_assignment_enrollment_index", using: :btree
-    t.index ["plc_learning_module_id"], name: "module_assignment_lm_index", using: :btree
-    t.index ["user_id"], name: "index_plc_enrollment_module_assignments_on_user_id", using: :btree
-  end
-
-  create_table "plc_enrollment_unit_assignments", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "plc_user_course_enrollment_id"
-    t.integer  "plc_course_unit_id"
-    t.string   "status"
-    t.datetime "created_at",                    null: false
-    t.datetime "updated_at",                    null: false
-    t.integer  "user_id"
-    t.index ["plc_course_unit_id"], name: "enrollment_unit_assignment_course_unit_index", using: :btree
-    t.index ["plc_user_course_enrollment_id"], name: "enrollment_unit_assignment_course_enrollment_index", using: :btree
-    t.index ["user_id"], name: "index_plc_enrollment_unit_assignments_on_user_id", using: :btree
-  end
-
-  create_table "plc_learning_modules", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "name"
-    t.datetime "created_at",         null: false
-    t.datetime "updated_at",         null: false
-    t.integer  "plc_course_unit_id", null: false
-    t.string   "module_type"
-    t.integer  "stage_id"
-    t.index ["plc_course_unit_id"], name: "index_plc_learning_modules_on_plc_course_unit_id", using: :btree
-    t.index ["stage_id"], name: "index_plc_learning_modules_on_stage_id", using: :btree
-  end
-
-  create_table "plc_learning_modules_tasks", id: false, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "plc_learning_module_id", null: false
-    t.integer "plc_task_id",            null: false
-    t.index ["plc_learning_module_id"], name: "index_plc_learning_modules_tasks_on_plc_learning_module_id", using: :btree
-    t.index ["plc_task_id"], name: "index_plc_learning_modules_tasks_on_plc_task_id", using: :btree
-  end
-
-  create_table "plc_tasks", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "name"
-    t.datetime "created_at",                                          null: false
-    t.datetime "updated_at",                                          null: false
-    t.string   "type",                          default: "Plc::Task", null: false
-    t.text     "properties",      limit: 65535
-    t.integer  "script_level_id"
-    t.index ["script_level_id"], name: "index_plc_tasks_on_script_level_id", using: :btree
-  end
-
-  create_table "plc_user_course_enrollments", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "status"
-    t.integer  "plc_course_id"
-    t.integer  "user_id"
-    t.datetime "created_at",    null: false
-    t.datetime "updated_at",    null: false
-    t.index ["plc_course_id"], name: "index_plc_user_course_enrollments_on_plc_course_id", using: :btree
-    t.index ["user_id", "plc_course_id"], name: "index_plc_user_course_enrollments_on_user_id_and_plc_course_id", unique: true, using: :btree
-  end
-
-  create_table "puzzle_ratings", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id"
-    t.integer  "script_id"
-    t.integer  "level_id"
-    t.integer  "rating"
-    t.datetime "created_at", null: false
-    t.datetime "updated_at", null: false
-    t.index ["script_id", "level_id"], name: "index_puzzle_ratings_on_script_id_and_level_id", using: :btree
-    t.index ["user_id", "script_id", "level_id"], name: "index_puzzle_ratings_on_user_id_and_script_id_and_level_id", unique: true, using: :btree
-  end
-
-  create_table "regional_partner_program_managers", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "program_manager_id",  null: false
-    t.integer "regional_partner_id", null: false
-    t.index ["program_manager_id"], name: "index_regional_partner_program_managers_on_program_manager_id", using: :btree
-    t.index ["regional_partner_id"], name: "index_regional_partner_program_managers_on_regional_partner_id", using: :btree
-  end
-
-  create_table "regional_partners", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "name",                             null: false
-    t.integer  "group"
-    t.integer  "contact_id"
-    t.boolean  "urban"
-    t.string   "attention"
-    t.string   "street"
-    t.string   "apartment_or_suite"
-    t.string   "city"
-    t.string   "state"
-    t.string   "zip_code"
-    t.string   "phone_number"
-    t.text     "notes",              limit: 65535
-    t.datetime "created_at",                       null: false
-    t.datetime "updated_at",                       null: false
-    t.datetime "deleted_at"
-    t.text     "properties",         limit: 65535
-    t.index ["name", "contact_id"], name: "index_regional_partners_on_name_and_contact_id", unique: true, using: :btree
-  end
-
-  create_table "regional_partners_school_districts", id: false, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "regional_partner_id", null: false
-    t.integer "school_district_id",  null: false
-    t.string  "course",                           comment: "Course for a given workshop"
-    t.string  "workshop_days",                    comment: "Days that the workshop will take place"
-    t.index ["regional_partner_id"], name: "index_regional_partners_school_districts_on_partner_id", using: :btree
-    t.index ["school_district_id"], name: "index_regional_partners_school_districts_on_school_district_id", using: :btree
-  end
-
-  create_table "school_districts", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "name",       null: false
-    t.string   "city",       null: false
-    t.string   "state",      null: false
-    t.string   "zip",        null: false
-    t.datetime "created_at", null: false
-    t.datetime "updated_at", null: false
-    t.index ["name", "city"], name: "index_school_districts_on_name_and_city", type: :fulltext
-    t.index ["state"], name: "index_school_districts_on_state", using: :btree
-  end
-
-  create_table "school_infos", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "country"
-    t.string   "school_type"
-    t.integer  "zip"
-    t.string   "state"
-    t.integer  "school_district_id"
-    t.boolean  "school_district_other",            default: false
-    t.string   "school_district_name"
-    t.string   "school_id",             limit: 12
-    t.boolean  "school_other",                     default: false
-    t.string   "school_name",                                                    comment: "This column appears to be redundant with pd_enrollments.school and users.school, therefore validation rules must be used to ensure that any user or enrollment with a school_info has its school name stored in the correct place."
-    t.string   "full_address",                                                   comment: "This column appears to be redundant with users.full_address, therefore validation rules must be used to ensure that any user with a school_info has its school address stored in the correct place."
-    t.datetime "created_at",                                        null: false
-    t.datetime "updated_at",                                        null: false
-    t.string   "validation_type",                  default: "full", null: false
-    t.index ["school_district_id"], name: "fk_rails_951bceb7e3", using: :btree
-    t.index ["school_id"], name: "index_school_infos_on_school_id", using: :btree
-  end
-
-  create_table "school_stats_by_years", primary_key: ["school_id", "school_year"], force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "school_id",          limit: 12, null: false, comment: "NCES public school ID"
-    t.string   "school_year",        limit: 9,  null: false, comment: "School Year"
-    t.string   "grades_offered_lo",  limit: 2,               comment: "Grades Offered - Lowest"
-    t.string   "grades_offered_hi",  limit: 2,               comment: "Grades Offered - Highest"
-    t.boolean  "grade_pk_offered",                           comment: "PK Grade Offered"
-    t.boolean  "grade_kg_offered",                           comment: "KG Grade Offered"
-    t.boolean  "grade_01_offered",                           comment: "Grade 01 Offered"
-    t.boolean  "grade_02_offered",                           comment: "Grade 02 Offered"
-    t.boolean  "grade_03_offered",                           comment: "Grade 03 Offered"
-    t.boolean  "grade_04_offered",                           comment: "Grade 04 Offered"
-    t.boolean  "grade_05_offered",                           comment: "Grade 05 Offered"
-    t.boolean  "grade_06_offered",                           comment: "Grade 06 Offered"
-    t.boolean  "grade_07_offered",                           comment: "Grade 07 Offered"
-    t.boolean  "grade_08_offered",                           comment: "Grade 08 Offered"
-    t.boolean  "grade_09_offered",                           comment: "Grade 09 Offered"
-    t.boolean  "grade_10_offered",                           comment: "Grade 10 Offered"
-    t.boolean  "grade_11_offered",                           comment: "Grade 11 Offered"
-    t.boolean  "grade_12_offered",                           comment: "Grade 12 Offered"
-    t.boolean  "grade_13_offered",                           comment: "Grade 13 Offered"
-    t.string   "virtual_status",     limit: 14,              comment: "Virtual School Status"
-    t.integer  "students_total",                             comment: "Total students, all grades (includes AE)"
-    t.integer  "student_am_count",                           comment: "All Students - American Indian/Alaska Native"
-    t.integer  "student_as_count",                           comment: "All Students - Asian"
-    t.integer  "student_hi_count",                           comment: "All Students - Hispanic"
-    t.integer  "student_bl_count",                           comment: "All Students - Black"
-    t.integer  "student_wh_count",                           comment: "All Students - White"
-    t.integer  "student_hp_count",                           comment: "All Students - Hawaiian Native/Pacific Islander"
-    t.integer  "student_tr_count",                           comment: "All Students - Two or More Races"
-    t.string   "title_i_status",     limit: 1,               comment: "TITLE I status (code)"
-    t.integer  "frl_eligible_total",                         comment: "Total of free and reduced-price lunch eligible"
-    t.datetime "created_at",                    null: false
-    t.datetime "updated_at",                    null: false
-    t.string   "community_type",     limit: 16,              comment: "Urban-centric community type"
-    t.index ["school_id"], name: "index_school_stats_by_years_on_school_id", using: :btree
-  end
-
-  create_table "schools", id: false, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "id",                 limit: 12,                         null: false, comment: "NCES public school ID"
-    t.integer  "school_district_id"
-    t.string   "name",                                                  null: false
-    t.string   "city",                                                  null: false
-    t.string   "state",                                                 null: false
-    t.string   "zip",                                                   null: false
-    t.string   "school_type",                                           null: false
-    t.datetime "created_at",                                            null: false
-    t.datetime "updated_at",                                            null: false
-    t.string   "address_line1",      limit: 50,                                      comment: "Location address, street 1"
-    t.string   "address_line2",      limit: 30,                                      comment: "Location address, street 2"
-    t.string   "address_line3",      limit: 30,                                      comment: "Location address, street 3"
-    t.decimal  "latitude",                      precision: 8, scale: 6,              comment: "Location latitude"
-    t.decimal  "longitude",                     precision: 9, scale: 6,              comment: "Location longitude"
-    t.string   "state_school_id"
-    t.index ["id"], name: "index_schools_on_id", unique: true, using: :btree
-    t.index ["name", "city"], name: "index_schools_on_name_and_city", type: :fulltext
-    t.index ["school_district_id"], name: "index_schools_on_school_district_id", using: :btree
-    t.index ["state_school_id"], name: "index_schools_on_state_school_id", unique: true, using: :btree
-    t.index ["zip"], name: "index_schools_on_zip", using: :btree
-  end
-
   create_table "script_levels", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "script_id",                 null: false
+    t.integer  "level_id",     null: false
+    t.integer  "script_id",    null: false
     t.integer  "chapter"
     t.datetime "created_at"
     t.datetime "updated_at"
-    t.integer  "stage_id"
-    t.integer  "position"
-    t.boolean  "assessment"
-    t.text     "properties",  limit: 65535
-    t.boolean  "named_level"
-    t.boolean  "bonus"
-    t.index ["script_id"], name: "index_script_levels_on_script_id", using: :btree
-    t.index ["stage_id"], name: "index_script_levels_on_stage_id", using: :btree
+    t.integer  "game_chapter"
   end
 
   create_table "scripts", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "name",                                          null: false
+    t.string   "name"
     t.datetime "created_at"
     t.datetime "updated_at"
     t.integer  "wrapup_video_id"
-    t.boolean  "hidden",                        default: false, null: false
-    t.integer  "user_id"
-    t.boolean  "login_required",                default: false, null: false
-    t.text     "properties",      limit: 65535
-    t.index ["name"], name: "index_scripts_on_name", unique: true, using: :btree
-    t.index ["wrapup_video_id"], name: "index_scripts_on_wrapup_video_id", using: :btree
+    t.boolean  "trophies",        default: false, null: false
+    t.boolean  "hidden",          default: false, null: false
   end
 
   create_table "secret_pictures", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
@@ -1089,166 +169,42 @@ ActiveRecord::Schema.define(version: 20180320213236) do
     t.index ["word"], name: "index_secret_words_on_word", unique: true, using: :btree
   end
 
-  create_table "section_hidden_scripts", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "section_id", null: false
-    t.integer "script_id",  null: false
-    t.index ["script_id"], name: "index_section_hidden_scripts_on_script_id", using: :btree
-    t.index ["section_id"], name: "index_section_hidden_scripts_on_section_id", using: :btree
-  end
-
-  create_table "section_hidden_stages", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "section_id", null: false
-    t.integer "stage_id",   null: false
-    t.index ["section_id"], name: "index_section_hidden_stages_on_section_id", using: :btree
-    t.index ["stage_id"], name: "index_section_hidden_stages_on_stage_id", using: :btree
-  end
-
   create_table "sections", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id",                             null: false
+    t.integer  "user_id",                          null: false
     t.string   "name"
     t.datetime "created_at"
     t.datetime "updated_at"
     t.string   "code"
+    t.datetime "deleted_at"
+    t.string   "login_type"
     t.integer  "script_id"
-    t.integer  "course_id"
+    t.integer  "login_method",     default: 0
     t.string   "grade"
-    t.string   "login_type",        default: "email", null: false
-    t.datetime "deleted_at"
-    t.boolean  "stage_extras",      default: false,   null: false
-    t.string   "section_type"
-    t.datetime "first_activity_at"
-    t.boolean  "pairing_allowed",   default: true,    null: false
-    t.boolean  "sharing_disabled",  default: false,   null: false, comment: "Flag indicates the default sharing setting for a section and is used to determine students share setting when adding a new student to the section."
-    t.boolean  "hidden",            default: false,   null: false
-    t.index ["code"], name: "index_sections_on_code", unique: true, using: :btree
-    t.index ["course_id"], name: "fk_rails_20b1e5de46", using: :btree
-    t.index ["user_id"], name: "index_sections_on_user_id", using: :btree
-  end
-
-  create_table "seeded_s3_objects", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "bucket"
-    t.string   "key"
-    t.string   "etag"
-    t.datetime "created_at", null: false
-    t.datetime "updated_at", null: false
-    t.index ["bucket", "key", "etag"], name: "index_seeded_s3_objects_on_bucket_and_key_and_etag", using: :btree
-  end
-
-  create_table "segments", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "workshop_id", null: false
-    t.datetime "start",       null: false
-    t.datetime "end"
-    t.datetime "created_at"
-    t.datetime "updated_at"
-    t.index ["end"], name: "index_segments_on_end", using: :btree
-    t.index ["start"], name: "index_segments_on_start", using: :btree
-    t.index ["workshop_id"], name: "index_segments_on_workshop_id", using: :btree
-  end
-
-  create_table "sign_ins", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id",       null: false
-    t.datetime "sign_in_at",    null: false
-    t.integer  "sign_in_count", null: false
-    t.index ["sign_in_at"], name: "index_sign_ins_on_sign_in_at", using: :btree
-    t.index ["user_id"], name: "index_sign_ins_on_user_id", using: :btree
+    t.string   "admin_code"
+    t.boolean  "stage_extras",     default: false, null: false
+    t.boolean  "pairing_allowed",  default: true,  null: false
+    t.boolean  "hidden",           default: false, null: false
+    t.integer  "course_id"
+    t.boolean  "sharing_disabled", default: false, null: false, comment: "Flag indicates the default sharing setting for a section and is used to determine students share setting when adding a new student to the section."
+    t.index ["user_id", "name"], name: "index_sections_on_user_id_and_name", unique: true, using: :btree
   end
 
-  create_table "stages", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "name",                                            null: false
-    t.integer  "absolute_position"
-    t.integer  "script_id",                                       null: false
+  create_table "trophies", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
+    t.string   "name"
+    t.string   "image_name"
     t.datetime "created_at"
     t.datetime "updated_at"
-    t.string   "flex_category"
-    t.boolean  "lockable",                        default: false, null: false
-    t.integer  "relative_position",                               null: false
-    t.text     "properties",        limit: 65535
-    t.index ["script_id"], name: "index_stages_on_script_id", using: :btree
-  end
-
-  create_table "state_cs_offerings", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "state_school_id",           null: false
-    t.string   "course",                    null: false
-    t.integer  "school_year",     limit: 2, null: false
-    t.datetime "created_at",                null: false
-    t.datetime "updated_at",                null: false
-    t.index ["state_school_id", "school_year", "course"], name: "index_state_cs_offerings_on_id_and_year_and_course", unique: true, using: :btree
-  end
-
-  create_table "studio_people", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.datetime "created_at", null: false
-    t.datetime "updated_at", null: false
-    t.string   "emails"
-  end
-
-  create_table "survey_results", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id"
-    t.string   "kind"
-    t.text     "properties", limit: 65535
-    t.datetime "created_at",               null: false
-    t.datetime "updated_at",               null: false
-    t.index ["kind"], name: "index_survey_results_on_kind", using: :btree
-    t.index ["user_id"], name: "index_survey_results_on_user_id", using: :btree
-  end
-
-  create_table "teacher_profiles", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "studio_person_id"
-    t.datetime "created_at",                     null: false
-    t.datetime "updated_at",                     null: false
-    t.string   "course",                         null: false
-    t.boolean  "facilitator"
-    t.boolean  "teaching"
-    t.string   "pd_year"
-    t.string   "pd"
-    t.string   "other_pd"
-    t.text     "properties",       limit: 65535
-    t.index ["studio_person_id"], name: "index_teacher_profiles_on_studio_person_id", using: :btree
-  end
-
-  create_table "unexpected_teachers_workshops", id: false, force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "workshop_id",           null: false
-    t.integer "unexpected_teacher_id", null: false
-    t.index ["unexpected_teacher_id"], name: "index_unexpected_teachers_workshops_on_unexpected_teacher_id", using: :btree
-    t.index ["workshop_id"], name: "index_unexpected_teachers_workshops_on_workshop_id", using: :btree
-  end
-
-  create_table "user_geos", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id",                             null: false
-    t.datetime "created_at",                          null: false
-    t.datetime "updated_at",                          null: false
-    t.datetime "indexed_at"
-    t.string   "ip_address"
-    t.string   "city"
-    t.string   "state"
-    t.string   "country"
-    t.string   "postal_code"
-    t.decimal  "latitude",    precision: 8, scale: 6
-    t.decimal  "longitude",   precision: 9, scale: 6
-    t.index ["indexed_at"], name: "index_user_geos_on_indexed_at", using: :btree
-    t.index ["user_id"], name: "index_user_geos_on_user_id", using: :btree
+    t.index ["name"], name: "index_trophies_on_name", unique: true, using: :btree
   end
 
   create_table "user_levels", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id",                      null: false
-    t.integer  "level_id",                     null: false
-    t.integer  "attempts",         default: 0, null: false
+    t.integer  "user_id",                 null: false
+    t.integer  "level_id",                null: false
+    t.integer  "attempts",    default: 0, null: false
     t.datetime "created_at"
     t.datetime "updated_at"
     t.integer  "best_result"
-    t.integer  "script_id"
-    t.integer  "level_source_id"
-    t.boolean  "submitted"
-    t.boolean  "readonly_answers"
-    t.datetime "unlocked_at"
-    t.index ["user_id", "level_id", "script_id"], name: "index_user_levels_on_user_id_and_level_id_and_script_id", unique: true, using: :btree
-  end
-
-  create_table "user_module_task_assignments", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer "user_enrollment_module_assignment_id"
-    t.integer "professional_learning_task_id"
-    t.string  "status"
-    t.index ["professional_learning_task_id"], name: "task_assignment_to_task_index", using: :btree
-    t.index ["user_enrollment_module_assignment_id"], name: "task_assignment_to_module_assignment_index", using: :btree
+    t.index ["user_id", "level_id"], name: "index_user_levels_on_user_id_and_level_id", unique: true, using: :btree
   end
 
   create_table "user_permissions", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
@@ -1259,65 +215,6 @@ ActiveRecord::Schema.define(version: 20180320213236) do
     t.index ["user_id", "permission"], name: "index_user_permissions_on_user_id_and_permission", unique: true, using: :btree
   end
 
-  create_table "user_proficiencies", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "user_id",                                    null: false
-    t.datetime "created_at",                                 null: false
-    t.datetime "updated_at",                                 null: false
-    t.datetime "last_progress_at"
-    t.integer  "sequencing_d1_count",            default: 0
-    t.integer  "sequencing_d2_count",            default: 0
-    t.integer  "sequencing_d3_count",            default: 0
-    t.integer  "sequencing_d4_count",            default: 0
-    t.integer  "sequencing_d5_count",            default: 0
-    t.integer  "debugging_d1_count",             default: 0
-    t.integer  "debugging_d2_count",             default: 0
-    t.integer  "debugging_d3_count",             default: 0
-    t.integer  "debugging_d4_count",             default: 0
-    t.integer  "debugging_d5_count",             default: 0
-    t.integer  "repeat_loops_d1_count",          default: 0
-    t.integer  "repeat_loops_d2_count",          default: 0
-    t.integer  "repeat_loops_d3_count",          default: 0
-    t.integer  "repeat_loops_d4_count",          default: 0
-    t.integer  "repeat_loops_d5_count",          default: 0
-    t.integer  "repeat_until_while_d1_count",    default: 0
-    t.integer  "repeat_until_while_d2_count",    default: 0
-    t.integer  "repeat_until_while_d3_count",    default: 0
-    t.integer  "repeat_until_while_d4_count",    default: 0
-    t.integer  "repeat_until_while_d5_count",    default: 0
-    t.integer  "for_loops_d1_count",             default: 0
-    t.integer  "for_loops_d2_count",             default: 0
-    t.integer  "for_loops_d3_count",             default: 0
-    t.integer  "for_loops_d4_count",             default: 0
-    t.integer  "for_loops_d5_count",             default: 0
-    t.integer  "events_d1_count",                default: 0
-    t.integer  "events_d2_count",                default: 0
-    t.integer  "events_d3_count",                default: 0
-    t.integer  "events_d4_count",                default: 0
-    t.integer  "events_d5_count",                default: 0
-    t.integer  "variables_d1_count",             default: 0
-    t.integer  "variables_d2_count",             default: 0
-    t.integer  "variables_d3_count",             default: 0
-    t.integer  "variables_d4_count",             default: 0
-    t.integer  "variables_d5_count",             default: 0
-    t.integer  "functions_d1_count",             default: 0
-    t.integer  "functions_d2_count",             default: 0
-    t.integer  "functions_d3_count",             default: 0
-    t.integer  "functions_d4_count",             default: 0
-    t.integer  "functions_d5_count",             default: 0
-    t.integer  "functions_with_params_d1_count", default: 0
-    t.integer  "functions_with_params_d2_count", default: 0
-    t.integer  "functions_with_params_d3_count", default: 0
-    t.integer  "functions_with_params_d4_count", default: 0
-    t.integer  "functions_with_params_d5_count", default: 0
-    t.integer  "conditionals_d1_count",          default: 0
-    t.integer  "conditionals_d2_count",          default: 0
-    t.integer  "conditionals_d3_count",          default: 0
-    t.integer  "conditionals_d4_count",          default: 0
-    t.integer  "conditionals_d5_count",          default: 0
-    t.datetime "basic_proficiency_at"
-    t.index ["user_id"], name: "index_user_proficiencies_on_user_id", unique: true, using: :btree
-  end
-
   create_table "user_scripts", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
     t.integer  "user_id",          null: false
     t.integer  "script_id",        null: false
@@ -1327,19 +224,25 @@ ActiveRecord::Schema.define(version: 20180320213236) do
     t.datetime "last_progress_at"
     t.datetime "created_at"
     t.datetime "updated_at"
-    t.index ["script_id"], name: "index_user_scripts_on_script_id", using: :btree
     t.index ["user_id", "script_id"], name: "index_user_scripts_on_user_id_and_script_id", unique: true, using: :btree
   end
 
+  create_table "user_trophies", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
+    t.integer  "user_id",    null: false
+    t.integer  "trophy_id",  null: false
+    t.integer  "concept_id"
+    t.datetime "created_at"
+    t.datetime "updated_at"
+    t.index ["user_id", "trophy_id", "concept_id"], name: "index_user_trophies_on_user_id_and_trophy_id_and_concept_id", unique: true, using: :btree
+  end
+
   create_table "users", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "studio_person_id"
-    t.string   "email",                                  default: "",      null: false
-    t.string   "parent_email"
-    t.string   "encrypted_password",                     default: ""
+    t.string   "email",                                default: "",        null: false
+    t.string   "encrypted_password",                   default: "",        null: false
     t.string   "reset_password_token"
     t.datetime "reset_password_sent_at"
     t.datetime "remember_created_at"
-    t.integer  "sign_in_count",                          default: 0
+    t.integer  "sign_in_count",                        default: 0
     t.datetime "current_sign_in_at"
     t.datetime "last_sign_in_at"
     t.string   "current_sign_in_ip"
@@ -1350,123 +253,41 @@ ActiveRecord::Schema.define(version: 20180320213236) do
     t.string   "provider"
     t.string   "uid"
     t.boolean  "admin"
-    t.string   "gender",                   limit: 1
+    t.string   "gender",                 limit: 1
     t.string   "name"
-    t.string   "locale",                   limit: 10,    default: "en-US", null: false
+    t.string   "language",               limit: 2
     t.date     "birthday"
-    t.string   "user_type",                limit: 16
-    t.string   "school"
-    t.string   "full_address",             limit: 1024
-    t.integer  "school_info_id"
-    t.integer  "total_lines",                            default: 0,       null: false
-    t.integer  "secret_picture_id"
-    t.boolean  "active",                                 default: true,    null: false
-    t.string   "hashed_email"
+    t.string   "parent_email"
     t.datetime "deleted_at"
-    t.datetime "purged_at"
+    t.string   "hashed_email"
+    t.text     "properties",             limit: 65535
+    t.string   "user_type",              limit: 16,    default: "student"
+    t.string   "school"
+    t.string   "full_address",           limit: 1024
+    t.string   "address"
+    t.string   "city"
+    t.string   "state"
+    t.string   "zip"
+    t.float    "lat",                    limit: 24
+    t.float    "lon",                    limit: 24
+    t.integer  "total_lines",                          default: 0,         null: false
     t.string   "secret_words"
-    t.text     "properties",               limit: 65535
-    t.string   "invitation_token"
-    t.datetime "invitation_created_at"
-    t.datetime "invitation_sent_at"
-    t.datetime "invitation_accepted_at"
-    t.integer  "invitation_limit"
-    t.integer  "invited_by_id"
-    t.string   "invited_by_type"
-    t.integer  "invitations_count",                      default: 0
-    t.integer  "terms_of_service_version"
-    t.boolean  "urm"
-    t.string   "races"
-    t.index ["birthday"], name: "index_users_on_birthday", using: :btree
-    t.index ["current_sign_in_at"], name: "index_users_on_current_sign_in_at", using: :btree
+    t.integer  "secret_picture_id"
+    t.integer  "secret_word_1_id"
+    t.integer  "secret_word_2_id"
     t.index ["deleted_at"], name: "index_users_on_deleted_at", using: :btree
-    t.index ["email", "deleted_at"], name: "index_users_on_email_and_deleted_at", using: :btree
-    t.index ["hashed_email", "deleted_at"], name: "index_users_on_hashed_email_and_deleted_at", using: :btree
-    t.index ["invitation_token"], name: "index_users_on_invitation_token", unique: true, using: :btree
-    t.index ["invitations_count"], name: "index_users_on_invitations_count", using: :btree
-    t.index ["invited_by_id"], name: "index_users_on_invited_by_id", using: :btree
-    t.index ["parent_email"], name: "index_users_on_parent_email", using: :btree
-    t.index ["provider", "uid", "deleted_at"], name: "index_users_on_provider_and_uid_and_deleted_at", unique: true, using: :btree
-    t.index ["purged_at"], name: "index_users_on_purged_at", using: :btree
-    t.index ["reset_password_token", "deleted_at"], name: "index_users_on_reset_password_token_and_deleted_at", unique: true, using: :btree
-    t.index ["school_info_id"], name: "index_users_on_school_info_id", using: :btree
-    t.index ["studio_person_id"], name: "index_users_on_studio_person_id", using: :btree
-    t.index ["username", "deleted_at"], name: "index_users_on_username_and_deleted_at", unique: true, using: :btree
+    t.index ["email"], name: "index_users_on_email", using: :btree
+    t.index ["hashed_email"], name: "index_users_on_hashed_email", using: :btree
+    t.index ["reset_password_token"], name: "index_users_on_reset_password_token", unique: true, using: :btree
+    t.index ["username"], name: "index_users_on_username", unique: true, using: :btree
   end
 
   create_table "videos", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
+    t.string   "name"
     t.string   "key"
     t.string   "youtube_code"
     t.datetime "created_at"
     t.datetime "updated_at"
-    t.string   "download"
-  end
-
-  create_table "workshop_attendance", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "teacher_id",               null: false
-    t.integer  "segment_id",               null: false
-    t.string   "status"
-    t.datetime "created_at"
-    t.datetime "updated_at"
-    t.text     "notes",      limit: 65535
-    t.index ["segment_id"], name: "index_workshop_attendance_on_segment_id", using: :btree
-    t.index ["teacher_id"], name: "index_workshop_attendance_on_teacher_id", using: :btree
-  end
-
-  create_table "workshop_cohorts", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.integer  "workshop_id", null: false
-    t.integer  "cohort_id",   null: false
-    t.datetime "created_at"
-    t.datetime "updated_at"
-  end
-
-  create_table "workshops", force: :cascade, options: "ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci" do |t|
-    t.string   "name"
-    t.string   "program_type",              null: false
-    t.string   "location",     limit: 1000
-    t.string   "instructions", limit: 1000
-    t.datetime "created_at"
-    t.datetime "updated_at"
-    t.integer  "phase"
-    t.index ["name"], name: "index_workshops_on_name", using: :btree
-    t.index ["program_type"], name: "index_workshops_on_program_type", using: :btree
   end
 
-  add_foreign_key "ap_school_codes", "schools"
-  add_foreign_key "authored_hint_view_requests", "levels"
-  add_foreign_key "authored_hint_view_requests", "scripts"
-  add_foreign_key "authored_hint_view_requests", "users"
-  add_foreign_key "census_inaccuracy_investigations", "census_overrides"
-  add_foreign_key "census_inaccuracy_investigations", "census_submissions"
-  add_foreign_key "census_inaccuracy_investigations", "users"
-  add_foreign_key "census_overrides", "schools"
-  add_foreign_key "census_submission_form_maps", "census_submissions"
-  add_foreign_key "census_summaries", "schools"
-  add_foreign_key "circuit_playground_discount_applications", "schools"
-  add_foreign_key "hint_view_requests", "users"
-  add_foreign_key "ib_school_codes", "schools"
-  add_foreign_key "level_concept_difficulties", "levels"
-  add_foreign_key "pd_payment_terms", "regional_partners"
-  add_foreign_key "pd_regional_partner_cohorts", "pd_workshops", column: "summer_workshop_id"
-  add_foreign_key "pd_teachercon1819_registrations", "regional_partners"
-  add_foreign_key "pd_teachercon1819_registrations", "users"
-  add_foreign_key "pd_workshops", "regional_partners"
-  add_foreign_key "peer_reviews", "level_sources"
-  add_foreign_key "peer_reviews", "levels"
-  add_foreign_key "peer_reviews", "scripts"
-  add_foreign_key "peer_reviews", "users", column: "reviewer_id"
-  add_foreign_key "peer_reviews", "users", column: "submitter_id"
-  add_foreign_key "plc_course_units", "scripts"
-  add_foreign_key "plc_courses", "courses"
-  add_foreign_key "plc_learning_modules", "stages"
-  add_foreign_key "plc_tasks", "script_levels"
-  add_foreign_key "school_infos", "school_districts"
-  add_foreign_key "school_infos", "schools"
-  add_foreign_key "school_stats_by_years", "schools"
-  add_foreign_key "schools", "school_districts"
-  add_foreign_key "sections", "courses"
-  add_foreign_key "state_cs_offerings", "schools", column: "state_school_id", primary_key: "state_school_id"
-  add_foreign_key "survey_results", "users"
-  add_foreign_key "user_geos", "users"
-  add_foreign_key "user_proficiencies", "users"
 end
diff --git a/dashboard/lib/projects_list.rb b/dashboard/lib/projects_list.rb
index 6794fc6e2ed..ad7363b0826 100644
--- a/dashboard/lib/projects_list.rb
+++ b/dashboard/lib/projects_list.rb
@@ -183,7 +183,7 @@ module ProjectsList
     end
 
     def fetch_published_project_types(project_groups, limit:, published_before: nil)
-      users = "dashboard_#{CDO.rack_env}__users".to_sym
+      users = RDL.type_cast("dashboard_#{CDO.rack_env}__users".to_sym, ":users", force: true) # get it to work with Sequel types (without qualified database name)
       {}.tap do |projects|
         project_groups.map do |project_group|
           project_types = PUBLISHED_PROJECT_TYPE_GROUPS[project_group]
diff --git a/db_types.rb b/db_types.rb
new file mode 100644
index 00000000000..8090f3bc61f
--- /dev/null
+++ b/db_types.rb
@@ -0,0 +1,455 @@
+class Sequel::Mysql2::Database
+  extend RDL::Annotate
+
+  type 'self.[]', '(Symbol) -> ``gen_output_type(targs)``', wrap: false
+  type '[]', '(Symbol) -> ``gen_output_type(targs)``', wrap: false
+  type :transaction, "() { () -> %any } -> self", wrap: false
+
+  
+  def self.gen_output_type(targs)
+    case targs[0]
+    when RDL::Type::SingletonType
+      t = RDL::Globals.db_schema[targs[0].val]
+      raise "no schema for table #{targs[0]}" if t.nil?
+      new_t = t.elts.clone
+      new_t[:__selected] = RDL::Globals.types[:nil]
+      new_t[:__last_joined] = targs[0]
+      new_t[:__all_joined] = targs[0]
+      new_t[:__orm] = RDL::Globals.types[:false] ## orm is either equal to the false type, or the nominal type of the Model class the table represents
+      new_fht = RDL::Type::FiniteHashType.new(new_t, nil)
+      return RDL::Type::GenericType.new(RDL::Type::NominalType.new(Table), new_fht)
+    else
+      raise "unexpected type"
+    end
+  end
+end
+
+module Sequel
+  extend RDL::Annotate
+
+  type 'self.sqlite', '() -> DBVal', wrap: false
+  
+  type 'self.[]', '(Symbol) -> ``gen_output_type(targs)``', wrap: false
+
+  def self.gen_output_type(targs)
+    case targs[0]
+    when RDL::Type::SingletonType
+      RDL::Type::GenericType.new(RDL::Type::NominalType.new(SeqIdent), targs[0])
+    else
+      raise "unexpected type"
+    end
+  end
+end
+class SeqIdent
+  extend RDL::Annotate
+  type_params [:t], :all? ## figure out something for all
+  type :[], '(Symbol) -> ``gen_output_type(trec, targs)``', wrap: false
+
+  def self.gen_output_type(trec, targs)
+    case trec
+    when RDL::Type::GenericType
+      param = trec.params[0]
+      case targs[0]
+      when RDL::Type::SingletonType
+        return RDL::Type::GenericType.new(RDL::Type::NominalType.new(SeqQualIdent), param, targs[0])
+      else
+        raise "expected singleton"
+      end
+    else
+      raise "unexpected trec type"
+    end
+  end
+  
+end
+
+class SeqQualIdent
+  extend RDL::Annotate
+  type_params [:table, :column], :all? ## figure out something for all
+  
+end
+
+class Table
+  extend RDL::Annotate
+  type_params [:t], :all? ##figure out something for all
+  
+  type :join, "(Symbol, %any) -> ``join_ret_type(trec, targs)``", wrap: false ## can we get more specifc than %any for 2nd arg?
+  type :left_outer_join, "(Symbol, %any) -> ``join_ret_type(trec, targs)``", wrap: false ## type is same as inner join even though semantics are different
+
+  def self.get_schema(hash)
+    hash.select { |key, val| ![:__last_joined, :__all_joined, :__selected, :__orm].member?(key) }
+  end
+
+  def self.get_all_joined(t)
+    case t
+    when RDL::Type::SingletonType
+      raise "unexpected type #{t} in __all_joined clause" unless t.val.is_a?(Symbol)
+      return [t.val]
+    when RDL::Type::UnionType
+      all = []
+      t.types.each { |subt|
+        raise "unexpected type #{subt} in union type within __all_joined clause" unless subt.is_a?(RDL::Type::SingletonType) && subt.val.is_a?(Symbol)
+        all << subt.val
+      }
+      return all
+    else
+      raise "unexpected type #{t} in __all_joined clause"
+    end
+  end
+
+  def self.join_ret_type(trec, targs)
+    raise RDL::Typecheck::StaticTypeError, "Unexpected number of arguments to `join`." unless targs.size == 2
+    targ1, targ2 = *targs
+    raise RDL::Typecheck::StaticTypeError, "Unexpected second argument type to `join`." unless targ2.is_a?(RDL::Type::FiniteHashType) && (targ2.elts.size == 1)
+    arg_join_column = targ2.elts.keys[0] ## column name of arg table which is joined on
+    rec_join_column = targ2.elts[arg_join_column] ## column name of receiver table which is joined on
+    case trec
+    when RDL::Type::GenericType
+      raise RDL::Typecheck::StaticTypeError, "unexpceted generic type in call to join" unless trec.base.name == "Table"
+      receiver_param = trec.params[0].elts
+      receiver_schema = get_schema(receiver_param)
+      join_source_schema = get_schema(RDL::Globals.db_schema[receiver_param[:__last_joined].val].elts)
+      rec_all_joined = get_all_joined(receiver_param[:__all_joined])
+
+      case rec_join_column
+      when RDL::Type::SingletonType
+        ## given symbol for second column to join on
+        if rec_join_column.to_s.include?("__")
+          ## qualified column name in old versions of sequel.
+          check_qual_column(rec_join_column, rec_all_joined)
+        else
+          raise RDL::Typecheck::StaticTypeError, "No column #{rec_join_column} for receiver in call to `join`." if join_source_schema[rec_join_column.val].nil?
+        end
+      when RDL::Type::GenericType
+      ## given qualified column, e.g. Sequel[:people][:name]
+        raise RDL::Typecheck::StaticTypeError, "unexpected generic type #{rec_join_column}" unless rec_join_column.base.name == "SeqQualIdent"
+        qual_table, qual_column = rec_join_column.params.map { |t| t.val }
+        raise RDL::Typecheck::StaticTypeError, "qualified table #{qual_table} is not joined in receiver table, and so its columns cannot be joined on" unless rec_all_joined.include?(qual_table)
+        qual_table_schema = get_schema(RDL::Globals.db_schema[qual_table].elts)
+        raise RDL::Typecheck::StaticTypeError, "No column #{qual_column} in table #{qual_table}." if qual_table_schema[qual_column].nil?
+      else
+        raise "Unexpected column #{rec_join_column} to join on"
+      end
+      case targ1
+      when RDL::Type::SingletonType
+        raise RDL::Typecheck::StaticTypeError, "Expected Symbol for first argument to `join`." unless targ1.val.is_a?(Symbol)
+        table_name = targ1.val
+        table_schema = RDL::Globals.db_schema[table_name]
+        raise "No schema found for table #{table_name}." unless table_schema
+        arg_schema = get_schema(table_schema.elts)  ## look up table schema for argument
+        raise RDL::Typecheck::StaticTypeError, "No column #{arg_join_column} for arg in call to `join`." if arg_schema[arg_join_column].nil?
+        result_schema = receiver_schema.merge(arg_schema)  ## resulting schema as hash
+        result_schema[:__all_joined] = RDL::Type::UnionType.new(*[receiver_param[:__all_joined], targ1])
+        result_schema[:__last_joined] = targ1
+        result_schema[:__selected] = receiver_param[:__selected]
+        result_schema[:__orm] = receiver_param[:__orm]
+        result_fht = RDL::Type::FiniteHashType.new(result_schema, nil) ## resulting schema as FiniteHashType
+
+        return RDL::Type::GenericType.new(trec.base, result_fht) 
+      when RDL::Type::NominalType
+      ## TODO: this will catch case that first argument is a non-singleton Symbol
+        raise "not implemented, likely not needed in practice"
+      else
+        raise RDL::Typecheck::StaticTypeError, "Unexpected type of first argument to `join`."
+      end
+    when RDL::Type::NominalType
+      raise RDL::Typecheck::StaticTypeError unless trec.name == "Table"
+      ## TODO
+    else
+      raise RDL::Typecheck::StaticTypeError, "Unexpected receiver type in call to `join`."
+    end
+  end
+
+
+  
+  type :insert, "(``insert_arg_type(trec, targs)``) -> Integer", wrap: false
+  type :insert, "(``insert_arg_type(trec, targs, true)``, %any) -> Integer", wrap: false
+  type :where, "(``where_arg_type(trec, targs)``) -> self", wrap: false
+  type :where, "(``where_arg_type(trec, targs, true)``, %any) -> self", wrap: false
+  type :exclude, "(``where_arg_type(trec, targs)``) -> self", wrap: false
+  type :exclude, "(``where_arg_type(trec, targs, true)``, %any) -> self", wrap: false
+  type :[], "(``where_arg_type(trec, targs)``) -> ``first_output(trec)``", wrap: false
+  type :first, "() -> ``first_output(trec)``", wrap: false
+  type :first, "(``if targs[0] then where_arg_type(trec, targs) else RDL::Globals.types[:bot] end``) -> ``first_output(trec)``", wrap: false
+  type :get, '(``get_input(trec)``) -> ``get_output(trec, targs)``', wrap: false
+  type :select_map, '(Symbol) -> ``select_map_output(trec, targs, :select_map)``', wrap: false
+  type :pluck, '(Symbol) -> ``select_map_output(trec, targs, :select_map)``', wrap: false
+  type :any?, "() -> %bool", wrap: false
+  type :select, "(*%any) -> ``select_map_output(trec, targs, :select)``", wrap: false
+  type :all, "() -> ``all_output(trec)``", wrap: false
+  type Sequel, 'self.lit', "(%any) -> String", wrap: false
+  type :server, "(Symbol) -> self", wrap: false
+  type :empty?, '() -> %bool', wrap: false
+  type :update, "(``insert_arg_type(trec, targs)``) -> Integer", wrap: false
+  type :count, "() -> Integer", wrap: false
+  type :map, "() { (``map_block_input(trec)``) -> x } -> Array<x>", wrap: false
+  type :each, "() { (``map_block_input(trec)``) -> x } -> self", wrap: false
+  type :import, "(``import_arg_type(trec, targs)``, Array<u>) -> Array<String>", wrap: false
+
+  def self.map_block_input(trec)
+    schema = get_schema(trec.params[0].elts)
+    RDL::Type::FiniteHashType.new(schema, nil)
+  end
+  
+  def self.all_output(trec)
+    f = first_output(trec)
+    if f.is_a?(RDL::Type::FiniteHashType)
+      selected = trec.params[0].elts[:__selected]
+      all_joined = get_all_joined(trec.params[0].elts[:__all_joined])
+      if selected != RDL::Globals.types[:nil]
+        ## something is selected
+        #raise "unexpected selected type #{sel}" unless sel.is_a?(RDL::Type::SingletonType) && sel.val.is_a?(Symbol)
+        if selected.is_a?(RDL::Type::UnionType) then sel_arr = selected.types else sel_arr = [selected] end
+        new_hash = {}
+        sel_arr.each { |sel|
+          if sel.val.to_s.include?("__")
+            t = check_qual_column(sel.val, all_joined)
+            _, col_name = sel.val.to_s.split "__"
+            col_name = col_name.to_sym
+            new_hash[col_name] = t
+          else
+            raise "no selected column found" unless (t = f.elts[sel.val])
+            new_hash[sel.val] = t
+          end
+        }
+        new_hash_type = RDL::Type::FiniteHashType.new(new_hash, nil)
+        return RDL::Type::GenericType.new(RDL::Globals.types[:array], new_hash_type)
+      else
+        return RDL::Type::GenericType.new(RDL::Globals.types[:array], f)
+      end
+    else
+      return RDL::Type::GenericType.new(RDL::Globals.types[:array], f)
+    end
+  end
+
+  def self.select_map_output(trec, targs, meth)
+    case trec
+    when RDL::Type::GenericType
+      raise RDL::Typecheck::StaticTypeError, 'unexpected type' unless trec.base.name == "Table"
+      receiver_param = trec.params[0].elts
+      all_joined = get_all_joined(receiver_param[:__all_joined])
+      map_types = []
+      targs.each { |arg|       
+        case arg
+        when RDL::Type::SingletonType
+          column = arg.val
+          raise "unexpected arg type #{arg}" unless column.is_a?(Symbol)
+          raise "Ambiguous column identifier #{arg}." unless unique_ids?([column], receiver_param[:__all_joined])
+          if column.to_s.include?("__")
+            check_qual_column(column, all_joined)
+            map_types << check_qual_column(column, all_joined)
+          else
+            raise "No column #{column} in receiver table." unless receiver_param[column]
+            map_types << receiver_param[column]
+          end
+        else
+          raise 'unexpected arg type #{arg}'
+        end
+      }
+      if meth == :select
+        result_schema = receiver_param.clone
+        result_schema[:__selected] = RDL::Type::UnionType.new(*targs).canonical
+        return RDL::Type::GenericType.new(trec.base, RDL::Type::FiniteHashType.new(result_schema, nil))
+      elsif meth == :select_map
+        if targs.size >1
+          return RDL::Type::GenericType.new(RDL::Globals.types[:array], RDL::Type::TupleType.new(*map_types))
+        else
+          return RDL::Type::GenericType.new(RDL::Globals.types[:array], map_types[0])
+        end
+      else
+        raise 'unexpected'
+      end
+    else
+      raise 'unexpected type #{trec}'
+    end
+  end
+
+  def self.get_input(trec)
+    case trec
+    when RDL::Type::GenericType
+      sym_keys = get_schema(trec.params[0].elts.keys)
+      RDL::Type::UnionType.new(sym_keys.map { |k| RDL::Type::SingletonType.new(k) })
+    else
+      raise 'unexpected type #{trec}'
+    end
+  end
+
+  def self.get_output(trec, targs)
+    trec.params[0].elts[targs[0].val]
+  end
+
+  def self.first_output(trec)
+    case trec
+    when RDL::Type::GenericType
+      raise RDL::Typecheck::StaticTypeError, 'unexpected type' unless trec.base.name == "Table"
+      receiver_param = trec.params[0].elts
+      if !(receiver_param[:__orm] == RDL::Globals.types[:false])
+        receiver_param[:__orm]
+      else
+        RDL::Type::FiniteHashType.new(get_schema(receiver_param), nil)
+      end
+    else
+      raise 'unexpected type #{trec}'
+    end
+  end
+
+  def self.insert_arg_type(trec, targs, tuple=false)
+    raise "Cannot insert/update for joined table." if trec.params[0].elts[:__all_joined].is_a?(RDL::Type::UnionType)
+    if tuple
+      schema_arg_tuple_type(trec, targs, :insert)
+    else
+      schema_arg_type(trec, targs, :insert)
+    end
+  end
+
+  def self.import_arg_type(trec, targs)
+    raise "Cannot import for joined table." if trec.params[0].elts[:__all_joined].is_a?(RDL::Type::UnionType)
+    raise "Expected tuple for first arg to `import`, got #{targs[0]} instead." unless targs[0].is_a?(RDL::Type::TupleType)
+    case targs[1]
+    when RDL::Type::TupleType
+      targs[1].params.each { |t| schema_arg_tuple_type(trec, [targs[0], t], :import) } ## check each individual tuple inside second arg tuple
+    when RDL::Type::GenericType
+      raise "expected Array, got #{targs[1]}" unless (targs[1].base == RDL::Globals.types[:array])
+      raise "`import` type not yet implemented for type #{targs[1]}" unless targs[1].params[0].is_a?(RDL::Type::TupleType)
+      schema_arg_tuple_type(trec, [targs[0], targs[1].params[0]], :import)
+    else
+      raise "Not yet implemented for type #{targs[1]}."
+    end
+    return targs[0]
+  end
+
+  def self.get_nominal_where_type(type)
+    ## `where` can accept arrays/tuples and tables with a single column selected
+    ## this method just extracts the parameter type
+    if type.is_a?(RDL::Type::GenericType) && (type.base == RDL::Globals.types[:array])
+      type.params[0]
+    elsif type.is_a?(RDL::Type::GenericType) && (type.base == RDL::Type::NominalType.new(Table))
+      schema = type.params[0].elts
+      sel = schema[:__selected]
+      raise "Call to where expects table with a single column selected, got #{type}" unless sel.is_a?(RDL::Type::SingletonType)
+      nominal = schema[sel.val]
+      raise "No type found for column #{sel} in call to `where`." unless nominal
+      nominal
+    elsif type.is_a?(RDL::Type::TupleType)
+      type = type.promote.params[0]
+      raise "`where` passed tuple containing different types." if type.is_a?(RDL::Type::UnionType)
+      type
+    else
+      type
+    end
+  end
+
+  def self.schema_arg_type(trec, targs, meth)
+    return RDL::Type::NominalType.new(Hash) if targs.size != 1
+    case trec
+    when RDL::Type::GenericType
+      raise RDL::Typecheck::StaticTypeError, 'unexpected type' unless trec.base.name == "Table"
+      receiver_param = trec.params[0].elts
+      receiver_schema = get_schema(receiver_param)
+      all_joined = get_all_joined(receiver_param[:__all_joined])
+      case targs[0]
+      when RDL::Type::FiniteHashType
+        insert_hash = targs[0].elts
+        insert_hash.each { |column_name, type|
+          if column_name.to_s.include?("__") && (meth == :where)
+            check_qual_column(column_name, all_joined, type)
+          else
+            raise RDL::Typecheck::StaticTypeError, "No column #{column_name} for receiver #{trec}." unless receiver_schema.has_key?(column_name)
+            type = get_nominal_where_type(type) if (meth == :where)
+            raise RDL::Typecheck::StaticTypeError, "Incompatible column types #{type} and #{receiver_schema[column_name]} for column #{column_name} in call to #{meth}." unless RDL::Type::Type.leq(type, receiver_schema[column_name])
+          end
+        }
+        return targs[0]
+      else
+        return targs[0] if (meth==:where) && targs[0] == RDL::Globals.types[:string]
+        raise "TODO WITH #{trec} AND #{targs} AND #{meth}"
+      end
+    when RDL::Type::NominalType
+    ##TODO 
+    else
+
+    end
+  end
+
+  ## [+ column_name +] if a symbol of the qualified column name, e.g. :person__age
+  ## [+ all_joined +] is an array of symbols of joined tables (must check if qualifying table is a member)
+  ## [+ type +] is optional RDL type. If given, we check that it matches the type of the column in the schema.
+  ## returns type of given column
+  def self.check_qual_column(column_name, all_joined, type=nil)
+    qual_table, qual_column = column_name.to_s.split "__"
+    qual_table = if qual_table.start_with?(":") then qual_table[1..-1].to_sym else qual_table.to_sym end
+    qual_column = qual_column.to_sym
+    raise RDL::Typecheck::StaticTypeError, "qualified table #{qual_table} is not joined in receiver table, cannot reference its columns" unless all_joined.include?(qual_table)
+    qual_table_schema = get_schema(RDL::Globals.db_schema[qual_table].elts)
+    raise RDL::Typecheck::StaticTypeError, "No column #{qual_column} in table #{qual_table}." if qual_table_schema[qual_column].nil?
+    if type
+      type = type.params[0] if type.is_a?(RDL::Type::GenericType) && (type.base == RDL::Globals.types[:array]) ## only happens if meth is where, don't need to check
+      raise RDL::Typecheck::StaticTypeError, "Incompatible column types. Given #{type} but expected #{qual_table_schema[qual_column]} for column #{column_name}." unless RDL::Type::Type.leq(type, qual_table_schema[qual_column])
+    end
+    return qual_table_schema[qual_column]
+  end
+
+  def self.schema_arg_tuple_type(trec, targs, meth)
+    return RDL::Type::NominalType.new(Array) if targs.size != 2
+    case trec
+    when RDL::Type::GenericType
+      raise RDL::Typecheck::StaticTypeError, 'unexpected type' unless trec.base.name == "Table"
+      receiver_param = trec.params[0].elts
+      all_joined = receiver_param[:__all_joined]
+      receiver_schema = get_schema(receiver_param)
+      if targs[0].is_a?(RDL::Type::TupleType) && targs[1].is_a?(RDL::Type::TupleType)
+        targs[0].params.each_with_index { |column_name, i|
+          raise "Expected singleton symbol in call to insert, got #{column_name}" unless column_name.is_a?(RDL::Type::SingletonType) && column_name.val.is_a?(Symbol)          
+          type = targs[1].params[i]
+          if column_name.val.to_s.include?("__") && (meth == :where)
+            check_qual_column(column_name.val, all_joined, type)
+          else
+            raise RDL::Typecheck::StaticTypeError, "No column #{column_name} for receiver in call to `insert`." unless receiver_schema.has_key?(column_name.val)
+            type = get_nominal_where_type(type) if (meth == :where)
+            raise RDL::Typecheck::StaticTypeError, "Incompatible column types." unless RDL::Type::Type.leq(type, receiver_schema[column_name.val])
+          end
+        }
+        return targs[0]
+      else
+        raise "not yet implemented for types #{targs[0]} and #{targs[1]}"
+      end
+    else
+      raise 'not yet implemented'
+    end
+  end
+
+  def self.where_arg_type(trec, targs, tuple=false)
+    if trec.params[0].elts[:__all_joined].is_a?(RDL::Type::UnionType)
+      case targs[0]
+      when RDL::Type::TupleType
+        raise "Unexpected column type." unless targs[0].params.all? { |t| t.is_a?(RDL::Type::SingletonType) && t.val.is_a?(Symbol) }
+        raise "Ambigious identifier in call to where." unless unique_ids?(targs[0].params.map { |t| t.val }, trec.params[0].elts[:__all_joined])
+      when RDL::Type::FiniteHashType
+        raise "Ambigious identifier in call to where." unless unique_ids?(targs[0].elts.keys, trec.params[0].elts[:__all_joined])
+      else
+        raise "unexpected arg type #{targs[0]}"
+      end
+    end
+    if tuple
+      schema_arg_tuple_type(trec, targs, :where)
+    else
+      schema_arg_type(trec, targs, :where)
+    end
+  end
+  
+  def self.unique_ids?(ids, joined)
+    joined = get_all_joined(joined)
+    count = {}
+    ids.each { |id| count[id] = 0 }
+    joined.each { |t|
+      schema = RDL::Globals.db_schema[t]
+      raise "schema not found" unless schema
+      schema = get_schema(schema.elts)
+      ids.each { |id|
+        count[id] = count[id] + 1 if schema.has_key?(id)
+        return false if count[id] > 1
+      }
+    }
+    return true
+  end
+
+end
diff --git a/orm.rb b/orm.rb
new file mode 100644
index 00000000000..719dffb1538
--- /dev/null
+++ b/orm.rb
@@ -0,0 +1,42 @@
+class Sequel::Model
+  extend RDL::Annotate
+
+  type 'self.join', "(Symbol, %any) -> ``Table.join_ret_type(table_type(trec), targs)``", wrap: false
+  type 'self.insert', "(``Table.insert_arg_type(table_type(trec), targs)``) -> Integer", wrap: false
+  type 'self.insert', "(``Table.insert_arg_type(table_type(trec), targs, true)``, %any) -> Integer", wrap: false
+  type 'self.where', "(``Table.where_arg_type(table_type(trec), targs)``) -> ``table_type(trec)``", wrap: false
+  type 'self.where', "(``Table.where_arg_type(table_type(trec), targs, true)``, %any) -> ``table_type(trec)``", wrap: false
+  type 'self.first', "() -> ``sing_to_nominal(trec)``", wrap: false
+  type 'self.get', "(``Table.get_input(table_type(trec))``) -> ``Table.get_output(table_type(trec), targs[0])``", wrap: false
+  type 'self.select_map', "(Symbol) -> ``select_map_output(table_type(trec), targs, :select_map)``", wrap: false
+
+
+  def self.sing_to_nominal(trec)
+    case trec
+    when RDL::Type::SingletonType
+      raise "unexpected receiver type" unless trec.val.is_a?(Class)
+      RDL::Type::NominalType.new(trec.val)
+    else
+      raise "unexpected type #{trec}"
+    end
+  end
+  
+  def self.table_type(trec)
+    case trec
+    when RDL::Type::SingletonType
+      raise "unexpected receiver type" unless trec.val.is_a?(Class)
+      table_name = trec.val.table_name
+      raise "no schema found" unless table_schema = RDL::Globals.db_schema[table_name]
+      ## map trec to Table type with relevant parameters
+      new_schema = table_schema.elts.clone
+      new_schema[:__last_joined] = new_schema[:__all_joined] = RDL::Type::SingletonType.new table_name
+      new_schema[:__selected] = RDL::Globals.types[:nil]
+      new_schema[:__orm] = RDL::Type::NominalType.new(trec.val) ## for some methods, need to know if base was Model class or dataset
+      hash_type = RDL::Type::FiniteHashType.new(new_schema, nil)
+      table_type = RDL::Type::GenericType.new(RDL::Type::NominalType.new(Table), hash_type)
+    else
+      raise "unexpected receiver type"
+    end
+  end
+  
+end
diff --git a/pegasus/helpers/form_helpers.rb b/pegasus/helpers/form_helpers.rb
index d0946982977..9cbde924964 100644
--- a/pegasus/helpers/form_helpers.rb
+++ b/pegasus/helpers/form_helpers.rb
@@ -5,6 +5,7 @@ require lib_dir 'utf8mb4_extensions'
 
 include PegasusFormValidation
 
+
 # Deletes a form from the DB and from SOLR.
 # @param [String] kind The kind of form to delete.
 # @param [String] secret The secret associated with the form to delete.
diff --git a/pegasus/helpers/section_api_helpers.rb b/pegasus/helpers/section_api_helpers.rb
index 7b61e51fa0e..92dbbba0627 100644
--- a/pegasus/helpers/section_api_helpers.rb
+++ b/pegasus/helpers/section_api_helpers.rb
@@ -107,7 +107,7 @@ class DashboardStudent
     allowed_rows.values
   end
 
-  def self.update_if_allowed(params, dashboard_user_id)
+  def self.update_if_allowed(dashboard_user_id, params)
     user_to_update = Dashboard.db[:users].where(id: params[:id], deleted_at: nil)
     return if user_to_update.empty?
     return if Dashboard.db[:sections].
@@ -293,7 +293,7 @@ class DashboardSection
   #   or scripts dashboard db tables.
   # @param hidden [Boolean] True if the passed in item is hidden
   # @return AssignableInfo
-  def self.assignable_info(course_or_script, hidden=false)
+  def self.assignable_info(hidden, course_or_script)
     info = ScriptConstants.assignable_info(course_or_script)
     info[:name] = I18n.t("#{info[:name]}_name", default: info[:name])
     info[:name] += " *" if hidden
@@ -341,7 +341,7 @@ class DashboardSection
         where(where_clause).
         select(:id, :name, :hidden).
         all.
-        map {|script| assignable_info(script, script[:hidden])}
+        map {|script| assignable_info(script[:hidden], script)}
     @@script_cache[script_cache_key] = scripts unless rack_env?(:levelbuilder)
     scripts
   end
@@ -394,7 +394,7 @@ class DashboardSection
       all.
       # Only return courses we've whitelisted in ScriptConstants
       select {|course| ScriptConstants.script_in_category?(:full_course, course[:name])}.
-      map {|course| assignable_info(course)}
+      map {|course| assignable_info(false, course)}
     @@course_cache[course_cache_key] = courses unless rack_env?(:levelbuilder)
     courses
   end
@@ -459,13 +459,13 @@ class DashboardSection
       )
     rescue Sequel::UniqueConstraintViolation
       tries += 1
-      retry if tries < 3
+      RDL.type_cast("retry if tries < 3", "%bot", force: true)
       raise
     end
 
-    if params[:script] && valid_script_id?(params[:script][:id], params[:user][:id])
-      DashboardUserScript.assign_script_to_user(params[:script][:id].to_i, params[:user][:id])
-    end
+    #if params[:script] && valid_script_id?(params[:script][:id], params[:user][:id])
+    #  DashboardUserScript.assign_script_to_user(params[:script][:id].to_i, params[:user][:id])
+    #end
 
     row
   end
@@ -776,7 +776,7 @@ class DashboardUserScript
     all_existing = Dashboard.db[:user_scripts].where(user_id: user_ids, script_id: script_id)
     all_existing_user_ids = all_existing.map {|user_script| user_script[:user_id]}
 
-    missing_assigned_at = []
+    missing_assigned_at = RDL.type_cast([], 'Array<Integer>', force: true)
     all_existing.each do |existing|
       missing_assigned_at << existing[:id] unless existing[:assigned_at]
     end
diff --git a/pegasus/typecheck.rb b/pegasus/typecheck.rb
new file mode 100644
index 00000000000..a761f51960e
--- /dev/null
+++ b/pegasus/typecheck.rb
@@ -0,0 +1,6 @@
+puts "HIIIIIIIIIIIIIIIIIIIIIIIIIIIIII"
+
+puts PegasusFormValidation.class
+
+puts teaches_student?(1, 2) #Object.instance_method(:teaches_student?)
+
diff --git a/shared/middleware/helpers/auth_helpers.rb b/shared/middleware/helpers/auth_helpers.rb
index 22a2ddef896..20cc1fa0f5c 100644
--- a/shared/middleware/helpers/auth_helpers.rb
+++ b/shared/middleware/helpers/auth_helpers.rb
@@ -68,9 +68,10 @@ def owns_section?(section_id)
   DASHBOARD_DB[:sections].where(id: section_id, user_id: current_user_id).any?
 end
 
+
 # @param [Integer] student_id
 # @returns [Boolean] true iff the current user, or given user, is the teacher for the student of the given id
-def teaches_student?(student_id, user_id = current_user_id)
+def teaches_student?(student_id, user_id = RDL.type_cast(current_user_id, "Integer", force: true))
   return false unless student_id && user_id
   DASHBOARD_DB[:sections].
       join(:followers, section_id: :sections__id).
diff --git a/shared/middleware/helpers/storage_apps.rb b/shared/middleware/helpers/storage_apps.rb
index 575c29c624e..eeafb3d9a12 100644
--- a/shared/middleware/helpers/storage_apps.rb
+++ b/shared/middleware/helpers/storage_apps.rb
@@ -27,7 +27,7 @@ class StorageApps
       published_at: published_at,
       remix_parent_id: remix_parent_id,
     }
-    row[:id] = @table.insert(row)
+    row[:id] = @table.insert(RDL.type_cast(:row, "{id: Integer, storage_id: Integer, value: String, created_at: DateTime, updated_at: DateTime, updated_ip: String, abuse_score: Integer, project_type: String, published_at: DateTime, remix_parent_id: Integer }", force: true))
 
     storage_encrypt_channel_id(row[:storage_id], row[:id])
   end
@@ -93,7 +93,7 @@ class StorageApps
     raise NotFound, "channel `#{channel_id}` not found" if update_count == 0
 
     project = @table.where(id: id).first
-    StorageApps.get_published_project_data(project, channel_id).merge(
+    StorageApps.get_published_project_data(channel_id, project).merge(
       # For privacy reasons, include only the first initial of the student's name.
       studentName: user && UserHelpers.initial(user[:name]),
       studentAgeRange: user && UserHelpers.age_range_from_birthday(user[:birthday]),
@@ -101,7 +101,7 @@ class StorageApps
   end
 
   # extracts published project data from a project (aka storage_apps table row).
-  def self.get_published_project_data(project, channel_id)
+  def self.get_published_project_data(channel_id, project)
     project_value = JSON.parse(project[:value])
     {
       channel: channel_id,
diff --git a/typecheck.rb b/typecheck.rb
new file mode 100644
index 00000000000..a0b65ae1318
--- /dev/null
+++ b/typecheck.rb
@@ -0,0 +1,216 @@
+require_relative 'db_types'
+require_relative 'orm'
+require_relative './shared/middleware/helpers/auth_helpers.rb'
+require 'date'
+#require 'rdl'
+#require 'types/core'
+#DASHBOARD_DB[:users].insert(id: 1)
+#test = current_user
+#puts "HERE WE GOT #{test}"
+
+RDL.nowrap ActiveRecord::Associations::ClassMethods
+
+class AddLoginTypeToSections < ActiveRecord::Migration[4.2]
+=begin
+  def add_lt
+    #add_column :sections, :login_type, :string
+    add_column :sections, :course_id, :integer
+  end
+  self.new.add_lt
+=end
+end
+
+module RDL::Globals
+  # Map from table names (symbols) to their schema types, which should be a Table type
+  @db_schema = {}
+end
+
+class << RDL::Globals
+  attr_accessor :db_schema
+end
+
+RDL::Globals.info.info['ActiveRecord::Associations::ClassMethods'] = nil
+
+puts "GOT HERE"
+
+
+Rails.application.eager_load!
+=begin
+MODELS = ActiveRecord::Base.descendants.each { |m|
+  begin
+    m.send(:load_schema) unless m.abstract_class?
+    RDL.nowrap model
+    puts "WOOOOOOOO #{m} DID WORK"
+  rescue
+    puts "#{m} didn't work"
+  end }
+=end
+
+#puts DASHBOARD_DB.tables
+
+#puts PEGASUS_DB.tables
+
+#puts DB == PEGASUS_DB
+
+
+def gen_schema(db)
+  db.tables.each { |table|
+    hash_str = "{ "
+    kl_name = table.to_s.camelize.singularize
+    db.schema(table).each { |col|
+      hash_str << "#{col[0]}: "
+      typ = col[1][:type].to_s.camelize
+      if typ == "Datetime"
+        typ = "DateTime or Time" ## Sequel accepts both
+      elsif typ == "Boolean"
+        typ = "%bool"
+      elsif typ == "Text"
+        typ = "String"
+      end
+      hash_str << "#{typ},"
+      RDL.type kl_name, col[0], "() -> #{typ}", wrap: false
+      RDL.type kl_name, "#{col[0]}=", "(#{typ}) -> #{typ}", wrap: false
+    }
+    hash_str.chomp!(",") << " }"
+    RDL::Globals.db_schema[table] = RDL::Globals.parser.scan_str "#T #{hash_str}"
+  }
+end
+
+gen_schema(DASHBOARD_DB)
+gen_schema(PEGASUS_DB)
+
+def fht(trec)
+  case trec
+  when RDL::Type::FiniteHashType
+    trec
+  else
+    puts "GOT #{trec}"
+    RDL::Globals.types[:bot]
+  end
+end
+
+
+fetch_if_allowed_output = "{ id: Integer, email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: DateTime or Time, remember_created_at: DateTime or Time, sign_in_count: Integer, current_sign_in_at: DateTime or Time, last_sign_in_at: DateTime or Time, current_sign_in_ip: String, last_sign_in_ip: String, created_at: DateTime or Time, updated_at: DateTime or Time, username: String, provider: String, uid: String, admin: false or true, gender: String, name: String, language: String, birthday: Date, parent_email: String, deleted_at: DateTime or Time, hashed_email: String, properties: String, user_type: String, school: String, full_address: String, address: String, city: String, state: String, zip: String, lat: Float, lon: Float, total_lines: Integer, secret_words: String, secret_picture_id: Integer, secret_word_1_id: Integer, secret_word_2_id: Integer, path: String, age: String or Integer }"
+
+user_record = "{ id: Integer, email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: DateTime or Time, remember_created_at: DateTime or Time, sign_in_count: Integer, current_sign_in_at: DateTime or Time, last_sign_in_at: DateTime or Time, current_sign_in_ip: String, last_sign_in_ip: String, created_at: DateTime or Time, updated_at: DateTime or Time, username: String, provider: String, uid: String, admin: false or true, gender: String, name: String, language: String, birthday: Date, parent_email: String, deleted_at: DateTime or Time, hashed_email: String, properties: String, user_type: String, school: String, full_address: String, address: String, city: String, state: String, zip: String, lat: Float, lon: Float, total_lines: Integer, secret_words: String, secret_picture_id: Integer, secret_word_1_id: Integer, secret_word_2_id: Integer }"
+
+section_record = "{ id: Integer, user_id: Integer, name: String, created_at: Time or DateTime, updated_at: Time or DateTime, code: String, deleted_at: Time or DateTime, login_type: String, script_id: Integer, login_method: Integer, grade: String, admin_code: String, stage_extras: false or true, pairing_allowed: false or true, hidden: false or true, course_id: Integer, sharing_disabled: false or true, student_user_id: Integer, section_id: Integer, email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: Time or DateTime, remember_created_at: Time or DateTime, sign_in_count: Integer, current_sign_in_at: Time or DateTime, last_sign_in_at: Time or DateTime, current_sign_in_ip: String, last_sign_in_ip: String, username: String, provider: String, uid: String, admin: false or true, gender: String, language: String, birthday: Date, parent_email: String, hashed_email: String, properties: String, user_type: String, school: String, full_address: String, address: String, city: String, state: String, zip: String, lat: Float, lon: Float, total_lines: Integer, secret_words: String, secret_picture_id: Integer, secret_word_1_id: Integer, secret_word_2_id: Integer }"
+
+student_record = "{ name: String, age: Integer, gender: String, birthday: Date, sharing_disabled: %bool, id: Integer, admin: %bool }"
+
+script_record = "{ id: Integer, name: String, created_at: Time or DateTime, updated_at: Time or DateTime, wrapup_video_id: Integer, hidden: %bool, trophies: %bool }"
+
+storage_apps_record = "{ id: Integer, storage_id: Integer, value: String, updated_at: Time or DateTime, updated_ip: String, state: String, created_at: Time or DateTime, abuse_score: Integer, project_type: String, published_at: Time or DateTime, standalone: false or true, remix_parent_id: Integer }"
+
+### non-type checked methods
+RDL.type Dashboard, 'self.db', '() -> Sequel::Mysql2::Database', wrap: false
+RDL.type Dashboard::User, 'initialize', '(``fht(targs[0])``) -> self', wrap: false
+RDL.type Dashboard::User, :id, '() -> Integer', wrap: false
+RDL.type Dashboard::User, :teacher?, "() -> %bool", wrap: false
+RDL.type Object, :current_user_id, '() -> Integer', wrap: false
+RDL.var_type Object, :@user_permissions, "Array<String>"
+RDL.var_type Object, :@dashboard_user, "#{user_record}"
+RDL.type Object, :tap, "() { (self) -> x } -> self"
+RDL.type Object, :nil_or_empty?, "() -> %bool", wrap: false
+RDL.type DashboardStudent, 'self.encrypt_password', "(String) -> String", wrap: false
+RDL.type DashboardStudent, 'self.valid_gender?', "(String) -> %bool", wrap: false
+RDL.type DashboardStudent, 'self.birthday_to_age', "(Date) -> Integer or String", wrap: false
+RDL.type DashboardStudent, 'self.age_to_birthday', "(Integer or String) -> Date", wrap: false
+RDL.type SecureRandom, 'self.random_number', "(Integer) -> Integer", wrap: false
+RDL.type DashboardStudent, 'self.random_secret_words', "() -> String", wrap: false
+RDL.type DashboardSection, 'self.valid_login_type?', "(String) -> %bool", wrap: false
+RDL.type DashboardSection, 'self.valid_grade?', "(String) -> %bool", wrap: false
+RDL.type DashboardSection, 'self.valid_course_id?', "(Integer) -> %bool", wrap: false
+RDL.type DashboardSection, 'self.valid_script_id?', "(Integer, ?Integer) -> %bool", wrap: false
+## I'm not sure how to have VarArg types for different kinds of Arrays. So in the meantime the below hack, which handles a specific number of args, will have to do.
+RDL.type :Array, :zip, '(Array<u>, Array<v>, Array<w>, Array<x>) -> ``param = promoted_or_t(trec); RDL::Type::GenericType.new(RDL::Globals.types[:array], RDL::Type::TupleType.new(param, RDL::Globals.parser.scan_str("#T u"), RDL::Globals.parser.scan_str("#T v"), RDL::Globals.parser.scan_str("#T w"), RDL::Globals.parser.scan_str("#T x")))``', wrap: false
+RDL.type DashboardSection, :to_member_hash, "() -> { id: Integer, location: String, name: String, login_type: String, grade: String, code: String, stage_extras: %bool, pairing_allowed: %bool, hidden: %bool }", wrap: false
+RDL.type DashboardSection, :to_owner_hash, "() -> { id: Integer, location: String, name: String, login_type: String, grade: String, code: String, stage_extras: %bool, pairing_allowed: %bool, hidden: %bool, script: { id: Integer }, teachers: { id: Integer, location: String }, students: {}, studentCount: Integer }", wrap: false ## can get more precise
+RDL.type DashboardSection, :initialize, "(%any) -> self", wrap: false
+RDL.type Hash, :to_json, "() -> String", wrap: false
+RDL.type UserHelpers, 'self.generate_username', "(%any, String) -> String", wrap: false ## can make more precise
+RDL.var_type DashboardSection, :@row, section_record
+RDL.type Object, :blank?, '() -> %bool', wrap: false
+RDL.var_type DashboardCourseExperiments, :@@course_experiments, "Array<String>"
+RDL.var_type DashboardCourseExperiments, :@@course_experiment_map, "%any"
+RDL.var_type DashboardCourseExperiments, :@@course_experiment_map_last_update, "Integer or Time"
+RDL.type Time, :+, "(Integer or Time) -> Time", wrap: false
+RDL.type Time, :>, "(Time or Integer) -> %bool", wrap: false ## Integer can be an argument under rails
+RDL.type CodeGeneration, 'self.random_unique_code', "({ length: Integer }) -> String", wrap: false
+RDL.var_type DashboardSection, :@students, "{ }"
+RDL.var_type DashboardSection, :@script, script_record
+RDL.type DashboardSection, :member?, "(Integer) -> %bool", wrap: false
+RDL.type I18n, 'self.locale', "() -> String", wrap: false
+RDL.var_type DashboardSection, :@@script_cache, "Hash<String, Array<{ id: Integer, name: String, category: String, script_name: String, position: String, category_priority: Integer }>>"
+RDL.type DashboardSection, 'self.assignable_info', "(%bool, { name: String, hidden: false or true, id: Integer }) -> { id: Integer, name: String, category: String, script_name: String, position: String, category_priority: Integer }" ### HAD TO SWITCH ARG PLACES HERE
+RDL.type Object, :rack_env?, "() -> Hash<Symbol, %bool>", wrap: false
+RDL.type Object, 'self.rack_env?', "(Symbol) -> %bool", wrap: false
+RDL.type Object, :get_sharing_disabled_from_properties, "(String) -> %bool", wrap: false
+RDL.var_type StorageApps, :@storage_id, "Integer"
+RDL.var_type StorageApps, :@table, "Table<#{storage_apps_record.chomp('}')}, __selected: nil, __last_joined: :storage_apps, __all_joined: :storage_apps, __orm: false}>"
+RDL.type Object, :storage_encrypt_channel_id, "(Integer, Integer) -> String", wrap: false
+RDL.type Object, :storage_decrypt_channel_id, "(Integer) -> [Integer, Integer]", wrap: false
+RDL.type String, :to_json, "() -> String", wrap: false
+RDL.type StorageApps, 'self.get_published_project_data', "(Integer, #{storage_apps_record}) -> {channel: Integer, name: String, thumbnailUrl: String, type: String, publishedAt: DateTime }", wrap: false ## HAD TO SWITCH ORDER OF ARGUMENTS
+RDL.type UserHelpers, 'self.initial', "(String) -> String", wrap: false
+RDL.type UserHelpers, 'self.age_range_from_birthday', "(DateTime) -> String", wrap: false
+RDL.type Object, :user_storage_ids_table, "() -> ``Sequel::Mysql2::Database.gen_output_type([RDL::Type::SingletonType.new(:user_storage_ids)])``", wrap: false
+RDL.type JSON, 'self.parse', "(String) -> Hash<String, %any>", wrap: false
+RDL.var_type Dashboard::User, :@row, user_record
+
+
+### type checked methods
+RDL.type Dashboard, 'self.admin?', '(Integer) -> %bool', typecheck: :later, wrap: true
+RDL.type Dashboard::User, 'self.get_with_deleted', '(Integer) -> Dashboard::User', typecheck: :later, wrap: false
+RDL.type Dashboard::User, 'self.get', '(Integer) -> Dashboard::User', typecheck: :later, wrap: false
+RDL.type Dashboard::User, :get_followed_bys, '(Array<Integer>) -> Array<Integer>', typecheck: :later, wrap: false
+RDL.type Dashboard::User, :followed_by?, '(Integer) -> %bool', typecheck: :later, wrap: false
+RDL.type Dashboard::User, :owned_sections, "() -> Array<{id: Integer}>", typecheck: :later, wrap: false
+RDL.type Dashboard::User, :admin?, "() -> %bool", wrap: false, typecheck: :later
+RDL.type Dashboard::User, :has_permission?, '(String) -> %bool', wrap: false, typecheck: :later
+RDL.type Object, :teaches_student?, "(Integer, ?Integer) -> %bool", typecheck: :later, wrap: false
+RDL.type Object, :owns_section?, "(Integer) -> %bool", typecheck: :later, wrap: false
+RDL.type Object, :has_permission?, "(String) -> %bool", typecheck: :later, wrap: false
+RDL.type Object, :current_user, "() -> #{user_record}", wrap: false, typecheck: :later ## this one had the annotation error
+RDL.type Object, :get_user_sharing_disabled, '(Integer) -> %bool', wrap: false, typecheck: :later
+RDL.type DashboardStudent, 'self.fetch_user_students', "(Integer) -> Array<{ gender: String, user_type: String, hashed_email: String, secret_words: String, total_lines: Integer, birthday: Date, email: String, username: String, name: String, id: Integer }>", typecheck: :later, wrap: false ## "returns all users"
+RDL.type DashboardStudent, 'self.fields', '() -> [:users__id___id,:users__name___name,:users__username___username,:users__email___email,:users__hashed_email___hashed_email,:users__user_type___user_type,:users__gender___gender,:users__birthday___birthday,:users__total_lines___total_lines,:users__secret_words___secret_words]', wrap: false, typecheck: :later
+RDL.type DashboardSection, 'self.fields', '() -> [:sections__id___id,:sections__name___name,:sections__code___code,:sections__stage_extras___stage_extras,:sections__pairing_allowed___pairing_allowed,:sections__login_type___login_type,:sections__sharing_disabled___sharing_disabled,:sections__hidden___hidden,:sections__grade___grade,:sections__script_id___script_id,:sections__course_id___course_id,:sections__user_id___teacher_id]', wrap: false, typecheck: :later
+RDL.type DashboardStudent, 'self.random_secrets', '() -> { secret_picture_id: Integer,secret_words: String }', wrap: false, typecheck: :later
+
+RDL.type DashboardStudent, 'self.fetch_if_allowed', "(Integer, Integer) -> #{fetch_if_allowed_output}", typecheck: :later, wrap: false
+## NOTE: I had to manually switch arg positions in "update_if_allowed" method because RDL doesn't allow FHT to appear as first arg.
+RDL.type DashboardStudent, 'self.random_secret_picture_id', "() -> Integer", wrap: false, typecheck: :later
+RDL.type DashboardStudent, 'self.update_if_allowed', "(Integer, { id: Integer, name: String, age: Integer, password: String, gender: String, secrets: String }) -> #{fetch_if_allowed_output}", typecheck: :later, wrap: false
+RDL.type DashboardSection, 'self.update_if_owner', "({ id : Integer, user: #{user_record}, name: String, login_type: String, stage_extras: %bool, hidden: %bool, course_id: Integer, script: {id: Integer }, grade: String, pairing_allowed: %bool }) -> DashboardSection", typecheck: :later, wrap: false
+RDL.type DashboardUserScript, 'self.assign_script_to_user', "(Integer, Integer) -> Integer", typecheck: :later, wrap: false
+RDL.type DashboardUserScript, 'self.assign_script_to_users', "(Integer, Array<Integer>) -> Array<String>", typecheck: :later, wrap: false
+RDL.type DashboardUserScript, 'self.assign_script_to_section', "(Integer, Integer) -> Array<String>", typecheck: :later, wrap: false
+RDL.type DashboardSection, 'self.fetch_student_sections', "(Integer) -> Array<{ id: Integer, location: String, name: String, login_type: String, grade: String, code: String, stage_extras: false or true, pairing_allowed: false or true, hidden: false or true }>", typecheck: :later, wrap: false
+RDL.type DashboardSection, 'self.fetch_user_sections', "(Integer) -> Array<{ id: Integer, location: String, name: String, login_type: String, grade: String, code: String, stage_extras: false or true, pairing_allowed: false or true, hidden: false or true, script: { id: Integer }, teachers: { id: Integer, location: String }, students: {}, studentCount: Integer }>", typecheck: :later, wrap: false
+RDL.type DashboardSection, :add_student, "(#{student_record}) -> Integer", typecheck: :later, wrap: false
+RDL.type DashboardSection, :add_students, "(Array<#{student_record}>) -> Array<Integer>", typecheck: :later, wrap: false
+RDL.type DashboardSection, :remove_student, "(Integer) -> %bool", typecheck: :later, wrap: false
+RDL.type DashboardStudent, 'self.create', "(#{student_record}) -> Integer", typecheck: :later, wrap: false
+RDL.type DashboardCourseExperiments, 'self.course_experiments', "() -> Array<String>", typecheck: :later, wrap: false
+RDL.type DashboardCourseExperiments, 'self.course_experiment_map', "() -> %any", typecheck: :later, wrap: false
+RDL.type DashboardSection, 'self.create', "({user: { user_type: String, id: Integer }, name: String, login_type: String, grade: String, script: {id: Integer}, script_id: Integer, course_id: Integer, stage_extras: %bool, pairing_allowed: %bool }) -> Integer", typecheck: :later, wrap: false
+RDL.type DashboardSection, 'self.delete_if_owner', "(Integer, Integer) -> { id: Integer, user_id: Integer, name: String, created_at: Time or DateTime, updated_at: Time or DateTime, code: String, deleted_at: Time or DateTime, login_type: String, script_id: Integer, login_method: Integer, grade: String, admin_code: String, stage_extras: false or true, pairing_allowed: false or true, hidden: false or true, course_id: Integer, sharing_disabled: false or true }", typecheck: :later, wrap: false
+RDL.type DashboardSection, 'self.fetch_if_teacher', "(Integer, Integer) -> DashboardSection", typecheck: :later, wrap: false
+#RDL.type DashboardSection, :students, "() -> {}", typecheck: :later, wrap: false ##TODO
+RDL.type DashboardSection, :script, "() -> #{script_record}", typecheck: :later, wrap: false
+RDL.type DashboardSection, 'self.fetch_if_allowed', "(Integer, Integer) -> DashboardSection", typecheck: :later, wrap: false
+RDL.type DashboardStudent, 'self.random_secret_word', "() -> String", typecheck: :later, wrap: false
+RDL.type DashboardSection, 'self.valid_default_scripts', "(Integer, %bool) -> {} or Array<{ id: Integer, name: String, category: String, script_name: String, position: String, category_priority: Integer }>", typecheck: :later, wrap: false ## TODO: FIGURE OUT IF USES OF THIS METHOD ARE OKAY
+RDL.type StorageApps, :users_paired_on_level?, "(Integer, Integer, Integer, Integer) -> %bool", typecheck: :later, wrap: false
+RDL.type StorageApps, :initialize, "(Integer) -> self", wrap: false, typecheck: :later
+RDL.type StorageApps, :create, "(String, ip: String, type: ?String, published_at: ?DateTime, remix_parent_id: ?Integer) -> String", wrap: false, typecheck: :later
+RDL.type StorageApps, :delete, "(Integer) -> true", wrap: false, typecheck: :later
+RDL.type StorageApps, :publish, "(Integer, String, { name: String, birthday: DateTime }) -> { channel: Integer, name: String, thumbnailUrl: String, type: String, publishedAt: DateTime, studentName: { name: String, birthday: DateTime } or String, studentAgeRange: { name: String, birthday: DateTime } or String }", wrap: false, typecheck: :later
+RDL.type StorageApps, :unpublish, "(Integer) -> Integer", wrap: false, typecheck: :later
+RDL.type StorageApps, :get_abuse, "(Integer) -> Integer", wrap: false, typecheck: :later
+RDL.type StorageApps, :get_sharing_disabled, "(Integer, Integer) -> %bool", wrap: false, typecheck: :later
+RDL.type StorageApps, :increment_abuse, "(Integer) -> Integer", wrap: false, typecheck: :later
+RDL.type StorageApps, :reset_abuse, "(Integer) -> Integer", wrap: false, typecheck: :later
+
+RDL.do_typecheck :later
