Difference encountered for Object#@dashboard_user.
Inferred: { id: Integer, studio_person_id: Integer, email: String, parent_email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), username: String, provider: String, uid: String, admin: (false or true), gender: String, name: String, locale: String, birthday: Date, user_type: String, school: String, full_address: String, school_info_id: Integer, total_lines: Integer, secret_picture_id: Integer, active: (false or true), hashed_email: String, deleted_at: (DateTime or Time), purged_at: (DateTime or Time), secret_words: String, properties: String, invitation_token: String, invitation_created_at: (DateTime or Time), invitation_sent_at: (DateTime or Time), invitation_accepted_at: (DateTime or Time), invitation_limit: Integer, invited_by_id: Integer, invited_by_type: String, invitations_count: Integer, terms_of_service_version: Integer, urm: (false or true), races: String, primary_contact_info_id: Integer }
Original: ({ id: Integer, email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), username: String, provider: String, uid: String, admin: (false or true), gender: String, name: String, language: String, birthday: Date, parent_email: String, deleted_at: (DateTime or Time), hashed_email: String, properties: String, user_type: String, school: String, full_address: String, address: String, city: String, state: String, zip: String, lat: Float, lon: Float, total_lines: Integer, secret_words: String, secret_picture_id: Integer, secret_word_1_id: Integer, secret_word_2_id: Integer } or { id: Integer, studio_person_id: Integer, email: String, parent_email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), username: String, provider: String, uid: String, admin: (false or true), gender: String, name: String, locale: String, birthday: Date, user_type: String, school: String, full_address: String, school_info_id: Integer, total_lines: Integer, secret_picture_id: Integer, active: (false or true), hashed_email: String, deleted_at: (DateTime or Time), purged_at: (DateTime or Time), secret_words: String, properties: String, invitation_token: String, invitation_created_at: (DateTime or Time), invitation_sent_at: (DateTime or Time), invitation_accepted_at: (DateTime or Time), invitation_limit: Integer, invited_by_id: Integer, invited_by_type: String, invitations_count: Integer, terms_of_service_version: Integer, urm: (false or true), races: String, primary_contact_info_id: Integer })
# 1
Difference encountered for DashboardSection#@row.
Inferred: ({ id: Integer, user_id: Integer, name: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), code: String, script_id: Integer, course_id: Integer, grade: String, login_type: String, deleted_at: (DateTime or Time), stage_extras: (false or true), section_type: String, first_activity_at: (DateTime or Time), pairing_allowed: (false or true), sharing_disabled: (false or true), hidden: (false or true) } or { id: Integer, user_id: Integer, name: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), code: String, script_id: Integer, course_id: Integer, grade: String, login_type: String, deleted_at: (DateTime or Time), stage_extras: (false or true), section_type: String, first_activity_at: (DateTime or Time), pairing_allowed: (false or true), sharing_disabled: (false or true), hidden: (false or true), student_user_id: Integer, section_id: Integer, studio_person_id: Integer, email: String, parent_email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, username: String, provider: String, uid: String, admin: (false or true), gender: String, locale: String, birthday: Date, user_type: String, school: String, full_address: String, school_info_id: Integer, total_lines: Integer, secret_picture_id: Integer, active: (false or true), hashed_email: String, purged_at: (DateTime or Time), secret_words: String, properties: String, invitation_token: String, invitation_created_at: (DateTime or Time), invitation_sent_at: (DateTime or Time), invitation_accepted_at: (DateTime or Time), invitation_limit: Integer, invited_by_id: Integer, invited_by_type: String, invitations_count: Integer, terms_of_service_version: Integer, urm: (false or true), races: String, primary_contact_info_id: Integer } or { id: Integer, user_id: Integer, name: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), code: String, script_id: Integer, course_id: Integer, grade: String, login_type: String, deleted_at: (DateTime or Time), stage_extras: (false or true), section_type: String, first_activity_at: (DateTime or Time), pairing_allowed: (false or true), sharing_disabled: (false or true), hidden: (false or true), studio_person_id: Integer, email: String, parent_email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, username: String, provider: String, uid: String, admin: (false or true), gender: String, locale: String, birthday: Date, user_type: String, school: String, full_address: String, school_info_id: Integer, total_lines: Integer, secret_picture_id: Integer, active: (false or true), hashed_email: String, purged_at: (DateTime or Time), secret_words: String, properties: String, invitation_token: String, invitation_created_at: (DateTime or Time), invitation_sent_at: (DateTime or Time), invitation_accepted_at: (DateTime or Time), invitation_limit: Integer, invited_by_id: Integer, invited_by_type: String, invitations_count: Integer, terms_of_service_version: Integer, urm: (false or true), races: String, primary_contact_info_id: Integer })
Original: { id: Integer, user_id: Integer, name: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), code: String, deleted_at: (DateTime or Time), login_type: String, script_id: Integer, login_method: Integer, grade: String, admin_code: String, stage_extras: (false or true), pairing_allowed: (false or true), hidden: (false or true), course_id: Integer, sharing_disabled: (false or true), student_user_id: Integer, section_id: Integer, email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, username: String, provider: String, uid: String, admin: (false or true), gender: String, language: String, birthday: Date, parent_email: String, hashed_email: String, properties: String, user_type: String, school: String, full_address: String, address: String, city: String, state: String, zip: String, lat: Float, lon: Float, total_lines: Integer, secret_words: String, secret_picture_id: Integer, secret_word_1_id: Integer, secret_word_2_id: Integer }
Difference encountered for DashboardCourseExperiments#@@course_experiment_map.
Inferred: Hash<Integer, Hash<String, true>>
Original: %any
# 2
Difference encountered for DashboardCourseExperiments#@@course_experiment_map_last_update.
Inferred: Time
Original: (Integer or Time)
# 3
Difference encountered for DashboardSection#@students.
Inferred: { DashboardSection# var: @students }
Original: {  }
Difference encountered for DashboardSection#@@script_cache.
Inferred: ([ []: (String) -> { { DashboardSection# var: @@script_cache }#[] ret: ret } ] and [ []=: (String, Array<{ [s]DashboardSection#assignable_info ret: ret }>) -> { { DashboardSection# var: @@script_cache }#[]= ret: ret } ] and [ key?: (String) -> { { DashboardSection# var: @@script_cache }#key? ret: ret } ])
Original: Hash<String, Array<{ id: Integer, name: String, category: String, script_name: String, position: Integer, category_priority: Integer }>>
Difference encountered for Dashboard::User#@row.
Inferred: { id: Integer, studio_person_id: Integer, email: String, parent_email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), username: String, provider: String, uid: String, admin: (false or true), gender: String, name: String, locale: String, birthday: Date, user_type: String, school: String, full_address: String, school_info_id: Integer, total_lines: Integer, secret_picture_id: Integer, active: (false or true), hashed_email: String, deleted_at: (DateTime or Time), purged_at: (DateTime or Time), secret_words: String, properties: String, invitation_token: String, invitation_created_at: (DateTime or Time), invitation_sent_at: (DateTime or Time), invitation_accepted_at: (DateTime or Time), invitation_limit: Integer, invited_by_id: Integer, invited_by_type: String, invitations_count: Integer, terms_of_service_version: Integer, urm: (false or true), races: String, primary_contact_info_id: Integer }
Original: ({ id: Integer, email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), username: String, provider: String, uid: String, admin: (false or true), gender: String, name: String, language: String, birthday: Date, parent_email: String, deleted_at: (DateTime or Time), hashed_email: String, properties: String, user_type: String, school: String, full_address: String, address: String, city: String, state: String, zip: String, lat: Float, lon: Float, total_lines: Integer, secret_words: String, secret_picture_id: Integer, secret_word_1_id: Integer, secret_word_2_id: Integer } or { id: Integer, studio_person_id: Integer, email: String, parent_email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), username: String, provider: String, uid: String, admin: (false or true), gender: String, name: String, locale: String, birthday: Date, user_type: String, school: String, full_address: String, school_info_id: Integer, total_lines: Integer, secret_picture_id: Integer, active: (false or true), hashed_email: String, deleted_at: (DateTime or Time), purged_at: (DateTime or Time), secret_words: String, properties: String, invitation_token: String, invitation_created_at: (DateTime or Time), invitation_sent_at: (DateTime or Time), invitation_accepted_at: (DateTime or Time), invitation_limit: Integer, invited_by_id: Integer, invited_by_type: String, invitations_count: Integer, terms_of_service_version: Integer, urm: (false or true), races: String, primary_contact_info_id: Integer })
# 4
Difference encountered for Dashboard::User#has_permission?.
Inferred: ((Array<String> or String)) -> (false or true)
Original: (String) -> (false or true)
# 5
Difference encountered for Object#has_permission?.
Inferred: ({ Object#has_permission? arg: permission }) -> (false or true)
Original: (String) -> (false or true)
# 6
Difference encountered for Object#current_user.
Inferred: () -> { id: Integer, studio_person_id: Integer, email: String, parent_email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), username: String, provider: String, uid: String, admin: (false or true), gender: String, name: String, locale: String, birthday: Date, user_type: String, school: String, full_address: String, school_info_id: Integer, total_lines: Integer, secret_picture_id: Integer, active: (false or true), hashed_email: String, deleted_at: (DateTime or Time), purged_at: (DateTime or Time), secret_words: String, properties: String, invitation_token: String, invitation_created_at: (DateTime or Time), invitation_sent_at: (DateTime or Time), invitation_accepted_at: (DateTime or Time), invitation_limit: Integer, invited_by_id: Integer, invited_by_type: String, invitations_count: Integer, terms_of_service_version: Integer, urm: (false or true), races: String, primary_contact_info_id: Integer }
Original: () -> User
# 7 ^^ this was the documentaiton error
Difference encountered for [s]DashboardStudent#fetch_user_students.
Inferred: (Integer) -> Array<{ id: Integer, user_id: Integer, name: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), code: String, script_id: Integer, course_id: Integer, grade: String, login_type: String, deleted_at: (DateTime or Time), stage_extras: (false or true), section_type: String, first_activity_at: (DateTime or Time), pairing_allowed: (false or true), sharing_disabled: (false or true), hidden: (false or true), student_user_id: Integer, section_id: Integer, studio_person_id: Integer, email: String, parent_email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, username: String, provider: String, uid: String, admin: (false or true), gender: String, locale: String, birthday: Date, user_type: String, school: String, full_address: String, school_info_id: Integer, total_lines: Integer, secret_picture_id: Integer, active: (false or true), hashed_email: String, purged_at: (DateTime or Time), secret_words: String, properties: String, invitation_token: String, invitation_created_at: (DateTime or Time), invitation_sent_at: (DateTime or Time), invitation_accepted_at: (DateTime or Time), invitation_limit: Integer, invited_by_id: Integer, invited_by_type: String, invitations_count: Integer, terms_of_service_version: Integer, urm: (false or true), races: String, primary_contact_info_id: Integer }>
Original: (Integer) -> Array<{ gender: String, user_type: String, hashed_email: String, secret_words: String, total_lines: Integer, birthday: Date, email: String, username: String, name: String, id: Integer }>
# 8
Difference encountered for [s]DashboardStudent#fields.
Inferred: () -> Array<(:users__birthday___birthday or :users__email___email or :users__gender___gender or :users__hashed_email___hashed_email or :users__id___id or :users__name___name or :users__secret_words___secret_words or :users__total_lines___total_lines or :users__user_type___user_type or :users__username___username)>
Original: () -> [:users__id___id, :users__name___name, :users__username___username, :users__email___email, :users__hashed_email___hashed_email, :users__user_type___user_type, :users__gender___gender, :users__birthday___birthday, :users__total_lines___total_lines, :users__secret_words___secret_words]
Difference encountered for [s]DashboardSection#fields.
Inferred: () -> Array<(:sections__code___code or :sections__course_id___course_id or :sections__grade___grade or :sections__hidden___hidden or :sections__id___id or :sections__login_type___login_type or :sections__name___name or :sections__pairing_allowed___pairing_allowed or :sections__script_id___script_id or :sections__sharing_disabled___sharing_disabled or :sections__stage_extras___stage_extras or :sections__user_id___teacher_id)>
Original: () -> [:sections__id___id, :sections__name___name, :sections__code___code, :sections__stage_extras___stage_extras, :sections__pairing_allowed___pairing_allowed, :sections__login_type___login_type, :sections__sharing_disabled___sharing_disabled, :sections__hidden___hidden, :sections__grade___grade, :sections__script_id___script_id, :sections__course_id___course_id, :sections__user_id___teacher_id]
Difference encountered for [s]DashboardStudent#random_secrets.
Inferred: () -> Hash<Symbol, ({ [s]DashboardStudent#random_secret_picture_id ret: ret } or { [s]DashboardStudent#random_secret_words ret: ret })>
Original: () -> { secret_picture_id: Integer, secret_words: String }
Difference encountered for [s]DashboardStudent#fetch_if_allowed.
Inferred: (Integer, Integer) -> { id: Integer, studio_person_id: Integer, email: String, parent_email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), username: String, provider: String, uid: String, admin: (false or true), gender: String, name: String, locale: String, birthday: Date, user_type: String, school: String, full_address: String, school_info_id: Integer, total_lines: Integer, secret_picture_id: Integer, active: (false or true), hashed_email: String, deleted_at: (DateTime or Time), purged_at: (DateTime or Time), secret_words: String, properties: String, invitation_token: String, invitation_created_at: (DateTime or Time), invitation_sent_at: (DateTime or Time), invitation_accepted_at: (DateTime or Time), invitation_limit: Integer, invited_by_id: Integer, invited_by_type: String, invitations_count: Integer, terms_of_service_version: Integer, urm: (false or true), races: String, primary_contact_info_id: Integer, path: String, age: { [s]DashboardStudent#birthday_to_age ret: ret } }
Original: (Integer, Integer) -> { id: Integer, studio_person_id: Integer, email: String, parent_email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), username: String, provider: String, uid: String, admin: (false or true), gender: String, name: String, locale: String, birthday: Date, user_type: String, school: String, full_address: String, school_info_id: Integer, total_lines: Integer, secret_picture_id: Integer, active: (false or true), hashed_email: String, deleted_at: (DateTime or Time), purged_at: (DateTime or Time), secret_words: String, properties: String, invitation_token: String, invitation_created_at: (DateTime or Time), invitation_sent_at: (DateTime or Time), invitation_accepted_at: (DateTime or Time), invitation_limit: Integer, invited_by_id: Integer, invited_by_type: String, invitations_count: Integer, terms_of_service_version: Integer, urm: (false or true), races: String, primary_contact_info_id: Integer, path: String, age: (Integer or String) }
# 11
Difference encountered for [s]DashboardStudent#random_secret_picture_id.
Inferred: () -> %any
Original: () -> Integer
Difference encountered for [s]DashboardStudent#update_if_allowed.
Inferred: (([ []: (:age) -> { { [s]DashboardStudent#update_if_allowed arg: params }#[] ret: ret } ] and [ []: (:name) -> { { [s]DashboardStudent#update_if_allowed arg: params }#[] ret: ret } ] and [ []: (:password) -> { { [s]DashboardStudent#update_if_allowed arg: params }#[] ret: ret } ] and [ []: (:secrets) -> { { [s]DashboardStudent#update_if_allowed arg: params }#[] ret: ret } ] and { id: (Array<Integer> or Integer), name: [ nil_or_empty?: () -> { { { [s]DashboardStudent#update_if_allowed arg: params }#[] ret: ret }#nil_or_empty? ret: ret } ], password: [ nil_or_empty?: () -> { { { [s]DashboardStudent#update_if_allowed arg: params }#[] ret: ret }#nil_or_empty? ret: ret } ], gender: { { [s]DashboardStudent#update_if_allowed arg: params }#[] ret: ret }, age: ([ *: (365) -> { { [s]DashboardStudent#age_to_birthday arg: age }#* ret: ret } ] and [ ==: (0) -> { { [s]DashboardStudent#age_to_birthday arg: age }#== ret: ret } ] and [ to_i: () -> Integer ]), secrets: [ to_s: () -> String ] }), Integer) -> { id: Integer, studio_person_id: Integer, email: String, parent_email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), username: String, provider: String, uid: String, admin: (false or true), gender: String, name: String, locale: String, birthday: Date, user_type: String, school: String, full_address: String, school_info_id: Integer, total_lines: Integer, secret_picture_id: Integer, active: (false or true), hashed_email: String, deleted_at: (DateTime or Time), purged_at: (DateTime or Time), secret_words: String, properties: String, invitation_token: String, invitation_created_at: (DateTime or Time), invitation_sent_at: (DateTime or Time), invitation_accepted_at: (DateTime or Time), invitation_limit: Integer, invited_by_id: Integer, invited_by_type: String, invitations_count: Integer, terms_of_service_version: Integer, urm: (false or true), races: String, primary_contact_info_id: Integer, path: String, age: { [s]DashboardStudent#birthday_to_age ret: ret } }
Original: (Integer, { id: Integer, name: String, age: Integer, password: String, gender: String, secrets: String }) -> { id: Integer, studio_person_id: Integer, email: String, parent_email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), username: String, provider: String, uid: String, admin: (false or true), gender: String, name: String, locale: String, birthday: Date, user_type: String, school: String, full_address: String, school_info_id: Integer, total_lines: Integer, secret_picture_id: Integer, active: (false or true), hashed_email: String, deleted_at: (DateTime or Time), purged_at: (DateTime or Time), secret_words: String, properties: String, invitation_token: String, invitation_created_at: (DateTime or Time), invitation_sent_at: (DateTime or Time), invitation_accepted_at: (DateTime or Time), invitation_limit: Integer, invited_by_id: Integer, invited_by_type: String, invitations_count: Integer, terms_of_service_version: Integer, urm: (false or true), races: String, primary_contact_info_id: Integer, path: String, age: (Integer or String) }
# 12
Difference encountered for [s]DashboardSection#update_if_owner.
Inferred: (([ []: (:id) -> { { [s]DashboardSection#update_if_owner arg: params }#[] ret: ret } ] and [ []: (:script) -> { { [s]DashboardSection#update_if_owner arg: params }#[] ret: ret } ] and [ []: (:script_id) -> { { [s]DashboardSection#update_if_owner arg: params }#[] ret: ret } ] and [ []: (:user) -> { { [s]DashboardSection#update_if_owner arg: params }#[] ret: ret } ] and { id: (Array<Integer> or Integer), user: { { [s]DashboardSection#update_if_owner arg: params }#[] ret: ret }, name: [ nil_or_empty?: () -> { { { [s]DashboardSection#update_if_owner arg: params }#[] ret: ret }#nil_or_empty? ret: ret } ], login_type: { { [s]DashboardSection#update_if_owner arg: params }#[] ret: ret }, grade: { { [s]DashboardSection#update_if_owner arg: params }#[] ret: ret }, stage_extras: (false or true), pairing_allowed: (false or true), hidden: [ nil?: () -> { { { [s]DashboardSection#update_if_owner arg: params }#[] ret: ret }#nil? ret: ret } ], course_id: { { [s]DashboardSection#update_if_owner arg: params }#[] ret: ret }, script: { { [s]DashboardSection#update_if_owner arg: params }#[] ret: ret }, script_id: [ !: () -> { { { [s]DashboardSection#update_if_owner arg: params }#[] ret: ret }#! ret: ret } ] })) -> DashboardSection
Original: ({ id: Integer, user: ({ id: Integer, email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), username: String, provider: String, uid: String, admin: (false or true), gender: String, name: String, language: String, birthday: Date, parent_email: String, deleted_at: (DateTime or Time), hashed_email: String, properties: String, user_type: String, school: String, full_address: String, address: String, city: String, state: String, zip: String, lat: Float, lon: Float, total_lines: Integer, secret_words: String, secret_picture_id: Integer, secret_word_1_id: Integer, secret_word_2_id: Integer } or { id: Integer, studio_person_id: Integer, email: String, parent_email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), username: String, provider: String, uid: String, admin: (false or true), gender: String, name: String, locale: String, birthday: Date, user_type: String, school: String, full_address: String, school_info_id: Integer, total_lines: Integer, secret_picture_id: Integer, active: (false or true), hashed_email: String, deleted_at: (DateTime or Time), purged_at: (DateTime or Time), secret_words: String, properties: String, invitation_token: String, invitation_created_at: (DateTime or Time), invitation_sent_at: (DateTime or Time), invitation_accepted_at: (DateTime or Time), invitation_limit: Integer, invited_by_id: Integer, invited_by_type: String, invitations_count: Integer, terms_of_service_version: Integer, urm: (false or true), races: String, primary_contact_info_id: Integer }), name: String, login_type: String, stage_extras: (false or true), hidden: (false or true), course_id: Integer, script: { id: Integer }, grade: String, pairing_allowed: (false or true) }) -> DashboardSection
# 13
Difference encountered for [s]DashboardUserScript#assign_script_to_section.
Inferred: (Integer, (Array<Integer> or Integer)) -> Array<String>
Original: (Integer, Integer) -> Array<String>
# 15
Difference encountered for [s]DashboardSection#fetch_if_allowed.
Inferred: ((Array<Integer> or Integer), Integer) -> DashboardSection
Original: (Integer, Integer) -> DashboardSection
# 17
Difference encountered for [s]DashboardSection#fetch_student_sections.
Inferred: (Integer) -> Array<{ id: { { DashboardSection# var: @row }#[] ret: ret }, location: String, name: { { DashboardSection# var: @row }#[] ret: ret }, login_type: { { DashboardSection# var: @row }#[] ret: ret }, grade: { { DashboardSection# var: @row }#[] ret: ret }, code: { { DashboardSection# var: @row }#[] ret: ret }, stage_extras: { { DashboardSection# var: @row }#[] ret: ret }, pairing_allowed: { { DashboardSection# var: @row }#[] ret: ret }, hidden: { { DashboardSection# var: @row }#[] ret: ret } }>
Original: (Integer) -> Array<{ id: Integer, location: String, name: String, login_type: String, grade: String, code: String, stage_extras: (false or true), pairing_allowed: (false or true), hidden: (false or true) }>
# 19
Difference encountered for DashboardSection#add_student.
Inferred: ({ id: ({ [s]DashboardStudent#create ret: ret } or { { DashboardSection#add_student arg: student }#[] ret: ret }), admin: { { DashboardSection#add_student arg: student }#[] ret: ret }, name: [ to_s: () -> String ], gender: { { [s]DashboardStudent#create arg: params }#[] ret: ret }, age: ([ *: (365) -> { { [s]DashboardStudent#age_to_birthday arg: age }#* ret: ret } ] and [ ==: (0) -> { { [s]DashboardStudent#age_to_birthday arg: age }#== ret: ret } ] and [ to_i: () -> Integer ]), birthday: { { [s]DashboardStudent#create arg: params }#[] ret: ret }, sharing_disabled: [ !: () -> { { { [s]DashboardStudent#create arg: params }#[] ret: ret }#! ret: ret } ] }) -> Integer
Original: ({ name: String, age: Integer, gender: String, birthday: Date, sharing_disabled: (false or true), id: Integer, admin: (false or true) }) -> Integer
# 20
Difference encountered for DashboardSection#add_students.
Inferred: ([ map: () {({ { DashboardSection#add_students arg: students }#map block_arg: i }) -> { { DashboardSection#add_students arg: students }#map block_ret: block_ret }} -> { { DashboardSection#add_students arg: students }#map ret: ret } ]) -> { DashboardSection#add_students ret: ret }
Original: (Array<{ name: String, age: Integer, gender: String, birthday: Date, sharing_disabled: (false or true), id: Integer, admin: (false or true) }>) -> Array<Integer>
Difference encountered for [s]DashboardStudent#create.
Inferred: (([ []: (:age) -> { { [s]DashboardStudent#create arg: params }#[] ret: ret } ] and [ []: (:birthday) -> { { [s]DashboardStudent#create arg: params }#[] ret: ret } ] and [ []: (:gender) -> { { [s]DashboardStudent#create arg: params }#[] ret: ret } ] and [ []: (:name) -> { { [s]DashboardStudent#create arg: params }#[] ret: ret } ] and [ []: (:sharing_disabled) -> { { [s]DashboardStudent#create arg: params }#[] ret: ret } ])) -> Integer
Original: ({ name: String, age: Integer, gender: String, birthday: Date, sharing_disabled: (false or true), id: Integer, admin: (false or true) }) -> Integer
# 22
Difference encountered for [s]DashboardCourseExperiments#course_experiment_map.
Inferred: () -> Hash<Integer, Hash<String, true>>
Original: () -> %any
# 23
Difference encountered for [s]DashboardSection#create.
Inferred: ({ user: { { [s]DashboardSection#create arg: params }#[] ret: ret }, name: [ to_s: () -> String ], login_type: [ to_s: () -> String ], grade: [ to_s: () -> String ], script: { { [s]DashboardSection#create arg: params }#[] ret: ret }, script_id: (Integer or { { [s]DashboardSection#create arg: params }#[] ret: ret }), course_id: { { [s]DashboardSection#create arg: params }#[] ret: ret }, stage_extras: { { [s]DashboardSection#create arg: params }#[] ret: ret }, pairing_allowed: [ nil?: () -> { { { [s]DashboardSection#create arg: params }#[] ret: ret }#nil? ret: ret } ] }) -> Integer
Original: ({ user: { user_type: String, id: Integer }, name: String, login_type: String, grade: String, script: { id: Integer }, script_id: Integer, course_id: Integer, stage_extras: (false or true), pairing_allowed: (false or true) }) -> Integer
# 24
Difference encountered for [s]DashboardSection#valid_default_scripts.
Inferred: (Integer, { [s]DashboardSection#valid_default_scripts arg: with_hidden }) -> (Array<{ [s]DashboardSection#assignable_info ret: ret }> or {  })
Original: (Integer, (false or true)) -> (Array<{ id: Integer, name: String, category: String, script_name: String, position: Integer, category_priority: Integer }> or {  })
# 25
Difference encountered for StorageApps#initialize.
Inferred: (Integer) -> StorageApps
Original: (Integer) -> self
# 27
Difference encountered for StorageApps#create.
Inferred: ([ to_json: () -> { { StorageApps#create arg: value }#to_json ret: ret } ], { ip: String, type: ?String, published_at: ?((DateTime or Time)), remix_parent_id: ?Integer }) -> String
Original: (String, { ip: String, type: ?String, published_at: ?DateTime, remix_parent_id: ?Integer }) -> String
# 29
Difference encountered for StorageApps#delete.
Inferred: ({ StorageApps#delete arg: channel_id }) -> true
Original: (Integer) -> true
# 31 (original was wrong here!)
Difference encountered for StorageApps#publish.
Inferred: ({ StorageApps#publish arg: channel_id }, String, User) -> { channel: { [s]StorageApps#get_published_project_data arg: channel_id }, name: Object, thumbnailUrl: { [s]StorageApps#make_thumbnail_url_cacheable ret: ret }, type: { { [s]StorageApps#get_published_project_data arg: project }#[] ret: ret }, publishedAt: { { [s]StorageApps#get_published_project_data arg: project }#[] ret: ret }, studentName: { [s]UserHelpers#initial ret: ret }, studentAgeRange: { [s]UserHelpers#age_range_from_birthday ret: ret } }
Original: (Integer, String, { name: String, birthday: DateTime }) -> { channel: Integer, name: String, thumbnailUrl: String, type: String, publishedAt: DateTime, studentName: (String or { name: String, birthday: DateTime }), studentAgeRange: (String or { name: String, birthday: DateTime }) }
# 33
Difference encountered for StorageApps#unpublish.
Inferred: ({ StorageApps#unpublish arg: channel_id }) -> nil
Original: (Integer) -> Integer
# 34
Difference encountered for StorageApps#get_abuse.
Inferred: ({ StorageApps#get_abuse arg: channel_id }) -> { StorageApps#get_abuse ret: ret }
Original: (Integer) -> Integer
# 35
Difference encountered for StorageApps#get_sharing_disabled.
Inferred: ({ StorageApps#get_sharing_disabled arg: channel_id }, Integer) -> (false or true)
Original: (Integer, Integer) -> (false or true)
# 38 (original was wrong!
Difference encountered for StorageApps#increment_abuse.
Inferred: ({ StorageApps#increment_abuse arg: channel_id }) -> { StorageApps#increment_abuse ret: ret }
Original: (Integer) -> Integer
# 39 (original was wrong!)
Difference encountered for StorageApps#reset_abuse.
Inferred: ({ StorageApps#reset_abuse arg: channel_id }) -> 0
Original: (Integer) -> Integer
# 41 (original was wrong!)
Difference encountered for Dashboard::User#initialize.
Inferred: (([ []: (:admin) -> { { Dashboard::User# var: @row }#[] ret: ret } ] and { id: Integer, studio_person_id: Integer, email: String, parent_email: String, encrypted_password: String, reset_password_token: String, reset_password_sent_at: (DateTime or Time), remember_created_at: (DateTime or Time), sign_in_count: Integer, current_sign_in_at: (DateTime or Time), last_sign_in_at: (DateTime or Time), current_sign_in_ip: String, last_sign_in_ip: String, created_at: (DateTime or Time), updated_at: (DateTime or Time), username: String, provider: String, uid: String, admin: (false or true), gender: String, name: String, locale: String, birthday: Date, user_type: String, school: String, full_address: String, school_info_id: Integer, total_lines: Integer, secret_picture_id: Integer, active: (false or true), hashed_email: String, deleted_at: (DateTime or Time), purged_at: (DateTime or Time), secret_words: String, properties: String, invitation_token: String, invitation_created_at: (DateTime or Time), invitation_sent_at: (DateTime or Time), invitation_accepted_at: (DateTime or Time), invitation_limit: Integer, invited_by_id: Integer, invited_by_type: String, invitations_count: Integer, terms_of_service_version: Integer, urm: (false or true), races: String, primary_contact_info_id: Integer })) -> Dashboard::User
Original: (``fht(targs[0])``) -> self
# 43
Difference encountered for [s]DashboardStudent#encrypt_password.
Inferred: ({ [s]DashboardStudent#encrypt_password arg: password }) -> %any
Original: (String) -> String
Difference encountered for [s]DashboardStudent#valid_gender?.
Inferred: ({ [s]DashboardStudent#valid_gender? arg: gender }) -> (false or true)
Original: (String) -> (false or true)
# 45
Difference encountered for [s]DashboardStudent#birthday_to_age.
Inferred: ([ nil?: () -> { { [s]DashboardStudent#birthday_to_age arg: birthday }#nil? ret: ret } ]) -> ('21+' or Integer)
Original: (Date) -> (Integer or String)
# 46
Difference encountered for [s]DashboardStudent#age_to_birthday.
Inferred: (([ *: (365) -> { { [s]DashboardStudent#age_to_birthday arg: age }#* ret: ret } ] and [ ==: (0) -> { { [s]DashboardStudent#age_to_birthday arg: age }#== ret: ret } ] and [ to_i: () -> Integer ])) -> nil
Original: ((Integer or String)) -> Date
Difference encountered for [s]DashboardSection#valid_login_type?.
Inferred: ({ [s]DashboardSection#valid_login_type? arg: login_type }) -> (false or true)
Original: (String) -> (false or true)
# 47
Difference encountered for [s]DashboardSection#valid_grade?.
Inferred: ({ [s]DashboardSection#valid_grade? arg: grade }) -> (false or true)
Original: (String) -> (false or true)
# 48
Difference encountered for DashboardSection#to_member_hash.
Inferred: () -> { id: { { DashboardSection# var: @row }#[] ret: ret }, location: String, name: { { DashboardSection# var: @row }#[] ret: ret }, login_type: { { DashboardSection# var: @row }#[] ret: ret }, grade: { { DashboardSection# var: @row }#[] ret: ret }, code: { { DashboardSection# var: @row }#[] ret: ret }, stage_extras: { { DashboardSection# var: @row }#[] ret: ret }, pairing_allowed: { { DashboardSection# var: @row }#[] ret: ret }, hidden: { { DashboardSection# var: @row }#[] ret: ret } }
Original: () -> { id: Integer, location: String, name: String, login_type: String, grade: String, code: String, stage_extras: (false or true), pairing_allowed: (false or true), hidden: (false or true) }
Difference encountered for DashboardSection#to_owner_hash.
Inferred: () -> { id: { { DashboardSection# var: @row }#[] ret: ret }, location: String, name: { { DashboardSection# var: @row }#[] ret: ret }, login_type: { { DashboardSection# var: @row }#[] ret: ret }, grade: { { DashboardSection# var: @row }#[] ret: ret }, code: { { DashboardSection# var: @row }#[] ret: ret }, stage_extras: { { DashboardSection# var: @row }#[] ret: ret }, pairing_allowed: { { DashboardSection# var: @row }#[] ret: ret }, hidden: { { DashboardSection# var: @row }#[] ret: ret }, script: { DashboardSection#script ret: ret }, course_id: { { DashboardSection# var: @row }#[] ret: ret }, teachers: { DashboardSection#teachers ret: ret }, students: { DashboardSection#students ret: ret }, studentCount: { { DashboardSection#students ret: ret }#count ret: ret } }
Original: () -> { id: Integer, location: String, name: String, login_type: String, grade: String, code: String, stage_extras: (false or true), pairing_allowed: (false or true), hidden: (false or true), script: { id: Integer }, teachers: { id: Integer, location: String }, students: {  }, studentCount: Integer }
Difference encountered for DashboardSection#initialize.
Inferred: ({ DashboardSection#initialize arg: row }) -> DashboardSection
Original: (%any) -> self
# 50
Difference encountered for [s]UserHelpers#generate_username.
Inferred: (([ respond_to?: (:connection) -> { { [s]UserHelpers#generate_username arg: queryable }#respond_to? ret: ret } ] and [ where: ({ username: (String or { { { { { { [s]UserHelpers#generate_username arg: name }#downcase ret: ret }#gsub ret: ret }#[] ret: ret }#squish ret: ret }#tr ret: ret }) }) -> { { [s]UserHelpers#generate_username arg: queryable }#where ret: ret } ]), String) -> String
Original: (%any, String) -> String
# 53
Difference encountered for [s]DashboardSection#assignable_info.
Inferred: ({ [s]DashboardSection#assignable_info arg: hidden }, { [s]DashboardSection#assignable_info arg: course_or_script }) -> { [s]DashboardSection#assignable_info ret: ret }
Original: ((false or true), { name: String, hidden: (false or true), id: Integer }) -> { id: Integer, name: String, category: String, script_name: String, position: Integer, category_priority: Integer }
Difference encountered for Object#storage_decrypt_channel_id.
Inferred: ({ Object#storage_decrypt_channel_id arg: encrypted }) -> [{ Object#storage_decrypt_channel_id tuple_element: tuple_element_0 }, { Object#storage_decrypt_channel_id tuple_element: tuple_element_0 }]
Original: (Integer) -> [Integer, Integer]
# 54 (original was wrong!)
Difference encountered for [s]StorageApps#get_published_project_data.
Inferred: (Integer, ([ []: (:published_at) -> { { [s]StorageApps#get_published_project_data arg: project }#[] ret: ret } ] and { value: String, project_type: { { [s]StorageApps#get_published_project_data arg: project }#[] ret: ret }, published_at: { { [s]StorageApps#get_published_project_data arg: project }#[] ret: ret } })) -> { channel: { [s]StorageApps#get_published_project_data arg: channel_id }, name: Object, thumbnailUrl: { [s]StorageApps#make_thumbnail_url_cacheable ret: ret }, type: { { [s]StorageApps#get_published_project_data arg: project }#[] ret: ret }, publishedAt: { { [s]StorageApps#get_published_project_data arg: project }#[] ret: ret } }
Original: (Integer, { id: Integer, storage_id: Integer, value: String, updated_at: (DateTime or Time), updated_ip: String, state: String, created_at: (DateTime or Time), abuse_score: Integer, project_type: String, published_at: (DateTime or Time), standalone: (false or true), remix_parent_id: Integer }) -> { channel: Integer, name: String, thumbnailUrl: String, type: String, publishedAt: DateTime }
# 55
Difference encountered for [s]UserHelpers#age_range_from_birthday.
Inferred: ({ [s]UserHelpers#age_range_from_birthday arg: birthday }) -> nil
Original: (DateTime) -> String
# 56
Difference encountered for Object#user_storage_ids_table.
Inferred: () -> Table<{ id: Integer, user_id: Integer, __selected: nil, __last_joined: :user_storage_ids, __all_joined: :user_storage_ids, __orm: false }>
Original: () -> ``Sequel::Mysql2::Database.gen_output_type(RDL::Type::SingletonType.new(:user_storage_ids))``
# 57 manually counted correct
Total correct (that could be automatically inferred): 64
Total potential types: 164


# Final: 121/164
